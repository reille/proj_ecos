# eCos saved configuration

# ---- commands --------------------------------------------------------
# This section contains information about the savefile format.
# It should not be edited. Any modifications made to this section
# may make it impossible for the configuration tools to read
# the savefile.

cdl_savefile_version 1;
cdl_savefile_command cdl_savefile_version {};
cdl_savefile_command cdl_savefile_command {};
cdl_savefile_command cdl_configuration { description hardware template package };
cdl_savefile_command cdl_package { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_component { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_option { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_interface { value_source user_value wizard_value inferred_value };

# ---- toplevel --------------------------------------------------------
# This section defines the toplevel configuration object. The only
# values that can be changed are the name of the configuration and
# the description field. It is not possible to modify the target,
# the template or the set of packages simply by editing the lines
# below because these changes have wide-ranging effects. Instead
# the appropriate tools should be used to make such modifications.

cdl_configuration eCos {
    description "" ;

    # These fields should not be modified.
    hardware    stm32f10xxx ;
    template    redboot ;
    package -hardware CYGPKG_HAL_CORTEXM current ;
    package -hardware CYGPKG_HAL_CORTEXM_STM32 current ;
    package -hardware CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX current ;
    package -hardware CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2 current ;
    package -hardware CYGPKG_DEVS_FLASH_STM32 current ;
    package -hardware CYGPKG_DEVS_FLASH_SPI_M25PXX current ;
    package -hardware CYGPKG_IO_SERIAL_CORTEXM_STM32 current ;
    package -hardware CYGPKG_DEVS_WALLCLOCK_STM32 current ;
    package -hardware CYGPKG_IO_SPI current ;
    package -hardware CYGPKG_DEVS_SPI_CORTEXM_STM32 current ;
    package -hardware CYGPKG_IO_ADC current ;
    package -hardware CYGPKG_DEVS_ADC_CORTEXM_STM32 current ;
    package -hardware CYGPKG_IO_USB current ;
    package -hardware CYGPKG_IO_USB_SLAVE current ;
    package -hardware CYGPKG_DEVS_USB_CORTEXM_STM32 current ;
    package -hardware CYGPKG_IO_FLASH current ;
    package -hardware CYGPKG_DEVS_FRAMEBUF_STM32 current ;
    package -hardware CYGPKG_DEVS_TOUCH_SPI_TSC2046 current ;
    package -hardware CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX current ;
    package -hardware CYGPKG_IO_ETH_DRIVERS current ;
    package -hardware CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX current ;
    package -hardware CYGPKG_DEVS_ETH_DAVICOM_DM9000 current ;
    package -template CYGPKG_HAL current ;
    package -template CYGPKG_INFRA current ;
    package -template CYGPKG_REDBOOT current ;
    package -template CYGPKG_ISOINFRA current ;
    package -template CYGPKG_LIBC_STRING current ;
    package -template CYGPKG_CRC current ;
};

# ---- conflicts -------------------------------------------------------
# There are no conflicts.

# ---- contents --------------------------------------------------------
# >
# >
# Global build options
# Global build options including control over
# compiler flags, linker flags and choice of toolchain.
#
cdl_component CYGBLD_GLOBAL_OPTIONS {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Global command prefix
# This option specifies the command prefix used when
# invoking the build tools.
#
cdl_option CYGBLD_GLOBAL_COMMAND_PREFIX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value arm-eabi
    # value_source default
    # Default value: arm-eabi
};

# Global compiler flags
# This option controls the global compiler flags which are used to
# compile all packages by default. Individual packages may define
# options which override these global flags.
#
cdl_option CYGBLD_GLOBAL_CFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    # value_source default
    # Default value:  CYGBLD_GLOBAL_WARNFLAGS . "-mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions" 
    #     CYGBLD_GLOBAL_WARNFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings "
    #   --> "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # option CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS
    #     Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -Werror") 
    # option CYGBLD_INFRA_CFLAGS_PIPE
    #     Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -pipe") 
};

# Global linker flags
# This option controls the global linker flags. Individual
# packages may define options which override these global flags.
#
cdl_option CYGBLD_GLOBAL_LDFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    # value_source default
    # Default value: "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# Standard compiler warning flags
# This option specifies the default warning-related compiler flags used
# on all eCos platforms.
#
cdl_option CYGBLD_GLOBAL_WARNFLAGS {
    # Calculated value:  "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings " 
    # Flavor: data
    # Current_value: -Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings 

    # The following properties are affected by this value
    # option CYGBLD_GLOBAL_CFLAGS
    #     DefaultValue:  CYGBLD_GLOBAL_WARNFLAGS . "-mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions" 
};

# Build common GDB stub ROM image
# Unless a target board has specific requirements to the
# stub implementation, it can use a simple common stub.
# This option, which gets enabled by platform HALs as
# appropriate, controls the building of the common stub.
#
cdl_option CYGBLD_BUILD_COMMON_GDB_STUBS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGBLD_HAL_CORTEXM_STM32F10XXX_GDB_STUBS
    #     ActiveIf: CYGBLD_BUILD_COMMON_GDB_STUBS
};

# <
# ST STM32 serial device drivers
# This option enables the serial device drivers for the
# ST STM32.
#
cdl_package CYGPKG_IO_SERIAL_CORTEXM_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL
    #     CYGPKG_IO_SERIAL (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR (unknown) == 0
    #   --> 0
};

# >
# ST STM32 serial port 0 driver
# This option includes the serial device driver for the ST STM32 
# port 0.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGINT_HAL_STM32_UART0>0
    #     CYGINT_HAL_STM32_UART0 == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
    # option CYGPRI_SER_TEST_TTY_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? "\"/dev/tty0\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? "\"/dev/tty1\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? "\"/dev/tty2\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? "\"/dev/tty3\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? "\"/dev/tty4\"" :  "\"/dev/tty5\"" 
};

# >
# Device name for ST STM32 serial port 0 driver
# This option specifies the name of the serial device for the 
# ST STM32 port 0.
#
cdl_option CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser0\""
    # value_source default
    # Default value: "\"/dev/ser0\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
};

# Baud rate for the ST STM32 serial port 0 driver
# This option specifies the default baud rate (speed) for the 
# ST STM32 port 0.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL0_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value:  CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD 
    #     CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD == 115200
    #   --> 115200
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the ST STM32 serial port 0 driver
# This option specifies the size of the internal buffers used 
# for the ST STM32 port 0.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL0_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority for STM32 serial port 0
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL0_INT_PRI {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 255
};

# <
# ST STM32 serial port 1 driver
# This option includes the serial device driver for the ST STM32 
# port 1.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGINT_HAL_STM32_UART1>0
    #     CYGINT_HAL_STM32_UART1 == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
    # option CYGPRI_SER_TEST_TTY_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? "\"/dev/tty0\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? "\"/dev/tty1\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? "\"/dev/tty2\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? "\"/dev/tty3\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? "\"/dev/tty4\"" :  "\"/dev/tty5\"" 
};

# >
# Device name for ST STM32 serial port 1 driver
# This option specifies the name of the serial device for the 
# ST STM32 port 1.
#
cdl_option CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
};

# Baud rate for the ST STM32 serial port 1 driver
# This option specifies the default baud rate (speed) for the
# ST STM32 port 1.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL1_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    #     CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD == 115200
    #   --> 115200
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the ST STM32 serial port 1 driver
# This option specifies the size of the internal buffers used 
# for the ST STM32 port 1.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL1_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority for STM32 serial port 1
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL1_INT_PRI {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 255
};

# <
# ST STM32 serial port 2 driver
# This option includes the serial device driver for the ST STM32 
# port 2.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_STM32_UART2>0
    #     CYGINT_HAL_STM32_UART2 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
    # option CYGPRI_SER_TEST_TTY_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? "\"/dev/tty0\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? "\"/dev/tty1\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? "\"/dev/tty2\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? "\"/dev/tty3\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? "\"/dev/tty4\"" :  "\"/dev/tty5\"" 
};

# >
# Device name for ST STM32 serial port 2 driver
# This option specifies the name of the serial device for the 
# ST STM32 port 2.
#
cdl_option CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser2\""
    # value_source default
    # Default value: "\"/dev/ser2\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
};

# Baud rate for the ST STM32 serial port 2 driver
# This option specifies the default baud rate (speed) for the
# ST STM32 port 2.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL2_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    #     CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD == 115200
    #   --> 115200
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the ST STM32 serial port 2 driver
# This option specifies the size of the internal buffers used 
# for the ST STM32 port 2.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL2_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority for STM32 serial port 2
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL2_INT_PRI {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 255
};

# <
# ST STM32 serial port 3 driver
# This option includes the serial device driver for the ST STM32 
# port 3.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_STM32_UART3>0
    #     CYGINT_HAL_STM32_UART3 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
    # option CYGPRI_SER_TEST_TTY_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? "\"/dev/tty0\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? "\"/dev/tty1\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? "\"/dev/tty2\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? "\"/dev/tty3\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? "\"/dev/tty4\"" :  "\"/dev/tty5\"" 
};

# >
# Device name for ST STM32 serial port 3 driver
# This option specifies the name of the serial device for the 
# ST STM32 port 3.
#
cdl_option CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser3\""
    # value_source default
    # Default value: "\"/dev/ser3\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
};

# Baud rate for the ST STM32 serial port 3 driver
# This option specifies the default baud rate (speed) for the
# ST STM32 port 3.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL3_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    #     CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD == 115200
    #   --> 115200
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the ST STM32 serial port 3 driver
# This option specifies the size of the internal buffers used 
# for the ST STM32 port 3.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL3_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority for STM32 serial port 3
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL3_INT_PRI {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 255
};

# <
# ST STM32 serial port 4 driver
# This option includes the serial device driver for the ST STM32 
# port 4.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_STM32_UART4>0
    #     CYGINT_HAL_STM32_UART4 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
    # option CYGPRI_SER_TEST_TTY_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? "\"/dev/tty0\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? "\"/dev/tty1\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? "\"/dev/tty2\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? "\"/dev/tty3\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? "\"/dev/tty4\"" :  "\"/dev/tty5\"" 
};

# >
# Device name for ST STM32 serial port 4 driver
# This option specifies the name of the serial device for the 
# ST STM32 port 4.
#
cdl_option CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser4\""
    # value_source default
    # Default value: "\"/dev/ser4\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
};

# Baud rate for the ST STM32 serial port 4 driver
# This option specifies the default baud rate (speed) for the
# ST STM32 port 4.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL4_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    #     CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD == 115200
    #   --> 115200
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the ST STM32 serial port 4 driver
# This option specifies the size of the internal buffers used 
# for the ST STM32 port 4.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL4_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority for STM32 serial port 4
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL4_INT_PRI {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 255
};

# <
# ST STM32 serial port 5 driver
# This option includes the serial device driver for the ST STM32 
# port 5.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_STM32_UART5>0
    #     CYGINT_HAL_STM32_UART5 == 0
    #   --> 0
};

# >
# Device name for ST STM32 serial port 5 driver
# This option specifies the name of the serial device for the 
# ST STM32 port 5.
#
cdl_option CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser5\""
    # value_source default
    # Default value: "\"/dev/ser5\""

    # The following properties are affected by this value
    # option CYGPRI_SER_TEST_SER_DEV
    #     DefaultValue:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
};

# Baud rate for the ST STM32 serial port 5 driver
# This option specifies the default baud rate (speed) for the
# ST STM32 port 5.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL5_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    #     CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD == 115200
    #   --> 115200
    # Legal values:  50 75 110 "134_5" 150 200 300 600 1200 1800 2400 3600
    #                           4800 7200 9600 14400 19200 38400 57600 115200 230400
    #             
};

# Buffer size for the ST STM32 serial port 5 driver
# This option specifies the size of the internal buffers used 
# for the ST STM32 port 5.
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL5_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Interrupt priority for STM32 serial port 5
#
cdl_option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL5_INT_PRI {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 255
};

# <
# Serial device driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_OPTIONS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_IO_SERIAL_CORTEXM_STM32_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_IO_SERIAL_CORTEXM_STM32_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# Testing parameters
#
cdl_component CYGPKG_IO_SERIAL_CORTEXM_STM32_TESTING {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32 is not active

    # There is no associated value.
};

# >
# Serial device used for testing
#
cdl_option CYGPRI_SER_TEST_SER_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_TESTING is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME :  CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME 
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 == 0
    #     CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL0_NAME == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 == 0
    #     CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL1_NAME == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 == 0
    #     CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL2_NAME == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 == 0
    #     CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL3_NAME == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 == 0
    #     CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL4_NAME == 0
    #     CYGDAT_IO_SERIAL_CORTEXM_STM32_SERIAL5_NAME == 0
    #   --> 0
};

# TTY-mode serial device used for testing
#
cdl_option CYGPRI_SER_TEST_TTY_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_CORTEXM_STM32_TESTING is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/tty5\""
    # value_source default
    # Default value:  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 ? "\"/dev/tty0\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 ? "\"/dev/tty1\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 ? "\"/dev/tty2\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 ? "\"/dev/tty3\"" :  CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 ? "\"/dev/tty4\"" :  "\"/dev/tty5\"" 
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0 == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1 == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2 == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3 == 0
    #     CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4 == 0
    #   --> "\"/dev/tty5\""
};

# <
# <
# STM32 RTC wallclock support
# Wallclock support for on-chip RTC on STM32 devices.
#
cdl_package CYGPKG_DEVS_WALLCLOCK_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_WALLCLOCK
    #     CYGPKG_IO_WALLCLOCK (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1" 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 1
    # ActiveIf constraint: CYGIMP_WALLCLOCK_HARDWARE
    #     CYGIMP_WALLCLOCK_HARDWARE == 1
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# RTC clock source
#
cdl_option CYGHWR_DEVS_WALLCLOCK_STM32_RTC_SOURCE {
    # This option is not active
    # The parent CYGPKG_DEVS_WALLCLOCK_STM32 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value LSE
    # value_source default
    # Default value: LSE
    # Legal values:  "LSE" "LSI" "HSE_128" 
};

# <
# Hardware wallclock
#
cdl_option CYGIMP_WALLCLOCK_HARDWARE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_WALLCLOCK_STM32
    #     ActiveIf: CYGIMP_WALLCLOCK_HARDWARE
};

# ADC device drivers
# doc: ref/io-adc.html
# This option enables drivers for basic I/O services on
# ADC devices.
#
cdl_package CYGPKG_IO_ADC {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR (unknown) == 0
    #   --> 0
};

# >
# Hardware ADC device drivers
# This option enables the hardware device drivers
# for the current platform.
#
cdl_component CYGPKG_IO_ADC_DEVICES {
    # This option is not active
    # The parent CYGPKG_IO_ADC is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ADC_CORTEXM_STM32
    #     ActiveIf: CYGPKG_IO_ADC_DEVICES
};

# >
# ST STM32 ADC device driver
# This option enables the ADC device drivers for the ST STM32. The STM32
# has up to 3 ADC devices. The driver supports both ADC1 and ADC3. ADC2
# is not supported as it does cover the same inputs as ADC2 and does not
# support DMA directly.
#
cdl_package CYGPKG_DEVS_ADC_CORTEXM_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # The parent CYGPKG_IO_ADC_DEVICES is not active
    # The parent CYGPKG_IO_ADC_DEVICES is disabled
    # ActiveIf constraint: CYGPKG_IO_ADC_DEVICES
    #     CYGPKG_IO_ADC_DEVICES == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGNUM_IO_ADC_SAMPLE_SIZE >= 12
    #     CYGNUM_IO_ADC_SAMPLE_SIZE == 0
    #   --> 0
};

# >
# ADC driver tracing
# Enable tracing of the ADC driver. Select to debug the driver.
#
cdl_option CYGPKG_DEVS_ADC_CORTEXM_STM32_TRACE {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ADC clock divider
# This option specifies the ADC clock divider value. The 
# ADC clock frequency is defined as PCLK2 / ADC divider. 
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_CLOCK_DIV {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_CORTEXM_STM32 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values:  2 4 6 8 
};

# ADC1
# ADC1 supports 16 analog input channels as well as additional
# channels for CPU temperature and internal VREF. This is a total of
# 18 channels. Note that only 16 channels may be active at once!
# ADC1 uses TIM3 to generate scan events and DMA1 channel 1 for data
# transmission.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Number of ADC channels
#
cdl_interface CYGINT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNELS {
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL0, inactive, enabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17, inactive, disabled
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
};

# Sample time
# Sampling time in us. When sampling the internal temperatur,
# this needs to be at least 17.1 us.
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_ADC1_SAMPLE_TIME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 20
    # value_source default
    # Default value: 20
    # Legal values: 1 to 1000
};

# Default sample rate
# The driver will be initialized with the default sample rate.
# If you raise the default sample rate you might need to increase
# the buffer size for each channel.
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_ADC1_DEFAULT_RATE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values: 1 to 10000
};

# DMA interrupt priority
# Priority of the DMA request interrupt.
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_ADC1_DMA_INT_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# ADC channel 0
# If the application needs to access the on-chip ADC
# channel 0 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL0 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL0_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc00\""
    # value_source default
    # Default value: "\"/dev/adc00\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL0_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 1
# If the application needs to access the on-chip ADC
# channel 1 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc01\""
    # value_source default
    # Default value: "\"/dev/adc01\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 2
# If the application needs to access the on-chip ADC
# channel 2 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc02\""
    # value_source default
    # Default value: "\"/dev/adc02\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 3
# If the application needs to access the on-chip ADC
# channel 3 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc03\""
    # value_source default
    # Default value: "\"/dev/adc03\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 4
# If the application needs to access the on-chip ADC
# channel 4 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc04\""
    # value_source default
    # Default value: "\"/dev/adc04\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 5
# If the application needs to access the on-chip ADC
# channel 5 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc05\""
    # value_source default
    # Default value: "\"/dev/adc05\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 6
# If the application needs to access the on-chip ADC
# channel 6 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc06\""
    # value_source default
    # Default value: "\"/dev/adc06\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL6 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 7
# If the application needs to access the on-chip ADC
# channel 7 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc07\""
    # value_source default
    # Default value: "\"/dev/adc07\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL7 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 8
# If the application needs to access the on-chip ADC
# channel 8 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc08\""
    # value_source default
    # Default value: "\"/dev/adc08\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL8 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 9
# If the application needs to access the on-chip ADC
# channel 9 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc09\""
    # value_source default
    # Default value: "\"/dev/adc09\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL9 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 10
# If the application needs to access the on-chip ADC
# channel 10 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc010\""
    # value_source default
    # Default value: "\"/dev/adc010\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL10 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 11
# If the application needs to access the on-chip ADC
# channel 11 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc011\""
    # value_source default
    # Default value: "\"/dev/adc011\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL11 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 12
# If the application needs to access the on-chip ADC
# channel 12 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc012\""
    # value_source default
    # Default value: "\"/dev/adc012\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL12 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 13
# If the application needs to access the on-chip ADC
# channel 13 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc013\""
    # value_source default
    # Default value: "\"/dev/adc013\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL13 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 14
# If the application needs to access the on-chip ADC
# channel 14 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc014\""
    # value_source default
    # Default value: "\"/dev/adc014\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL14 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 15
# If the application needs to access the on-chip ADC
# channel 15 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc015\""
    # value_source default
    # Default value: "\"/dev/adc015\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL15 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 16
# If the application needs to access the on-chip ADC
# channel 16 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc016\""
    # value_source default
    # Default value: "\"/dev/adc016\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL16 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 17
# If the application needs to access the on-chip ADC
# channel 17 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc017\""
    # value_source default
    # Default value: "\"/dev/adc017\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC1_CHANNEL17 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# <
# ADC3
# ADC3 supports 16 analog input channels. All channels may be active
# at once. ADC3 uses TIM8 to generate scan events and DMA2 channel 5
# for data transmission.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 {
    # This option is not active
    # The parent CYGPKG_DEVS_ADC_CORTEXM_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Number of ADC channels
#
cdl_interface CYGINT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNELS {
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL0, inactive, enabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14, inactive, disabled
    # Implemented by CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15, inactive, disabled
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
};

# Sample time
# Sampling time in us. When sampling the internal temperatur,
# this needs to be at least 17.1 us.
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_ADC3_SAMPLE_TIME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 20
    # value_source default
    # Default value: 20
    # Legal values: 1 to 1000
};

# Default sample rate
# The driver will be initialized with the default sample rate.
# If you raise the default sample rate you might need to increase
# the buffer size for each channel.
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_ADC3_DEFAULT_RATE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values: 1 to 10000
};

# DMA interrupt priority
# Priority of the DMA request interrupt.
#
cdl_option CYGNUM_DEVS_ADC_CORTEXM_STM32_ADC3_DMA_INT_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# ADC channel 0
# If the application needs to access the on-chip ADC
# channel 0 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL0 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL0_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc10\""
    # value_source default
    # Default value: "\"/dev/adc10\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL0_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 1
# If the application needs to access the on-chip ADC
# channel 1 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc11\""
    # value_source default
    # Default value: "\"/dev/adc11\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 2
# If the application needs to access the on-chip ADC
# channel 2 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc12\""
    # value_source default
    # Default value: "\"/dev/adc12\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 3
# If the application needs to access the on-chip ADC
# channel 3 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc13\""
    # value_source default
    # Default value: "\"/dev/adc13\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 4
# If the application needs to access the on-chip ADC
# channel 4 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc14\""
    # value_source default
    # Default value: "\"/dev/adc14\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 5
# If the application needs to access the on-chip ADC
# channel 5 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc15\""
    # value_source default
    # Default value: "\"/dev/adc15\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 6
# If the application needs to access the on-chip ADC
# channel 6 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc16\""
    # value_source default
    # Default value: "\"/dev/adc16\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL6 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 7
# If the application needs to access the on-chip ADC
# channel 7 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc17\""
    # value_source default
    # Default value: "\"/dev/adc17\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL7 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 8
# If the application needs to access the on-chip ADC
# channel 8 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc18\""
    # value_source default
    # Default value: "\"/dev/adc18\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL8 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 9
# If the application needs to access the on-chip ADC
# channel 9 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc19\""
    # value_source default
    # Default value: "\"/dev/adc19\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL9 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 10
# If the application needs to access the on-chip ADC
# channel 10 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc110\""
    # value_source default
    # Default value: "\"/dev/adc110\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL10 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 11
# If the application needs to access the on-chip ADC
# channel 11 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc111\""
    # value_source default
    # Default value: "\"/dev/adc111\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL11 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 12
# If the application needs to access the on-chip ADC
# channel 12 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc112\""
    # value_source default
    # Default value: "\"/dev/adc112\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL12 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 13
# If the application needs to access the on-chip ADC
# channel 13 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc113\""
    # value_source default
    # Default value: "\"/dev/adc113\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL13 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 14
# If the application needs to access the on-chip ADC
# channel 14 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc114\""
    # value_source default
    # Default value: "\"/dev/adc114\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL14 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# ADC channel 15
# If the application needs to access the on-chip ADC
# channel 15 via an eCos ADC driver then
# this option should be enabled.
#
cdl_component CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15 {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Device name
# This option controls the name that an eCos application
# should use to access this device via cyg_io_lookup(),
# open(), or similar calls.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15_NAME {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/adc115\""
    # value_source default
    # Default value: "\"/dev/adc115\""
};

# Size of data buffer
# This option controls the number of samples the
# buffer can store. The required RAM is = size of
# data buffer * 2.
#
cdl_option CYGDAT_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15_BUFSIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15 is not active
    # The parent CYGHWR_DEVS_ADC_CORTEXM_STM32_ADC3_CHANNEL15 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 1 to 65536
};

# <
# <
# <
# <
# Sample size
# This option defines the sample size for the ADC devices.
# Given in bits, it will be rounded up to 8, 16 or 32 to define
# the cyg_adc_sample_t type.
#
cdl_option CYGNUM_IO_ADC_SAMPLE_SIZE {
    # This option is not active
    # The parent CYGPKG_IO_ADC is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values: 0 to 32

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ADC_CORTEXM_STM32
    #     Requires: CYGNUM_IO_ADC_SAMPLE_SIZE >= 12
};

# Enable ADC device select support
# This option enables support for the select() API function on all
# ADC devices.
#
cdl_option CYGPKG_IO_ADC_SELECT_SUPPORT {
    # This option is not active
    # The parent CYGPKG_IO_ADC is not active
    # ActiveIf constraint: CYGPKG_IO_FILEIO
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  CYGFUN_IO_FILEIO_SELECT == 1 
    #     CYGFUN_IO_FILEIO_SELECT (unknown) == 0
    #   --> 0
};

# ADC device driver tests
# This option specifies the set of tests for the ADC device drivers.
#
cdl_component CYGPKG_IO_ADC_TESTS {
    # This option is not active
    # The parent CYGPKG_IO_ADC is not active

    # Calculated value:  "tests/adc1 tests/adc2" 
    # Flavor: data
    # Current_value: tests/adc1 tests/adc2
};

# >
# ADC performance test rate
# This option specifies the sampling rate used for the ADC device
# driver performance test.
#
cdl_option CYGNUM_IO_ADC_PERFORMANCE_TEST_RATE {
    # This option is not active
    # The parent CYGPKG_IO_ADC_TESTS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1000
    # value_source default
    # Default value: 1000
    # Legal values: 1 to 10000
};

# <
# <
# USB Support
#
cdl_package CYGPKG_IO_USB {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_DEVS_USB_CORTEXM_STM32
    #     ActiveIf: CYGPKG_IO_USB
};

# >
# Availability of USB host-side hardware
#
cdl_interface CYGHWR_IO_USB_HOST {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Availability of USB slave-side hardware
#
cdl_interface CYGHWR_IO_USB_SLAVE {
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_CTRLEP0, inactive, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # package CYGPKG_IO_USB_SLAVE
    #     ActiveIf: CYGHWR_IO_USB_SLAVE
};

# USB slave-side support
# doc: ref/io-usb-slave.html
#
cdl_package CYGPKG_IO_USB_SLAVE {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGHWR_IO_USB_SLAVE
    #     CYGHWR_IO_USB_SLAVE == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_EP0
    #     Requires: CYGPKG_IO_USB_SLAVE
};

# >
# Number of clients of USB devices
# This counter keeps track of the number of clients of
# USB devices, especially application-class packages such
# as the USB-ethernet support. It can be used by USB
# device drivers for default settings.
# 
#
cdl_interface CYGINT_IO_USB_SLAVE_CLIENTS {
    # Implemented by CYGGLO_IO_USB_SLAVE_APPLICATION, inactive, disabled
    # Implemented by CYGBLD_IO_USB_SLAVE_USBTEST, inactive, disabled
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_EP0
    #     DefaultValue: CYGINT_IO_USB_SLAVE_CLIENTS
};

# Application code uses USB devices
# If the USB devices are accessed by application code
# rather than by other packages then enabling this
# option will cause the USB device drivers to be enabled. 
# 
#
cdl_option CYGGLO_IO_USB_SLAVE_APPLICATION {
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide devtab entries by default
# The USB slave-side endpoints can typically be accessed in two
# different ways. There is support for the traditional way of
# doing I/O with open/read/write calls, which involves the
# use of devtab entries. It is also possible to use a
# USB-specific API, defined largely in terms of asynchronous
# operations and callbacks (the read/write implementation uses
# these lower-level calls). If neither the application nor
# any other USB-related packages require the higher-level
# read/write calls then it is possible to save some memory
# by eliminating the devtab entries.
# 
#
cdl_option CYGGLO_IO_USB_SLAVE_PROVIDE_DEVTAB_ENTRIES {
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_EP0
    #     Requires: !CYGGLO_IO_USB_SLAVE_PROVIDE_DEVTAB_ENTRIES
};

# Number of available host->slave endpoints
#
cdl_interface CYGHWR_IO_USB_SLAVE_OUT_ENDPOINTS {
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3, active, enabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4, active, enabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7, inactive, disabled
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
};

# Number of available slave->host endpoints
#
cdl_interface CYGHWR_IO_USB_SLAVE_IN_ENDPOINTS {
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP1, active, enabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP2, active, enabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP3, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP4, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP5, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP6, inactive, disabled
    # Implemented by CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP7, inactive, disabled
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
};

# Build the main USB test program
# doc: ref/usbs-testing.html
# The USB slave-side software is supplied with host-side
# and target-side software that allows a variety of testing
# to be performed. The slave-side software is not built
# by default since it can only operate in specific environments
# and in conjunction with the host-side software. Enabling
# this option causes the slave-side software to be added
# to the list of test cases for the current configuration.
#
cdl_option CYGBLD_IO_USB_SLAVE_USBTEST {
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGPKG_IO_USB_SLAVE_TESTS, " tests/usbtarget") 
    #     CYGPKG_IO_USB_SLAVE_TESTS == 0
    #   --> 0
    # Requires: CYGFUN_KERNEL_API_C CYGFUN_KERNEL_THREADS_TIMER !CYGINT_KNEREL_SCHEDULER_UNIQUE_PRIORITIES
    #     CYGFUN_KERNEL_API_C (unknown) == 0
    #     CYGFUN_KERNEL_THREADS_TIMER (unknown) == 0
    #     CYGINT_KNEREL_SCHEDULER_UNIQUE_PRIORITIES (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_LIBC_STDIO CYGSEM_LIBC_STDIO_THREAD_SAFE_STREAMS
    #     CYGPKG_LIBC_STDIO (unknown) == 0
    #     CYGSEM_LIBC_STDIO_THREAD_SAFE_STREAMS (unknown) == 0
    #   --> 0
};

# USB slave tests
# This option specifies the set of tests to be
# built for the USB slave package
#
cdl_option CYGPKG_IO_USB_SLAVE_TESTS {
    # This option is not active
    # The parent CYGPKG_IO_USB_SLAVE is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""

    # The following properties are affected by this value
    # option CYGBLD_IO_USB_SLAVE_USBTEST
    #     Requires:  is_substr(CYGPKG_IO_USB_SLAVE_TESTS, " tests/usbtarget") 
};

# <
# ST STM32 USB driver
# This package provides USB device side driver support for the ST 
# STM32 series of microcontrollers.
# 
#
cdl_package CYGPKG_DEVS_USB_CORTEXM_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_USB
    #     CYGPKG_IO_USB == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1
};

# >
# Enable the control endpoint 0
# Enable support for endpoint 0. If this support is disabled
# then the entire USB port is unusable.  Note that this driver does
# not support slave side devtab entries.
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_EP0 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_USB_SLAVE_CLIENTS
    #     CYGINT_IO_USB_SLAVE_CLIENTS == 0
    #   --> 0
    # Requires: CYGPKG_IO_USB_SLAVE
    #     CYGPKG_IO_USB_SLAVE == 0
    #   --> 0
    # Requires: !CYGGLO_IO_USB_SLAVE_PROVIDE_DEVTAB_ENTRIES
    #     CYGGLO_IO_USB_SLAVE_PROVIDE_DEVTAB_ENTRIES == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_CTRLEP0
    #     ActiveIf:  (CYGFUN_DEVS_USB_CORTEXM_STM32_EP0) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_CTRLEP0
    #     Calculated:  (CYGFUN_DEVS_USB_CORTEXM_STM32_EP0) 
};

# Max IN endpoints
# Specify the maximum number of IN (transmit) endpoints supported by the device.
# The total number of standard IN and OUT endpoints should not exceed 7.
# 
#
cdl_option CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: 2
    # Legal values:  0 to (7 - CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2

    # The following properties are affected by this value
    # option CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM
    #     LegalValues:  0 to (7 - CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP1
    #     ActiveIf:  (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP1
    #     Calculated:  (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP2
    #     ActiveIf:  (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP2
    #     Calculated:  (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP3
    #     ActiveIf:  (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP3
    #     Calculated:  (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP4
    #     ActiveIf:  (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP4
    #     Calculated:  (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP5
    #     ActiveIf:  (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP5
    #     Calculated:  (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP6
    #     ActiveIf:  (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP6
    #     Calculated:  (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP7
    #     ActiveIf:  (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP7
    #     Calculated:  (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1
    #     ActiveIf:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1
    #     ActiveIf:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1
    #     Calculated:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1
    #     Calculated:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2
    #     ActiveIf:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2
    #     ActiveIf:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2
    #     Calculated:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2
    #     Calculated:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3
    #     ActiveIf:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3
    #     ActiveIf:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3
    #     Calculated:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3
    #     Calculated:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4
    #     ActiveIf:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4
    #     ActiveIf:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4
    #     Calculated:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4
    #     Calculated:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5
    #     ActiveIf:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5
    #     ActiveIf:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5
    #     Calculated:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5
    #     Calculated:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6
    #     ActiveIf:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6
    #     ActiveIf:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6
    #     Calculated:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6
    #     Calculated:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7
    #     ActiveIf:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7
    #     ActiveIf:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7
    #     Calculated:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7
    #     Calculated:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
};

# Max OUT endpoints
# Specify the maximum number of OUT (receive) endpoints supported by the device.
# The total number of standard IN and OUT endpoints should not exceed 7.
# 
#
cdl_option CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: 2
    # Legal values:  0 to (7 - CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2

    # The following properties are affected by this value
    # option CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM
    #     LegalValues:  0 to (7 - CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1
    #     ActiveIf:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1
    #     Calculated:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2
    #     ActiveIf:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2
    #     Calculated:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3
    #     ActiveIf:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3
    #     Calculated:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4
    #     ActiveIf:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4
    #     Calculated:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5
    #     ActiveIf:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5
    #     Calculated:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6
    #     ActiveIf:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6
    #     Calculated:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7
    #     ActiveIf:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    # option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7
    #     Calculated:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
};

# Control endpoint buffer size
# Selects the size of the control endpoint data buffer, which sets the maximum size 
# of the control endpoint data phase transactions.
# 
#
cdl_option CYGNUM_DEVS_USB_CORTEXM_STM32_EPO_MAX_MSG_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values:  8 to 256 
};

# Self powered
# If set, the USB device will report itself to the host as being self-powered.
# There is no support for dynamically detecting the power state for dual powered
# devices.
# 
#
cdl_option CYGHWR_DEVS_USB_CORTEXM_STM32_SELF_POWERED {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: false
    #     false (unknown) == 0
    #   --> 0
};

# Variable length bulk transfers
# Some USB device classes (eg. CDC ATM) require support for variable length bulk 
# messages.  This is implemented by terminating bulk transfers using a short or 
# zero length packet.  Selecting this option enables this form of variable length 
# bulk message transfer for all bulk endpoints.  Note that this option is incompatible 
# with the standard eCos USB test framework.  
# 
#
cdl_option CYGHWR_DEVS_USB_CORTEXM_STM32_BULK_TERM_ZLP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: false
    #     false (unknown) == 0
    #   --> 0
};

# USB disconnect pin
# This is the GPIO which is used to control the USB bus D+ pullup resistor, which
# allows the USB bus connection status to be changed under software control.
# For the purposes of specifying which GPIO to use, pins are numbered consecutively 
# from 0 (A0) through 16 (B0) to 111 (G15).
# 
#
cdl_option CYGHWR_DEVS_USB_CORTEXM_STM32_DISC_PIN {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 30
    # value_source default
    # Default value: 30
};

# Active low USB disconnect
# The USB disconnect pin is normally treated as active high - so that when set high 
# the device will be disconnected from the bus.  Select this option for boards where
# the USB disconnect pin is wired as active low.
# 
#
cdl_option CYGHWR_DEVS_USB_CORTEXM_STM32_DISC_PIN_ACT_LOW {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: false
    #     false (unknown) == 0
    #   --> 0
};

# ISR priority
# Sets the ISR priority level used by the USB driver.
# 
#
cdl_option CYGNUM_DEVS_USB_CORTEXM_STM32_ISR_PRIORITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
};

# Debug trace enable
# Enables debug tracing for the USB driver.
# 
#
cdl_option CYGBLD_DEVS_USB_CORTEXM_STM32_DEBUG_TRACE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: false
    #     false (unknown) == 0
    #   --> 0
};

# Physical endpoint configuration.
# This is the automatically generated physical endpoint configuration for the 
# STM32 USB device.  Note that the physical endpoint numbering is only used 
# internally to the driver and has no bearing on the logical endpoint numbers
# which may be specified in a given device configuration.
# 
#
cdl_component CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_CONFIG {
    # There is no associated value.
};

# >
# Physical endpoint 0 CTRL
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_CTRLEP0 {
    # This option is not active
    # ActiveIf constraint:  (CYGFUN_DEVS_USB_CORTEXM_STM32_EP0) 
    #     CYGFUN_DEVS_USB_CORTEXM_STM32_EP0 == 0
    #   --> 0

    # Calculated value:  (CYGFUN_DEVS_USB_CORTEXM_STM32_EP0) 
    #     CYGFUN_DEVS_USB_CORTEXM_STM32_EP0 == 0
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 1 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP1 {
    # ActiveIf constraint:  (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 1

    # Calculated value:  (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 1
};

# Physical endpoint 2 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP2 {
    # ActiveIf constraint:  (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 1

    # Calculated value:  (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 1
};

# Physical endpoint 3 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP3 {
    # This option is not active
    # ActiveIf constraint:  (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 0

    # Calculated value:  (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 4 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP4 {
    # This option is not active
    # ActiveIf constraint:  (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 0

    # Calculated value:  (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 5 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP5 {
    # This option is not active
    # ActiveIf constraint:  (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 0

    # Calculated value:  (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 6 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP6 {
    # This option is not active
    # ActiveIf constraint:  (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 0

    # Calculated value:  (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 7 IN
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_TXEP7 {
    # This option is not active
    # ActiveIf constraint:  (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #   --> 0

    # Calculated value:  (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 1 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP1 {
    # This option is not active
    # ActiveIf constraint:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 0

    # Calculated value:  (1 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (1 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 2 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP2 {
    # This option is not active
    # ActiveIf constraint:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 0

    # Calculated value:  (2 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (2 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 3 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP3 {
    # ActiveIf constraint:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 1

    # Calculated value:  (3 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (3 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 1
};

# Physical endpoint 4 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP4 {
    # ActiveIf constraint:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 1

    # Calculated value:  (4 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (4 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 1
};

# Physical endpoint 5 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP5 {
    # This option is not active
    # ActiveIf constraint:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 0

    # Calculated value:  (5 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (5 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 6 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP6 {
    # This option is not active
    # ActiveIf constraint:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 0

    # Calculated value:  (6 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (6 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# Physical endpoint 7 OUT
#
cdl_option CYGFUN_DEVS_USB_CORTEXM_STM32_PHY_RXEP7 {
    # This option is not active
    # ActiveIf constraint:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    #   --> 0

    # Calculated value:  (7 > CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM) && 
    #                     (7 <= CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM + CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM) 
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_TXEP_NUM == 2
    #     CYGNUM_DEVS_USB_CORTEXM_STM32_RXEP_NUM == 2
    # Flavor: bool
    # Current value: 0
};

# <
# <
# <
# STM32 Framebuffer device driver
# This package provides a framebuffer device driver for the
# stm32f10xxx target.
#
cdl_package CYGPKG_DEVS_FRAMEBUF_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_FRAMEBUF
    #     CYGPKG_IO_FRAMEBUF (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: (CYGPKG_DEVS_FRAMEBUF_STM32_FB0 || !is_substr(CYGDAT_IO_FRAMEBUF_DEVICES, " fb0 "))
    #     CYGPKG_DEVS_FRAMEBUF_STM32_FB0 == 0
    #     CYGDAT_IO_FRAMEBUF_DEVICES (unknown) == 0
    #   --> 1
};

# >
# Provide framebuffer device fb0
# The stm32f10xxx target framebuffer driver can provide one
# framebuffer devices, named fb0. Device's width, height, 
# depth, and colour format can be controlled.
#
cdl_component CYGPKG_DEVS_FRAMEBUF_STM32_FB0 {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: is_substr(CYGDAT_IO_FRAMEBUF_DEVICES, " fb0 ")
    #     CYGDAT_IO_FRAMEBUF_DEVICES (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FRAMEBUF_STM32
    #     Requires: (CYGPKG_DEVS_FRAMEBUF_STM32_FB0 || !is_substr(CYGDAT_IO_FRAMEBUF_DEVICES, " fb0 "))
    # component CYGPKG_DEVS_FRAMEBUF_STM32_FUNCTIONALITY
    #     ActiveIf:  CYGPKG_DEVS_FRAMEBUF_STM32_FB0
};

# >
# fb0 width
#
cdl_option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FB0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 400
    # value_source default
    # Default value: 400
    # Legal values: 16 to 4096

    # The following properties are affected by this value
    # option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT_WIDTH
    #     DefaultValue: CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH
    # option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT_WIDTH
    #     LegalValues: 16 to CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH
};

# fb0 height
#
cdl_option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FB0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 240
    # value_source default
    # Default value: 240
    # Legal values: 16 to 4096

    # The following properties are affected by this value
    # option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT_HEIGHT
    #     DefaultValue: CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT
    # option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT_HEIGHT
    #     LegalValues: 16 to CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT
};

# fb0 format
# None.
#
cdl_option CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FB0 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16BPP_TRUE_565
    # value_source default
    # Default value: 16BPP_TRUE_565
    # Legal values: 
    #                             "8BPP_PAL888"     "8BPP_TRUE_332"
    #                             "16BPP_TRUE_565"  "16BPP_TRUE_555"
    #                             "32BPP_TRUE_0888"
    #                         

    # The following properties are affected by this value
    # option CYGHWR_DEVS_FRAMEBUF_STM32_FUNCTIONALITY_32BPP
    #     Calculated:  is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT, "32BPP") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT, "32BPP") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT, "32BPP") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT, "32BPP") 
    # option CYGHWR_DEVS_FRAMEBUF_STM32_FUNCTIONALITY_PALETTED
    #     Calculated:  is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT, "PAL") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT, "PAL") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT, "PAL") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT, "PAL") 
    # option CYGHWR_DEVS_FRAMEBUF_STM32_TRUE_COLOUR
    #     Calculated:  is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT, "TRUE") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT, "TRUE") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT, "TRUE") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT, "TRUE") 
};

# fb0 provides viewport support
# Optionally framebuffer device 0 can support a viewport.
# In other words only a subset of the framebuffer, the viewport,
# is actually visible on the display and application code can
# move this viewport.
#
cdl_component CYGIMP_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FB0 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# fb0 viewport width
#
cdl_option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT_WIDTH {
    # This option is not active
    # The parent CYGIMP_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT is not active
    # The parent CYGIMP_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH
    #     CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH == 0
    #   --> 0
    # Legal values: 16 to CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH
    #     CYGNUM_DEVS_FRAMEBUF_STM32_FB0_WIDTH == 0
};

# fb0 viewport height
#
cdl_option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT_HEIGHT {
    # This option is not active
    # The parent CYGIMP_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT is not active
    # The parent CYGIMP_DEVS_FRAMEBUF_STM32_FB0_VIEWPORT is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT
    #     CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT == 0
    #   --> 0
    # Legal values: 16 to CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT
    #     CYGNUM_DEVS_FRAMEBUF_STM32_FB0_HEIGHT == 0
};

# <
# fb0 supports page flipping
# Optionally framebuffer device 0 can support page flipping.
# The device supports between two and four pages, only one
# of which is visible on the display. This allows code to
# update one page without disturbing what is currently visible.
#
cdl_option CYGNUM_DEVS_FRAMEBUF_STM32_FB0_PAGE_FLIPPING {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FB0 is not active

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
    # Legal values: 2 3 4
};

# <
# Functionality supported by the enabled framebuffer(s)
# The generic framebuffer code needs configure-time information about
# functionality of the enabled framebuffer or framebuffers. Usually
# all this information is fixed by the hardware, but the synthetic
# target framebuffer support is more flexible than real hardware. To
# cope with this some dummy options are needed.
#
cdl_component CYGPKG_DEVS_FRAMEBUF_STM32_FUNCTIONALITY {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32 is not active
    # ActiveIf constraint:  CYGPKG_DEVS_FRAMEBUF_STM32_FB0
    #     CYGPKG_DEVS_FRAMEBUF_STM32_FB0 == 0
    #   --> 0

    # There is no associated value.
};

# >
# One or more of the enabled framebuffer devices has a depth of 32bpp
#
cdl_option CYGHWR_DEVS_FRAMEBUF_STM32_FUNCTIONALITY_32BPP {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FUNCTIONALITY is not active

    # Calculated value:  is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT, "32BPP") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT, "32BPP") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT, "32BPP") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT, "32BPP") 
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT (unknown) == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT (unknown) == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT (unknown) == 0
    # Flavor: bool
    # Current value: 0
};

# One or more of the enabled framebuffer devices uses a paletted display
#
cdl_option CYGHWR_DEVS_FRAMEBUF_STM32_FUNCTIONALITY_PALETTED {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FUNCTIONALITY is not active

    # Calculated value:  is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT, "PAL") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT, "PAL") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT, "PAL") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT, "PAL") 
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT (unknown) == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT (unknown) == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT (unknown) == 0
    # Flavor: bool
    # Current value: 0
};

# One or more of the enabled framebuffer devices uses a true colour display
#
cdl_option CYGHWR_DEVS_FRAMEBUF_STM32_TRUE_COLOUR {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_FUNCTIONALITY is not active

    # Calculated value:  is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT, "TRUE") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT, "TRUE") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT, "TRUE") ||
    #                     is_substr(CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT, "TRUE") 
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB0_FORMAT == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB1_FORMAT (unknown) == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB2_FORMAT (unknown) == 0
    #     CYGDAT_DEVS_FRAMEBUF_STM32_FB3_FORMAT (unknown) == 0
    # Flavor: bool
    # Current value: 0
};

# <
# Framebuffer build options
# Package specific build options including control over
# compiler flags used only in building the synthetic
# target framebuffer device driver.
#
cdl_component CYGPKG_DEVS_FRAMEBUF_STM32_OPTIONS {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32 is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for building
# the synthetic target framebuffer device driver. These flags
# are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_FRAMEBUF_STM32_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for building
# the synthetic target framebuffer device driver. These flags
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_DEVS_FRAMEBUF_STM32_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_DEVS_FRAMEBUF_STM32_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Common ethernet support
# doc: ref/io-eth-drv-generic.html
# Platform independent ethernet drivers
#
cdl_package CYGPKG_IO_ETH_DRIVERS {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX
    #     ActiveIf: CYGPKG_IO_ETH_DRIVERS
    # package CYGPKG_DEVS_ETH_DAVICOM_DM9000
    #     ActiveIf: CYGPKG_IO_ETH_DRIVERS
    # component CYGPKG_REDBOOT_NETWORKING
    #     ActiveIf: CYGPKG_IO_ETH_DRIVERS
};

# >
# Network drivers
#
cdl_interface CYGHWR_NET_DRIVERS {
    # Implemented by CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX_ETH0, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDAT_REDBOOT_DEFAULT_NETWORK_DEVICE
    #     ActiveIf:  CYGHWR_NET_DRIVERS > 1 
    # option CYGSEM_REDBOOT_NETWORK_INIT_ONE_DEVICE
    #     ActiveIf:  CYGHWR_NET_DRIVERS > 1 
};

# Driver supports multicast addressing
# This interface defines whether or not a driver can handle
# requests for multicast addressing.
#
cdl_interface CYGINT_IO_ETH_MULTICAST {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Support printing driver debug information
# Selecting this option will include code to allow the driver to
# print lots of information on diagnostic output such as full
# packet dumps.
#
cdl_component CYGDBG_IO_ETH_DRIVERS_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Driver debug output verbosity
# The value of this option indicates the default verbosity
# level of debugging output. 0 means no debugging output
# is made by default. Higher values indicate higher verbosity.
# The verbosity level may also be changed at run time by
# changing the variable cyg_io_eth_net_debug.
#
cdl_option CYGDBG_IO_ETH_DRIVERS_DEBUG_VERBOSITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Size of scatter-gather I/O lists
# A scatter-gather list is used to pass requests to/from
# the physical device driver.  This list can typically be
# small, as the data is normally already packed into reasonable
# chunks.
#
cdl_option CYGNUM_IO_ETH_DRIVERS_SG_LIST_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
};

# Support for standard eCos TCP/IP stack.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_NET {
    # This option is not active
    # ActiveIf constraint: CYGPKG_NET
    #     CYGPKG_NET (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1
};

# >
# Warn when there are no more mbufs
# Warnings about running out of mbufs are printed to the
# diagnostic output channel via diag_printf() if this option
# is enabled.  Mbufs are the network stack's basic dynamic
# memory objects that hold all packets in transit; running
# out is bad for performance but not fatal, not a crash.
# You might want to turn off the warnings to preserve realtime
# properties of the system even in extremis.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_WARN_NO_MBUFS {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_NET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Simulate network failures for testing
# This package contains a suite of simulated failure modes
# for the ethernet device layer, including dropping and/or
# corrupting received packets, dropping packets queued for
# transmission, and simulating a complete network break.
# It requires the kernel as a source of time information.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_NET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Drop incoming packets (percentage)
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_RX {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 10
    # value_source default
    # Default value: 1 10
    # Legal values: 10 50 80
};

# Corrupt incoming packets (percentage)
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_CORRUPT_RX {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 10
    # value_source default
    # Default value: 1 10
    # Legal values: 10 50 80
};

# Drop outgoing packets (percentage)
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_TX {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 10
    # value_source default
    # Default value: 1 10
    # Legal values: 10 50 80
};

# Simulate a line cut from time to time
# This option causes the system to drop all packets for a
# short random period (10s of seconds), and then act
# normally for up to 4 times that long.  This simulates your
# sysadmin fiddling with plugs in the network switch
# cupboard.
#
cdl_option CYGPKG_IO_ETH_DRIVERS_SIMULATE_LINE_CUT {
    # This option is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is not active
    # The parent CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# <
# Support for stand-alone network stack.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_STAND_ALONE {
    # ActiveIf constraint:  !CYGPKG_NET && !CYGPKG_NET_LWIP 
    #     CYGPKG_NET (unknown) == 0
    #     CYGPKG_NET_LWIP (unknown) == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGINT_ISO_STRING_MEMFUNCS
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
};

# >
# Pass packets to an alternate stack
# Define this to allow packets seen by this layer to be
# passed on to the previous logical layer, i.e. when
# stand-alone processing replaces system (eCos) processing.
#
cdl_option CYGSEM_IO_ETH_DRIVERS_PASS_PACKETS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  0 != CYGPKG_REDBOOT_NETWORKING 
    #     CYGPKG_REDBOOT_NETWORKING == 1
    #   --> 1
};

# Number of [network] buffers
# This option is used to allocate space to buffer incoming network
# packets.  These buffers are used to hold data until they can be
# logically processed by higher layers.
#
cdl_option CYGNUM_IO_ETH_DRIVERS_NUM_PKT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 2 to 32
};

# Show driver warnings
# Selecting this option will allows the stand-alone ethernet driver
# to display warnings on the system console when incoming network
# packets are being discarded due to lack of buffer space.
#
cdl_option CYGSEM_IO_ETH_DRIVERS_WARN {
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Support for lwIP network stack.
#
cdl_component CYGPKG_IO_ETH_DRIVERS_LWIP {
    # This option is not active
    # ActiveIf constraint: CYGPKG_NET_LWIP
    #     CYGPKG_NET_LWIP (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: !CYGPKG_NET
    #     CYGPKG_NET (unknown) == 0
    #   --> 1
};

# Interrupt support required
# This interface is used to indicate to the low
# level device drivers that interrupt driven operation
# is required by higher layers.
#
cdl_interface CYGINT_IO_ETH_INT_SUPPORT_REQUIRED {
    # Implemented by CYGPKG_IO_ETH_DRIVERS_NET, inactive, enabled
    # Implemented by CYGPKG_IO_ETH_DRIVERS_LWIP, inactive, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
};

# Common ethernet support build options
#
cdl_component CYGPKG_IO_ETH_DRIVERS_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the common ethernet support package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_IO_ETH_DRIVERS_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-D_KERNEL -D__ECOS"
    # value_source default
    # Default value: "-D_KERNEL -D__ECOS"
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the common ethernet support package. These flags
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_IO_ETH_DRIVERS_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# STM32F10XXX board with Davicom DM9000 ethernet driver
#
cdl_package CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS == current
    #   --> 1
    # ActiveIf constraint: CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX
    #     CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# Davicom DM9000 ethernet driver required
#
cdl_interface CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED {
    # Implemented by CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX_ETH0, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_DAVICOM_DM9000
    #     ActiveIf: CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED
    # option CYGNUM_DEVS_ETH_DAVICOM_DM9000_DEV_COUNT
    #     Calculated:  CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED 
};

# stm32f10xxx ethernet port driver for builtin Davicom DM9000
# This option includes the Davicom DM9000 ethernet device driver for a
# STM32F10XXX board.
#
cdl_component CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX_ETH0 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Device name for the ETH0 ethernet port driver
# This option sets the name of the ethernet device for a
# DM9000-based STM32F10XXX board.
#
cdl_option CYGDAT_DEVS_ETH_CORTEXM_STM32_STM32F10XXX_ETH0_NAME {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"eth0\""
    # value_source default
    # Default value: "\"eth0\""
};

# The ethernet station address for the ETH0 ethernet port driver
# This option sets the ethernet station address of the ethernet device for a
# DM9000-based STM32F10XXX board.
#
cdl_option CYGDAT_DEVS_ETH_CORTEXM_STM32_STM32F10XXX_ETH0_ESA {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "{0x08, 0x88, 0x12, 0x34, 0x56, 0x78}"
    # value_source default
    # Default value: "{0x08, 0x88, 0x12, 0x34, 0x56, 0x78}"
};

# <
# RedBoot manages ESA initialization data
# Enabling this option will allow the ethernet
# station address to be acquired from RedBoot's configuration data,
# stored in flash memory.  It can be overridden individually by the
# 'Set the ethernet station address' option for each interface.
#
cdl_component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA {
    # ActiveIf constraint: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Build-in flash config fields for ESAs
# This option controls the presence of RedBoot flash
# configuration fields for the ESAs of the interfaces when you
# are building RedBoot.  It is independent of whether RedBoot
# itself uses the network or any particular interface; this
# support is more for the application to use than for RedBoot
# itself, though the application gets at the data by vector
# calls; this option cannot be enabled outside of building
# RedBoot.
#
cdl_component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA is disabled
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == current
    #   --> 1
    # ActiveIf constraint: CYGPKG_REDBOOT_FLASH
    #     CYGPKG_REDBOOT_FLASH == 1
    #   --> 1
    # ActiveIf constraint: CYGSEM_REDBOOT_FLASH_CONFIG
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 1
    # ActiveIf constraint: CYGPKG_REDBOOT_NETWORKING
    #     CYGPKG_REDBOOT_NETWORKING == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# RedBoot manages ESA for eth0
#
cdl_option CYGVAR_ETH_DM9000_REDBOOT_HOLDS_ESA_ETH0 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS is not active
    # The parent CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# The ethernet station address
# The default ethernet station address. This is the
# address used as the default value in the RedBoot
# flash configuration field.
#
cdl_option CYGDAT_DEVS_ETH_CORTEXM_STM32_STM32F10XXX_ETH0_DEFAULT_ESA {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS is not active
    # The parent CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "{0x00, 0x03, 0x47, 0xdf, 0x32, 0xa8}"
    # value_source default
    # Default value: "{0x00, 0x03, 0x47, 0xdf, 0x32, 0xa8}"
};

# <
# <
# <
# Davicom DM9000 ethernet driver
# Ethernet driver for Davicom DM9000 NIC.
#
cdl_package CYGPKG_DEVS_ETH_DAVICOM_DM9000 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS == current
    #   --> 1
    # ActiveIf constraint: CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED
    #     CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED == 1
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# SIOCSIFHWADDR records ESA (MAC address) in EEPROM
# The ioctl() socket call with operand SIOCSIFHWADDR sets the
# interface hardware address - the MAC address or Ethernet Station
# Address (ESA).  This option causes the new MAC address to be
# written into the EEPROM associated with the interface, so that the
# new MAC address is permanently recorded.  Doing this should be a
# carefully chosen decision, hence this option.
#
cdl_option CYGSEM_DEVS_ETH_DAVICOM_DM9000_WRITE_EEPROM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Number of supported interfaces.
# This option selects the number of PCMCIA cards to
# be supported by the driver.
#
cdl_option CYGNUM_DEVS_ETH_DAVICOM_DM9000_DEV_COUNT {
    # Calculated value:  CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED 
    #     CYGINT_DEVS_ETH_DAVICOM_DM9000_REQUIRED == 1
    # Flavor: data
    # Current_value: 1
};

# Davicom dm9000 ethernet driver build options
#
cdl_component CYGPKG_DEVS_ETH_DAVICOM_DM9000_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the Davicom DM9000 ethernet driver package.
# These flags are used in addition to the set of
# global flags.
#
cdl_option CYGPKG_DEVS_ETH_DAVICOM_DM9000_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-D_KERNEL -D__ECOS"
    # value_source default
    # Default value: "-D_KERNEL -D__ECOS"
};

# <
# <
# <
# ISO C library string functions
# doc: ref/libc.html
# This package provides string functions specified by the
# ISO C standard - ISO/IEC 9899:1990.
#
cdl_package CYGPKG_LIBC_STRING {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_MEMFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_STRFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRTOK_R_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
};

# >
# Inline versions of <string.h> functions
# This option chooses whether some of the
# particularly simple string functions from
# <string.h> are available as inline
# functions. This may improve performance, and as
# the functions are small, may even improve code
# size.
#
cdl_option CYGIMP_LIBC_STRING_INLINES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Optimize string functions for code size
# This option tries to reduce string function
# code size at the expense of execution speed. The
# same effect can be produced if the code is
# compiled with the -Os option to the compiler.
#
cdl_option CYGIMP_LIBC_STRING_PREFER_SMALL_TO_FAST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide BSD compatibility functions
# Enabling this option causes various compatibility functions
# commonly found in the BSD UNIX operating system to be included.
# These are functions such as bzero, bcmp, bcopy, bzero, strcasecmp,
# strncasecmp, index, rindex and swab.
#
cdl_option CYGFUN_LIBC_STRING_BSD_FUNCS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1
    # Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
    #     CYGBLD_ISO_STRING_BSD_FUNCS_HEADER == <cyg/libc/string/bsdstring.h>
    #   --> 1
    # Requires: CYGINT_ISO_CTYPE
    #     CYGINT_ISO_CTYPE == 0
    #   --> 0
};

# strtok
# These options control the behaviour of the
# strtok() and strtok_r() string tokenization
# functions.
#
cdl_component CYGPKG_LIBC_STRING_STRTOK {
    # There is no associated value.
};

# >
# Per-thread strtok()
# This option controls whether the string function
# strtok() has its state recorded on a per-thread
# basis rather than global. If this option is
# disabled, some per-thread space can be saved.
# Note there is also a POSIX-standard strtok_r()
# function to achieve a similar effect with user
# support. Enabling this option will use one slot
# of kernel per-thread data. You should ensure you
# have enough slots configured for all your
# per-thread data.
#
cdl_option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA (unknown) == 0
    #   --> 0
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA (unknown) == 0
    #   --> 0
};

# Tracing level
# Trace verbosity level for debugging the <string.h>
# functions strtok() and strtok_r(). Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_LIBC_STRING_STRTOK_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# <
# strdup
# This option indicates whether strdup() is to be supported.
#
cdl_option CYGFUN_LIBC_STRING_STRDUP {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MALLOC
    #     CYGINT_ISO_MALLOC == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Provide strnlen() GNU extension
# This option controls support for the strnlen() function.
# (This is a GNU extension, not part of ANSI C.)
#
cdl_option CYGFUN_LIBC_STRING_GNU_STRNLEN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# C library string functions build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBC_STRING_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# C library string function tests
# This option specifies the set of tests for the C library
# string functions.
#
cdl_option CYGPKG_LIBC_STRING_TESTS {
    # Calculated value:  "tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2 tests/strnlen" 
    # Flavor: data
    # Current_value: tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2 tests/strnlen
};

# <
# <
# <
# SPI support
# doc: ref/io-spi.html
# The generic SPI package provides an API for accessing devices
# attached to an SPI bus. It also provides support for writing
# bus drivers and for defining SPI device structures.
#
cdl_package CYGPKG_IO_SPI {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_INFRA CYGPKG_HAL
    #     CYGPKG_INFRA == current
    #     CYGPKG_HAL == current
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_FLASH_SPI_M25PXX
    #     ActiveIf:  CYGPKG_IO_FLASH && CYGPKG_IO_SPI 
    # package CYGPKG_DEVS_SPI_CORTEXM_STM32
    #     ActiveIf: CYGPKG_IO_SPI
    # package CYGPKG_DEVS_TOUCH_SPI_TSC2046
    #     Requires: CYGPKG_IO_SPI
};

# >
# SPI build options
# Package specific build options including control over
# compiler flags used only in building the generic SPI
# package, and details of which tests are built.
#
cdl_component CYGPKG_IO_SPI_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the generic SPI package. These flags are 
# used in addition to the set of global flags.
#
cdl_option CYGPKG_IO_SPI_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the generic SPI package. These flags are 
# removed from the set of global flags if present.
#
cdl_option CYGPKG_IO_SPI_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# ST STM32 SPI driver
# This package provides SPI driver support for the ST STM32 series
# of microcontrollers.
# 
#
cdl_package CYGPKG_DEVS_SPI_CORTEXM_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_SPI
    #     CYGPKG_IO_SPI == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1
};

# >
# Pin toggle rate
# Selects the pin toggle rate in MHz to be used for the SPI interfaces.  Higher toggle
# rates allow increased baud rates at the expense of power and EMI. Only certain rates
# are valid on different STM32 families, check part documentation for which may be used.
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_PIN_TOGGLE_RATE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? 10 : 25 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 10
    # Legal values:  2 10 25 50 80 100 
};

# ST STM32 SPI bus 1
# Enable SPI bus 1 on the STM32 device.
# 
#
cdl_component CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGBLD_DEVS_SPI_CORTEXM_STM32_LOOPBACK_TEST
    #     Requires: CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1
    # option CYGPKG_DEVS_SPI_CORTEXM_STM32_TESTS
    #     ActiveIf: CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1
    # package CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX
    #     Requires: CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1
};

# >
# SPI chip selects
# This is a comma separated list of GPIOs which are to be used as chip
# select lines for the SPI bus. Each GPIO is defined by the SPI_CS()
# macro which gives the port and pin number.
# 
#
cdl_option CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1_CS_GPIOS {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "SPI_CS(A, 4)"
    # value_source default
    # Default value: "SPI_CS(A, 4)"
};

# Bounce buffer size
# DMA bounce buffers are required when running out of external
# memory.  Set this to the maximum SPI packet size which will be
# used to enable the DMA bounce buffers.  Set to 0 to disable
# bounce buffers when running from on-chip memory.
# 
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS1_BBUF_SIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Transmit DMA interrupt priority
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS1_TXINTR_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 69
    # value_source default
    # Default value: 69
};

# Receive DMA interrupt priority
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS1_RXINTR_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 134
    # value_source default
    # Default value: 134
};

# <
# ST STM32 SPI bus 2
# Enable SPI bus 2 on the STM32 device.
# 
#
cdl_component CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS2 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# SPI chip selects
# This is a comma separated list of GPIOs which are to be used as chip
# select lines for the SPI bus. Each GPIO is defined by the SPI_CS()
# macro which gives the port and pin number.
# 
#
cdl_option CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS2_CS_GPIOS {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "SPI_CS(B, 12)"
    # value_source default
    # Default value: "SPI_CS(B, 12)"
};

# Bounce buffer size
# DMA bounce buffers are required when running out of external
# memory.  Set this to the maximum SPI packet size which will be
# used to enable the DMA bounce buffers.  Set to 0 to disable
# bounce buffers when running from on-chip memory.
# 
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS2_BBUF_SIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Transmit DMA interrupt priority
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS2_TXINTR_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 71
    # value_source default
    # Default value: 71
};

# Receive DMA interrupt priority
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS2_RXINTR_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 136
    # value_source default
    # Default value: 136
};

# <
# ST STM32 SPI bus 3
# Enable SPI bus 3 on the STM32 device.  Note that SPI bus 3 shares pins
# with the JTAG port which means that debug should ideally be disabled 
# on startup.  However, there is also the option of disabling it during 
# SPI bus initialisation instead.
# 
#
cdl_component CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Disable debug port
# When set the debug port will automatically be disabled on 
# initialising SPI bus 3, freeing up the SPI interface pins.
# 
#
cdl_option CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3_DISABLE_DEBUG_PORT {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# SPI chip selects
# This is a comma separated list of GPIOs which are to be used as chip
# select lines for the SPI bus. Each GPIO is defined by the SPI_CS()
# macro which gives the port and pin number.
# 
#
cdl_option CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3_CS_GPIOS {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "SPI_CS(A, 15)"
    # value_source default
    # Default value: "SPI_CS(A, 15)"
};

# Bounce buffer size
# DMA bounce buffers are required when running out of external
# memory.  Set this to the maximum SPI packet size which will be
# used to enable the DMA bounce buffers.  Set to 0 to disable
# bounce buffers when running from on-chip memory.
# 
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS3_BBUF_SIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Transmit DMA interrupt priority
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS3_TXINTR_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 73
    # value_source default
    # Default value: 73
};

# Receive DMA interrupt priority
#
cdl_option CYGNUM_DEVS_SPI_CORTEXM_STM32_BUS3_RXINTR_PRI {
    # This option is not active
    # The parent CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 138
    # value_source default
    # Default value: 138
};

# <
# ST STM32 SPI driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_DEVS_SPI_CORTEXM_STM32_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the STM32 SPI driver. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_DEVS_SPI_CORTEXM_STM32_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the STM32 SPI driver. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_DEVS_SPI_CORTEXM_STM32_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Build STM32 SPI loopback test
# This option enables the building of the STM32 SPI loopback test.
# Refer to the comments in tests/loopback.c for details of how to
# use this test.
#
cdl_option CYGBLD_DEVS_SPI_CORTEXM_STM32_LOOPBACK_TEST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1
    #     CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGPKG_DEVS_SPI_CORTEXM_STM32_TESTS
    #     Calculated:  CYGBLD_DEVS_SPI_CORTEXM_STM32_LOOPBACK_TEST ? "tests/loopback" : "" 
};

# SPI tests
#
cdl_option CYGPKG_DEVS_SPI_CORTEXM_STM32_TESTS {
    # This option is not active
    # ActiveIf constraint: CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1
    #     CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 == 0
    #   --> 0

    # Calculated value:  CYGBLD_DEVS_SPI_CORTEXM_STM32_LOOPBACK_TEST ? "tests/loopback" : "" 
    #     CYGBLD_DEVS_SPI_CORTEXM_STM32_LOOPBACK_TEST == 0
    # Flavor: data
    # Current_value: 
};

# <
# <
# <
# FLASH device drivers
# doc: ref/io-flash.html
# This package provides support for the flash devices on the
# current platform.
#
cdl_package CYGPKG_IO_FLASH {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_STM32_FLASH
    #     ActiveIf: CYGPKG_IO_FLASH
    # package CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2
    #     ActiveIf: CYGPKG_IO_FLASH
    # package CYGPKG_DEVS_FLASH_STM32
    #     ActiveIf: CYGPKG_IO_FLASH
    # package CYGPKG_DEVS_FLASH_SPI_M25PXX
    #     ActiveIf:  CYGPKG_IO_FLASH && CYGPKG_IO_SPI 
    # component CYGSEM_REDBOOT_FLASH_CONFIG
    #     DefaultValue:  CYGPKG_IO_FLASH != 0 
};

# >
# Hardware FLASH device drivers
# This calculated option gives the number of flash devices
# on the current platform. The generic flash support requires
# at least one device.
#
cdl_interface CYGHWR_IO_FLASH_DEVICE {
    # Implemented by CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2, active, enabled
    # Implemented by CYGPKG_DEVS_FLASH_STM32, active, enabled
    # Implemented by CYGPKG_DEVS_FLASH_SPI_M25PXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 3
    # Requires:  CYGHWR_IO_FLASH_DEVICE >= 1 
    #     CYGHWR_IO_FLASH_DEVICE == 3
    #   --> 1

    # The following properties are affected by this value
    # interface CYGHWR_IO_FLASH_DEVICE
    #     Requires:  CYGHWR_IO_FLASH_DEVICE >= 1 
    # option CYGSEM_IO_FLASH_VERIFY_PROGRAM
    #     ActiveIf:  CYGHWR_IO_FLASH_INDIRECT_READS < CYGHWR_IO_FLASH_DEVICE 
    # component CYGPKG_REDBOOT_FLASH
    #     ActiveIf: CYGHWR_IO_FLASH_DEVICE
};

# Hardware can support block locking
# This option will be enabled by devices which can support
# locking (write-protection) of individual flash blocks. If
# none of the devices support locking then the relevant code
# in the generic flash package can be eliminated.
#
cdl_interface CYGHWR_IO_FLASH_BLOCK_LOCKING {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_FLASH_LOCK_SPECIAL
    #     ActiveIf:  CYGHWR_IO_FLASH_BLOCK_LOCKING != 0 
};

# Hardware requires indirect reads
# Some flash devices can be read directly like any other
# memory. Others can only be accessed indirectly, which
# involves extra code. If none of the flash devices on the
# target hardware use indirect reads then the extra code
# can be eliminated.
#
cdl_interface CYGHWR_IO_FLASH_INDIRECT_READS {
    # Implemented by CYGPKG_DEVS_FLASH_SPI_M25PXX, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1

    # The following properties are affected by this value
    # option CYGSEM_IO_FLASH_VERIFY_PROGRAM
    #     ActiveIf:  CYGHWR_IO_FLASH_INDIRECT_READS < CYGHWR_IO_FLASH_DEVICE 
};

# Device driver needs cache handled centrally
# Managing flash often requires interacting with the cache.
# Some device drivers do not require the generic flash code to
# manipulate the cache, either because they do it themselves or
# because the hardware does the right thing. Other drivers
# require the generic code to disable/enable the cache before
# calling into the driver.
#
cdl_interface CYGHWR_IO_FLASH_DEVICE_NEEDS_CACHE_HANDLED {
    # Implemented by CYGHWR_IO_FLASH_DEVICE_LEGACY, active, disabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
};

# Hardware driver uses the legacy interface
# The generic flash code can work with either a legacy device
# driver or with V2 drivers. If a legacy driver is used on the
# current platform then this option will be implemented.
#
cdl_interface CYGHWR_IO_FLASH_DEVICE_LEGACY {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  CYGHWR_IO_FLASH_DEVICE_LEGACY <= 1 
    #     CYGHWR_IO_FLASH_DEVICE_LEGACY == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGHWR_IO_FLASH_DEVICE_LEGACY
    #     Requires:  CYGHWR_IO_FLASH_DEVICE_LEGACY <= 1 
    # option CYGSEM_IO_FLASH_READ_INDIRECT
    #     ActiveIf: CYGHWR_IO_FLASH_DEVICE_LEGACY
};

# Legacy device driver uses indirect reads.
# This option will be asserted by devices which cannot support
# direct access to the FLASH memory contents (e.g. EEPROM or NAND
# devices).  In these cases, the driver must provide an appropriate
# hardware access function.
#
cdl_option CYGSEM_IO_FLASH_READ_INDIRECT {
    # This option is not active
    # ActiveIf constraint: CYGHWR_IO_FLASH_DEVICE_LEGACY
    #     CYGHWR_IO_FLASH_DEVICE_LEGACY == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  !CYGSEM_IO_FLASH_VERIFY_PROGRAM 
    #     CYGSEM_IO_FLASH_VERIFY_PROGRAM == 1
    #   --> 0

    # The following properties are affected by this value
    # option CYGPRI_REDBOOT_ZLIB_FLASH
    #     ActiveIf: !CYGSEM_IO_FLASH_READ_INDIRECT
};

# Display status messages during flash operations
# Selecting this option will cause the flash code to print status
# messages as various flash operations are undertaken.
#
cdl_option CYGSEM_IO_FLASH_CHATTER {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Verify data programmed to flash
# Selecting this option will cause verification of data
# programmed to flash.
#
cdl_option CYGSEM_IO_FLASH_VERIFY_PROGRAM {
    # ActiveIf constraint:  CYGHWR_IO_FLASH_INDIRECT_READS < CYGHWR_IO_FLASH_DEVICE 
    #     CYGHWR_IO_FLASH_INDIRECT_READS == 1
    #     CYGHWR_IO_FLASH_DEVICE == 3
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_IO_FLASH_READ_INDIRECT
    #     Requires:  !CYGSEM_IO_FLASH_VERIFY_PROGRAM 
};

# Platform has flash soft DIP switch write-protect
# Selecting this option will cause the state of a hardware jumper or
# dipswitch to be read by software to determine whether the flash is
# write-protected or not.
#
cdl_option CYGSEM_IO_FLASH_SOFT_WRITE_PROTECT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide /dev block devices
# Provide one or more block devices below /dev which can be
# accessed using standard I/O functions such as eCos cyg_io_read()
# and POSIX open().
#
cdl_component CYGPKG_IO_FLASH_BLOCK_DEVICE {
    # This option is not active
    # ActiveIf constraint: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS > 0
    #     CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGPKG_IO_FLASH_TESTS
    #     Calculated:  (CYGSEM_IO_FLASH_LEGACY_API ? "tests/flash1" : "") .
    #                              (CYGPKG_IO_FLASH_BLOCK_DEVICE ? " tests/flashdev" : "") 
};

# >
# Number of methods to reference Flash
# This interface counts the number of ways Flash can
# be referenced in order to be opened. This is so that
# the configuration can ensure that at least one method
# is available.
#
cdl_interface CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS {
    # Implemented by CYGFUN_IO_FLASH_BLOCK_FROM_FIS, inactive, enabled
    # Implemented by CYGFUN_IO_FLASH_BLOCK_FROM_DEVOFFSET, inactive, enabled
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_FLASH_BLOCK_DEVICE
    #     Requires:  CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS > 0
};

# Number of /dev/flash/ device slots
# The number of simultaneously open flash devices
# permitted. This is statically configured, rather than
# dynamically allocated at run-time as it is likely the
# number required will be small.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_DEVICES {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: 2
};

# Access using named FIS areas
# This method of access to Flash regions uses the names
# of FIS regions to identify the Flash device, or portion
# of the device. For example /dev/flash/fis/jffs2.
#
cdl_option CYGFUN_IO_FLASH_BLOCK_FROM_FIS {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1
};

# Access using device numbers,offsets
# This method of access to Flash regions uses the Flash
# device number, along with an offset (which may be
# 0 to indicate the start of the device) and an optional length
# which will otherwise be assumed to be the whole device.
# For example /dev/flash/0/0x1000 or
# /dev/flash/1/0,65536.
#
cdl_option CYGFUN_IO_FLASH_BLOCK_FROM_DEVOFFSET {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Provide the legacy user API
# Provide an implementation of the legacy user API. This is mapped
# onto the new API via a small layer of code
#
cdl_option CYGSEM_IO_FLASH_LEGACY_API {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_FLASH_TESTS
    #     Calculated:  (CYGSEM_IO_FLASH_LEGACY_API ? "tests/flash1" : "") .
    #                              (CYGPKG_IO_FLASH_BLOCK_DEVICE ? " tests/flashdev" : "") 
};

# Provide /dev block devices (legacy format)
# Provide one or more block devices below /dev which can be
# accessed using standard I/O functions such as eCos cyg_io_read()
# and POSIX open(). This format of configuration is deprecated,
# but is included for compatibility with older configurations.
#
cdl_component CYGPKG_IO_FLASH_BLOCK_DEVICE_LEGACY {
    # This option is not active
    # ActiveIf constraint: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Provide block device 1
# Provide block device 1 for use with standard I/O
#
cdl_component CYGPKG_IO_FLASH_BLOCK_DEVICE_1 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_LEGACY is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_LEGACY is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Name of flash block device 1
# This option determines the name by which the block
# device can be accessed.
#
cdl_option CYGDAT_IO_FLASH_BLOCK_DEVICE_NAME_1 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/flash1\""
    # value_source default
    # Default value: "\"/dev/flash1\""
};

#
cdl_interface CYGINT_IO_FLASH_BLOCK_CFG_1 {
    # Implemented by CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_1, inactive, enabled
    # Implemented by CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1, inactive, disabled
    # Implemented by CYGNUM_IO_FLASH_BLOCK_CFG_FIS_1, inactive, disabled
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_1 is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires: 1 == CYGINT_IO_FLASH_BLOCK_CFG_1
    #     CYGINT_IO_FLASH_BLOCK_CFG_1 == 0
    #   --> 0

    # The following properties are affected by this value
    # interface CYGINT_IO_FLASH_BLOCK_CFG_1
    #     Requires: 1 == CYGINT_IO_FLASH_BLOCK_CFG_1
};

# Static configuration via offset
# This configures the flash block device 1
# with static offset from the base of the first
# flash device and length
#
cdl_component CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_1 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_1 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Start offset from flash base
# This gives the offset from the base of flash 
# of the first flash device which this block device 
# corresponds to.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_OFFSET_1 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0xFFFFFFFF
    # value_source default
    # Default value: 0xFFFFFFFF
    # Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_OFFSET_1
    #     CYGNUM_IO_FLASH_BLOCK_OFFSET_1 == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_OFFSET_1
    #     Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_OFFSET_1
};

# Length
# This gives the length of the region of flash given over
# to this block device.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_LENGTH_1 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_1 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: 0 != CYGNUM_IO_FLASH_BLOCK_LENGTH_1
    #     CYGNUM_IO_FLASH_BLOCK_LENGTH_1 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_LENGTH_1
    #     Requires: 0 != CYGNUM_IO_FLASH_BLOCK_LENGTH_1
};

# <
# Static configuration via absolute address
# This configures the flash block device 1
# with absolute base address and a length
#
cdl_component CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_1 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Start absolute address
# This gives the absolute address in flash which this
# block device corresponds to.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1 is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0xFFFFFFFF
    # value_source default
    # Default value: 0xFFFFFFFF
    # Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1
    #     CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1 == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1
    #     Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1
};

# Length
# This gives the length of the region of flash given over
# to this block device.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1 is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: 0 != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1
    #     CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1
    #     Requires: 0 != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1
};

# <
# Configuration from FIS
# This configures the flash block device 1
# from Redboot FIS
#
cdl_component CYGNUM_IO_FLASH_BLOCK_CFG_FIS_1 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_1 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Name of FIS entry
#
cdl_component CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_FIS_1 is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_FIS_1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"jffs2\""
    # value_source default
    # Default value: "\"jffs2\""
    # Requires: "" != CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1
    #     CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1 == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1
    #     Requires: "" != CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1
};

# <
# <
# Provide block device 2
# Provide block device 2 for use with standard I/O
#
cdl_component CYGPKG_IO_FLASH_BLOCK_DEVICE_2 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_LEGACY is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_LEGACY is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Name of flash block device 2
# This option determines the name by which the block
# device can be accessed.
#
cdl_option CYGDAT_IO_FLASH_BLOCK_DEVICE_NAME_2 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/flash2\""
    # value_source default
    # Default value: "\"/dev/flash2\""
};

#
cdl_interface CYGINT_IO_FLASH_BLOCK_CFG_2 {
    # Implemented by CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_2, inactive, enabled
    # Implemented by CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2, inactive, disabled
    # Implemented by CYGNUM_IO_FLASH_BLOCK_CFG_FIS_2, inactive, disabled
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires: 1 == CYGINT_IO_FLASH_BLOCK_CFG_2
    #     CYGINT_IO_FLASH_BLOCK_CFG_2 == 0
    #   --> 0

    # The following properties are affected by this value
    # interface CYGINT_IO_FLASH_BLOCK_CFG_2
    #     Requires: 1 == CYGINT_IO_FLASH_BLOCK_CFG_2
};

# Static configuration via offset
# This configures the flash block device 2
# with static offset from the base of the first
# flash device and length
#
cdl_component CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_2 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Start offset from flash base
# This gives the offset from the base of flash 
# of the first flash device which this block device 
# corresponds to.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_OFFSET_2 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0xFFFFFFFF
    # value_source default
    # Default value: 0xFFFFFFFF
    # Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_OFFSET_2
    #     CYGNUM_IO_FLASH_BLOCK_OFFSET_2 == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_OFFSET_2
    #     Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_OFFSET_2
};

# Length
# This gives the length of the region of flash given over
# to this block device.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_LENGTH_2 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_2 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: 0 != CYGNUM_IO_FLASH_BLOCK_LENGTH_2
    #     CYGNUM_IO_FLASH_BLOCK_LENGTH_2 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_LENGTH_2
    #     Requires: 0 != CYGNUM_IO_FLASH_BLOCK_LENGTH_2
};

# <
# Static configuration via absolute address
# This configures the flash block device 2
# with absolute base address and a length
#
cdl_component CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Start absolute address
# This gives the absolute address in flash which this
# block device corresponds to.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2 is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0xFFFFFFFF
    # value_source default
    # Default value: 0xFFFFFFFF
    # Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2
    #     CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2 == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2
    #     Requires: 0xFFFFFFFF != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2
};

# Length
# This gives the length of the region of flash given over
# to this block device.
#
cdl_option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2 is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: 0 != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2
    #     CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2
    #     Requires: 0 != CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2
};

# <
# Configuration from FIS
# This configures the flash block device 2
# from Redboot FIS
#
cdl_component CYGNUM_IO_FLASH_BLOCK_CFG_FIS_2 {
    # This option is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is not active
    # The parent CYGPKG_IO_FLASH_BLOCK_DEVICE_2 is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Name of FIS entry
#
cdl_component CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2 {
    # This option is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_FIS_2 is not active
    # The parent CYGNUM_IO_FLASH_BLOCK_CFG_FIS_2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"jffs2-2\""
    # value_source default
    # Default value: "\"jffs2-2\""
    # Requires: "" != CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2
    #     CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2 == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2
    #     Requires: "" != CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2
};

# <
# <
# <
# Flash device driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_IO_FLASH_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the flash device drivers. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_IO_FLASH_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the flash device drivers. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_IO_FLASH_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Flash device driver tests
# This option specifies the set of tests for the flash device drivers.
#
cdl_component CYGPKG_IO_FLASH_TESTS {
    # Calculated value:  (CYGSEM_IO_FLASH_LEGACY_API ? "tests/flash1" : "") .
    #                              (CYGPKG_IO_FLASH_BLOCK_DEVICE ? " tests/flashdev" : "") 
    #     CYGSEM_IO_FLASH_LEGACY_API == 1
    #     CYGPKG_IO_FLASH_BLOCK_DEVICE == 0
    # Flavor: data
    # Current_value: tests/flash1
};

# >
# Start offset from flash base
# This gives the offset from the base of flash where tests
# can be run.  It is important to set this correctly, as an
# incorrect value could allow the tests to write over critical
# portions of the FLASH device and possibly render the target
# board totally non-functional.
#
cdl_option CYGNUM_IO_FLASH_TEST_OFFSET {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00100000
    # value_source default
    # Default value: 0x00100000
};

# Length
# This gives the length of the region of flash used for testing.
#
cdl_option CYGNUM_IO_FLASH_TEST_LENGTH {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00100000
    # value_source default
    # Default value: 0x00100000
};

# <
# <
# Flash support
# Control flash device support for stm32f10xxx platform board.
#
cdl_component CYGHWR_HAL_CORTEXM_STM32_FLASH {
    # ActiveIf constraint: CYGPKG_IO_FLASH
    #     CYGPKG_IO_FLASH == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Internal flash support
# This option enables support for the internal flash device.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_FLASH_INTERNAL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# External NOR flash support
# This option enables support for the external NOR flash device.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_FLASH_NOR {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# AMD am29xxxxx flash memory support
# doc: ref/devs-flash-am29xxxxx.html
# Flash memory support for AMD AM29xxxxx devices and compatibles.
# This driver implements the V2 flash driver API
#
cdl_package CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_FLASH
    #     CYGPKG_IO_FLASH == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# Maximum number of iterations during a write
# Flash program operations may take a long time, and the driver
# needs to poll the device to detect when the operation has
# completed. This option controls the maximum number of iterations
# of the polling loop, before the driver will give up. The timeout
# should never actually trigger, as long as the hardware is
# functioning correctly. If a timeout does occur the flash device
# may be left in an inconsistent state. If very slow flash devices
# are used then the platform HAL may require a larger timeout.
#
cdl_option CYGNUM_DEVS_FLASH_AMD_AM29XXXXX_V2_PROGRAM_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100000000
    # value_source default
    # Default value: 100000000
    # Legal values: 1024 to 0x7fffffff
};

# Delay between words while programming
# The timings of certain processors and flash devices mean that
# a short delay may be required between each word as it is programmed.
# This option defines that delay in terms of iterations of a delay
# loop.
#
cdl_option CYGNUM_DEVS_FLASH_AMD_AM29XXXXX_V2_PROGRAM_DELAY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 0x7fffffff
};

# Maximum number of iterations during a block erase
# The driver needs to poll the flash device during a block erase
# to detect when the operation has completed. This option controls
# the maximum number of iterations of the polling loop, before the
# driver will give up. The timeout should never actually trigger,
# as long as the hardware is functioning correctly. If a timeout
# does occur the flash device may be left in an inconsistent state.
# If very slow flash devices are used then the platform HAL may
# require a larger timeout.
#
cdl_option CYGNUM_DEVS_FLASH_AMD_AM29XXXXX_V2_ERASE_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100000000
    # value_source default
    # Default value: 100000000
    # Legal values: 1024 to 0x7fffffff
};

# Leave interrupts enabled during flash operations
# On typical hardware erasing or programming a flash block requires
# disabling interrupts and possibly the cache. During these operations
# some or all of the flash hardware will be unusable, and disabling
# interrupts is the only reliable way of ensuring that no interrupt
# handler or other thread will try to access the flash in the middle
# of the operation. This can have a major impact on the real-time
# responsiveness of typical applications.
# In some circumstances it is possible to leave interrupts enabled.
# The application must run in RAM, not in flash. There must be some
# way of accessing the flash which bypasses the cache. The application
# must only access the flash using the proper API, for example
# cyg_flash_read(), which ensures that only one thread at a time can
# access a flash device. Finally there must be no possibility of
# entering a ROM monitor running in flash. This can happen if RedBoot
# is used as the ROM monitor and virtual vectors are enabled. It can
# also happen when debugging the application via RedBoot or gdb stubs.
# If the application can absolutely guarantee that the flash will not be
# accessed during a flash operation then it is possible to enable this option,
# improving interrupt latency. Any unexpected flash accesses are likely
# to cause a system crash. If in doubt leave this option disabled.
#
cdl_option CYGIMP_DEVS_FLASH_AMD_AM29XXXXX_V2_LEAVE_INTERRUPTS_ENABLED {
    # ActiveIf constraint:  ! CYGHWR_DEVS_FLASH_AMD_AM29XXXXX_V2_CACHED_ONLY 
    #     CYGHWR_DEVS_FLASH_AMD_AM29XXXXX_V2_CACHED_ONLY == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Flash memory accesses are always cached
# Flash memory devices are usually accessed via the cache to achieve
# acceptable performance. However erase and program operations need
# to access the flash directly, bypassing the cache. On some targets
# it is possible to access the flash in an uncached part of the
# address space, for example by suitable MMU settings. On other
# targets it is necessary to disable the cache while erasing or
# programming blocks of flash. In the latter case the platform HAL
# will implement this interface.
#
cdl_interface CYGHWR_DEVS_FLASH_AMD_AM29XXXXX_V2_CACHED_ONLY {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # option CYGIMP_DEVS_FLASH_AMD_AM29XXXXX_V2_LEAVE_INTERRUPTS_ENABLED
    #     ActiveIf:  ! CYGHWR_DEVS_FLASH_AMD_AM29XXXXX_V2_CACHED_ONLY 
};

# Include support for unusual CFI implementation
# CFI, Common Flash Interface, is a standard allowing device drivers
# to query the hardware for characteristics such as the erase region
# layout. Some flash chips have a somewhat strange implementation of CFI,
# requiring extra code within the device driver. If CFI is used for device
# initialization and if the platform may come with one of these flash chips
# then the platform HAL will implement this interface.
#
cdl_interface CYGHWR_DEVS_FLASH_AMD_AM29XXXXX_V2_CFI_BOGOSITY {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Erase/program resume is needed after reset
# With true AMD-compatible flash parts, a reset command will also
# abort any suspended erase or program operations. But on some
# parts which are nearly but not quite compatible, such as AT49xxxxx,
# this does not happen, and so an erase/program resume command is
# needed after a soft reset in order to be able to use the chip.
#
cdl_interface CYGHWR_DEVS_FLASH_AMD_AM29XXXXX_V2_RESET_NEEDS_RESUME {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Number of different erase regions
# Flash devices vary widely in the way the various flash blocks are
# laid out. In uniform devices all flash blocks are the same size,
# for example 64 blocks of 64K each. Other devices have a boot block,
# where one of the big blocks is subdivided into a number of smaller
# ones. For example there could be a 16K block, followed by two 8K blocks,
# then a 32K block, and finally 63 64K blocks. Each sequence of blocks
# of a given size is known as an erase region, so a uniform device has
# a single erase region and the above boot block device has four
# erase regions. The driver needs to know the maximum number of erase
# regions that may be present, especially if CFI is used to determine
# the block details at run-time. Typically this option is controlled
# by a requires property in the platform HAL, so users do not need
# to edit it.
#
cdl_option CYGNUM_DEVS_FLASH_AMD_AM29XXXXX_V2_ERASE_REGIONS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 1 to 64
};

# AMD AM29xxxxx driver build options
# Package specific build options including control over
# compiler flags used only in building the AMD am29xxxxx
# flash driver, and details of which tests are built.
#
cdl_component CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the AMD am29xxxxx flash driver. These flags
# are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the AMD am29xxxxx flash driver. These flags
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_DEVS_FLASH_AMD_AM29XXXXX_V2_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# STM32 FLASH memory support
# Flash memory support for on-chip flash on STM32 devices and compatibles.
# This driver implements the V2 flash driver API.
#
cdl_package CYGPKG_DEVS_FLASH_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint: CYGPKG_IO_FLASH
    #     CYGPKG_IO_FLASH == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# Number of words to write per burst
# On typical hardware programming the flash requires disabling
# interrupts for an extended period of time.
# Some or all of the flash hardware will be unusable while each word
# is programmed, and disabling interrupts is the only reliable
# way of ensuring that no interrupt handler or other thread will
# try to access the flash in the middle of an operation. This
# can have a major impact on the real-time responsiveness of
# typical applications. To ameliorate this the driver will
# perform writes in small bursts, briefly re-enabling the cache
# and interrupts between each burst. The number of write operations
# per burst is determined by this option: reducing the number of
# writes per burst will improve real-time response, but will add
# overhead so the actual flash program operation will take
# longer; conversely more writes per burst will worsen response
# times but reduce overhead.
#
cdl_option CYGNUM_DEVS_FLASH_STM32_V2_PROGRAM_BURST_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value: 256
    # Legal values: 4 to 4096
};

# Program/erase parallelism
# The Flash interface of the STM32 F2 and F4 families can program or erase
# multiple bits in one step. The maximum possible parallelism depends
# on the supply voltage. The default value of this option (32)
# corresponds to supply voltage of 2.7 - 3.6V, but another value
# may be chosen if a different voltage is used.
#
cdl_option CYGNUM_DEVS_FLASH_STM32_PARALLELISM {
    # This option is not active
    # ActiveIf constraint:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values:  8 16 32 64 
};

# STM32 driver build options
# Package specific build options including control over
# compiler flags used only in building the STM32
# flash driver, and details of which tests are built.
#
cdl_component CYGPKG_DEVS_FLASH_STM32_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the STM32 flash driver. These flags
# are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_FLASH_STM32_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the STM32 flash driver. These flags
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_DEVS_FLASH_STM32_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# M25PXX flash memory support
# Flash memory support for Numonyx M25Pxx SPI flash devices and 
# compatibles.  This driver implements the V2 flash driver API
#
cdl_package CYGPKG_DEVS_FLASH_SPI_M25PXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # ActiveIf constraint:  CYGPKG_IO_FLASH && CYGPKG_IO_SPI 
    #     CYGPKG_IO_FLASH == current
    #     CYGPKG_IO_SPI == current
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# Maximum read block size
# In theory it is possible to read back the entire flash contents using
# a single SPI transaction.  However, some SPI bus drivers have a maximum 
# transaction size - for example transactions may be limited to the 
# length of a DMA bounce buffer.  Setting this option to a non-zero value 
# specifies the maximum SPI bus transfer size which will be used when 
# reading back data.  Read requests for areas larger than this block size 
# will automatically be split into a series of smaller SPI bus transactions.
# 
#
cdl_option CYGNUM_DEVS_FLASH_SPI_M25PXX_READ_BLOCK_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# <
# Touch screen driver for the TSC2046 controller
# Touch screen driver for the TSC2046 controller
#
cdl_package CYGPKG_DEVS_TOUCH_SPI_TSC2046 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_FILEIO
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_IO_SPI
    #     CYGPKG_IO_SPI == current
    #   --> 1
    # Requires: CYGFUN_KERNEL_API_C
    #     CYGFUN_KERNEL_API_C (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
};

# >
# Device name for the touch screen driver
# This option specifies the name of the touch screen 
# device
#
cdl_option CYGDAT_DEVS_TOUCH_SPI_TSC2046_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ts\""
    # value_source default
    # Default value: "\"/dev/ts\""
};

# Driver trace
# Enable I2C transaction trace. Select to debug the driver.
#
cdl_option CYGDAT_DEVS_TOUCH_SPI_TSC2046_TRACE {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Scan frequency in Hertz
# Specifies the interval between samples.
#
cdl_option CYGNUM_DEVS_TOUCH_SPI_TSC2046_SCAN_FREQUENCY {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
    # Legal values:  1 to 100 
};

# Width of the screen
# Specifies the dimension of the screen in pixels (horizontally)
#
cdl_option CYGNUM_DEVS_TOUCH_SPI_TSC2046_HORIZONTAL_SPAN {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 400
    # value_source default
    # Default value: 400
};

# Height of the screen
# Specifies the dimension of the screen in pixels (vertically)
#
cdl_option CYGNUM_DEVS_TOUCH_SPI_TSC2046_VERTICAL_SPAN {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 240
    # value_source default
    # Default value: 240
};

# Swap vertical measurements
# Select this option to mirror the vertical measurement from the
# controller.
#
cdl_option CYGSEM_DEVS_TOUCH_SPI_TSC2046_VERTICAL_SWAP {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Swap horizontal measurements
# Select this option to mirror the horizontal measurement from the
# controller.
#
cdl_option CYGSEM_DEVS_TOUCH_SPI_TSC2046_HORIZONTAL_SWAP {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Number of events the driver can buffer
# This option defines the size of the touchscreen device internal
# buffer. The cyg_io_read() function will return as many of these
# as there is space for in the buffer passed.
#
cdl_option CYGNUM_DEVS_TOUCH_SPI_TSC2046_EVENT_BUFFER_SIZE {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
};

# options
#
cdl_component CYGPKG_DEVS_TOUCH_SPI_TSC2046_OPTIONS {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the touch screen driver package. These flags
# are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_TOUCH_SPI_TSC2046_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the touch screen driver package. These flags 
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_DEVS_TOUCH_SPI_TSC2046_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# STM32F10XXX board touch screen support
# Hardware support for the STM32F10XXX board
#
cdl_package CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_SPI_TSC2046 is not active

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_HAL_CORTEXM_STM32
    #     CYGPKG_HAL_CORTEXM_STM32 == current
    #   --> 1
    # Requires: CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1
    #     CYGHWR_DEVS_SPI_CORTEXM_STM32_BUS1 == 0
    #   --> 0
};

# >
# options
#
cdl_component CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX_OPTIONS {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the touch screen driver package. These flags
# are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the touch screen driver package. These flags 
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# STM32F10XXX touch screen test application
# This option specifies the set of tests for the STM32F10XXX board 
# touch screen
#
cdl_option CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX_TESTS {
    # This option is not active
    # The parent CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Calculated value:  "tests/stm32f10xxx_ts_test" 
    # Flavor: data
    # Current_value: tests/stm32f10xxx_ts_test
};

# <
# <
# eCos HAL
# doc: ref/the-ecos-hardware-abstraction-layer.html
# The eCos HAL package provide a porting layer for
# higher-level parts of the system such as the kernel and the
# C library. Each installation should have HAL packages for
# one or more architectures, and for each architecture there
# may be one or more supported platforms. It is necessary to
# select one target architecture and one platform for that
# architecture. There are also a number of configuration
# options that are common to all HAL packages.
#
cdl_package CYGPKG_HAL {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == current
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_IO_SPI
    #     Requires: CYGPKG_INFRA CYGPKG_HAL
};

# >
# Platform-independent HAL options
# A number of configuration options are common to most or all
# HAL packages, for example options controlling how much state
# should be saved during a context switch. The implementations
# of these options will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON {
    # There is no associated value.
};

# >
# Provide eCos kernel support
# The HAL can be configured to either support the full eCos
# kernel, or to support only very simple applications which do
# not require a full kernel. If kernel support is not required
# then some of the startup, exception, and interrupt handling
# code can be eliminated.
#
cdl_option CYGFUN_HAL_COMMON_KERNEL_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0
};

# HAL exception support
# When a processor exception occurs, for example an attempt to
# execute an illegal instruction or to perform a divide by
# zero, this exception may be handled in a number of different
# ways. If the target system has gdb support then typically
# the exception will be handled by gdb code. Otherwise if the
# HAL exception support is enabled then the HAL will invoke a
# routine deliver_exception(). Typically this routine will be
# provided by the eCos kernel, but it is possible for
# application code to provide its own implementation. If the
# HAL exception support is not enabled and a processor
# exception occurs then the behaviour of the system is
# undefined.
#
cdl_option CYGPKG_HAL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS (unknown) == 0
    #   --> 0
    # Requires: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS (unknown) == 0
    #   --> 0
};

# Stop calling constructors early
# This option supports environments where some constructors
# must be run in the context of a thread rather than at
# simple system startup time. A boolean flag named
# cyg_hal_stop_constructors is set to 1 when constructors
# should no longer be invoked. It is up to some other
# package to deal with the rest of the constructors.
# In the current version this is only possible with the
# C library.
#
cdl_option CYGSEM_HAL_STOP_CONSTRUCTORS_ON_FLAG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS
    #     CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS (unknown) == 0
    #   --> 0
};

# HAL uses the MMU and allows for CDL manipulation of it's use
#
cdl_interface CYGINT_HAL_SUPPORTS_MMU_TABLES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     ActiveIf: CYGINT_HAL_SUPPORTS_MMU_TABLES
};

# Install MMU tables.
# This option controls whether this application installs
# its own Memory Management Unit (MMU) tables, or relies on the
# existing environment to run.
#
cdl_option CYGSEM_HAL_INSTALL_MMU_TABLES {
    # This option is not active
    # ActiveIf constraint: CYGINT_HAL_SUPPORTS_MMU_TABLES
    #     CYGINT_HAL_SUPPORTS_MMU_TABLES == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_STATIC_MMU_TABLES
    #     Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
};

# Use static MMU tables.
# This option defines an environment where any Memory
# Management Unit (MMU) tables are constant.  Normally used by ROM
# based environments, this provides a way to save RAM usage which
# would otherwise be required for these tables.
#
cdl_option CYGSEM_HAL_STATIC_MMU_TABLES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
    #     CYGSEM_HAL_INSTALL_MMU_TABLES == 0
    #   --> 0
};

# Route diagnostic output to debug channel
# If not inheriting the console setup from the ROM monitor,
# it is possible to redirect diagnostic output to the debug
# channel by enabling this option. Depending on the debugger
# used it may also be necessary to select a mangler for the
# output to be displayed by the debugger.
#
cdl_component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN {
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #   --> 1
    # ActiveIf constraint:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    #     CYGPKG_HAL_ARM (unknown) == 0
    #     CYGPKG_HAL_POWERPC_MPC8xx (unknown) == 0
    #     CYGPKG_HAL_V85X_V850 (unknown) == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# >
# Mangler used on diag output
# It is sometimes necessary to mangle (encode) the
# diag ASCII text output in order for it to show up at the
# other end. In particular, GDB may silently ignore raw
# ASCII text.
#
cdl_option CYGSEM_HAL_DIAG_MANGLER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value GDB
    # value_source default
    # Default value: GDB
    # Legal values: "GDB" "None"
};

# <
# Grouped libraries for linking
# This option provides a list of libraries used to satisfy
# linker dependencies, but necessary for building eCos. It is passed
# to a GROUP() directive in the linker script, which is analogous
# to using the "-(" aka "--start-group", and "-)" aka
# "--end-group" options on the linker command line.
# It provides a similar function to adding "-llibname" to the
# linker, but with the added feature that each library in the group
# is scanned in turn for unresolved symbols, and this process is
# repeated until there are no more unresolved symbols. This is important
# for system libraries as there are often mutual dependencies.
# This option should not be used for adding application specific
# libraries. That should be done in the application's own makefile
# or link line.
# Users wishing to use the GNU Compiler prior to GCC 3.0 will
# need to remove libsupc++.a from this option.
# Note that libtarget.a is always required to build eCos.
#
cdl_component CYGBLD_HAL_LINKER_GROUPED_LIBS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "libtarget.a libgcc.a libsupc++.a"
    # value_source default
    # Default value: CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
    #     CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT == "libtarget.a libgcc.a libsupc++.a"
    #   --> "libtarget.a libgcc.a libsupc++.a"
    # Requires:  is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS, "libtarget.a") 
    #     CYGBLD_HAL_LINKER_GROUPED_LIBS == "libtarget.a libgcc.a libsupc++.a"
    #   --> 1

    # The following properties are affected by this value
    # component CYGBLD_HAL_LINKER_GROUPED_LIBS
    #     Requires:  is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS, "libtarget.a") 
};

# >
# Default setting
# This option is intended to be used by other eCos packages (including
# HAL packages) to provide a different default value for
# CYGBLD_HAL_LINKER_GROUPED_LIBS.
# This is separated into its own option to continue to
# allow the user to make customisations to the grouped library
# list.
#
cdl_option CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "libtarget.a libgcc.a libsupc++.a"
    # value_source default
    # Default value: "libtarget.a libgcc.a libsupc++.a"

    # The following properties are affected by this value
    # component CYGBLD_HAL_LINKER_GROUPED_LIBS
    #     DefaultValue: CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
};

# <
# <
# HAL interrupt handling
# A number of configuration options related to interrupt
# handling are common to most or all HAL packages, even though
# the implementations will vary from architecture to
# architecture.
#
cdl_component CYGPKG_HAL_COMMON_INTERRUPTS {
    # There is no associated value.
};

# >
# Use separate stack for interrupts
# When an interrupt occurs this interrupt can be handled either
# on the current stack or on a separate stack maintained by the
# HAL. Using a separate stack requires a small number of extra
# instructions in the interrupt handling code, but it has the
# advantage that it is no longer necessary to allow extra space
# in every thread stack for the interrupt handlers. The amount
# of extra space required depends on the interrupt handlers
# that are being used.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # package CYGPKG_REDBOOT
    #     Requires:  CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK == 0 
};

# Interrupt stack size
# This configuration option specifies the stack size in bytes
# for the interrupt stack. Typically this should be a multiple
# of 16, but the exact requirements will vary from architecture
# to architecture. The interrupt stack serves two separate
# purposes. It is used as the stack during system
# initialization. In addition, if the interrupt system is
# configured to use a separate stack then all interrupts will
# be processed on this stack. The exact memory requirements
# will vary from application to application, and will depend
# heavily on whether or not other interrupt-related options,
# for example nested interrupts, are enabled. On most targets,
# in a configuration with no kernel this stack will also be
# the stack used to invoke the application, and must obviously
# be appropriately large in that case.
#
cdl_option CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE {
    # Flavor: data
    user_value 4096
    # value_source user
    # Default value:  CYGPKG_KERNEL ? 4096 : 32768 
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 32768
    # Legal values: 128 to 1048576
};

# Allow nested interrupts
# When an interrupt occurs the HAL interrupt handling code can
# either leave interrupts disabled for the duration of the
# interrupt handling code, or by doing some extra work it can
# reenable interrupts before invoking the interrupt handler and
# thus allow nested interrupts to happen. If all the interrupt
# handlers being used are small and do not involve any loops
# then it is usually better to disallow nested interrupts.
# However if any of the interrupt handlers are more complicated
# than nested interrupts will usually be required.
#
cdl_option CYGSEM_HAL_COMMON_INTERRUPTS_ALLOW_NESTING {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Save minimum context on interrupt
# The HAL interrupt handling code can exploit the calling conventions
# defined for a given architecture to reduce the amount of state
# that has to be saved. Generally this improves performance and
# reduces code size. However it can make source-level debugging
# more difficult.
#
cdl_option CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
};

# Chain all interrupts together
# Interrupts can be attached to vectors either singly, or be
# chained together. The latter is necessary if there is no way
# of discovering which device has interrupted without
# inspecting the device itself. It can also reduce the amount
# of RAM needed for interrupt decoding tables and code.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Ignore spurious [fleeting] interrupts
# On some hardware, interrupt sources may not be de-bounced or
# de-glitched.  Rather than try to handle these interrupts (no
# handling may be possible), this option allows the HAL to simply
# ignore them.  In most cases, if the interrupt is real it will
# reoccur in a detectable form.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_IGNORE_SPURIOUS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# HAL context switch support
# A number of configuration options related to thread contexts
# are common to most or all HAL packages, even though the
# implementations will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON_CONTEXT {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Use minimum thread context
# The thread context switch code can exploit the calling
# conventions defined for a given architecture to reduce the
# amount of state that has to be saved during a context
# switch. Generally this improves performance and reduces
# code size. However it can make source-level debugging more
# difficult.
#
cdl_option CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source inferred
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
};

# <
# Explicit control over cache behaviour
# These options let the default behaviour of the caches 
# be easily configurable.
#
cdl_component CYGPKG_HAL_CACHE_CONTROL {
    # There is no associated value.
};

# >
# Enable DATA cache on startup
# Enabling this option will cause the data cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the data cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_component CYGSEM_HAL_ENABLE_DCACHE_ON_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# DATA cache mode on startup
# This option controls the mode the cache will be set to
# when enabled on startup.
#
cdl_option CYGSEM_HAL_DCACHE_STARTUP_MODE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value COPYBACK
    # value_source default
    # Default value: COPYBACK
    # Legal values:  "COPYBACK" "WRITETHRU" 
};

# <
# Enable INSTRUCTION cache on startup
# Enabling this option will cause the instruction cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the instruction cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_option CYGSEM_HAL_ENABLE_ICACHE_ON_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Source-level debugging support
# If the source level debugger gdb is to be used for debugging
# application code then it may be necessary to configure in support
# for this in the HAL.
#
cdl_component CYGPKG_HAL_DEBUG {
    # There is no associated value.
};

# >
# Support for GDB stubs
# The HAL implements GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS {
    # Implemented by CYGPKG_HAL_CORTEXM_STM32, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS
    # option CYGBLD_BUILD_REDBOOT_WITH_GDB
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS
};

# Include GDB stubs in HAL
# This option causes a set of GDB stubs to be included into the
# system. On some target systems the GDB support will be
# provided by other means, for example by a ROM monitor. On
# other targets, especially when building a ROM-booting system,
# the necessary support has to go into the target library
# itself. When GDB stubs are include in a configuration, HAL
# serial drivers must also be included.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # The inferred value should not be edited directly.
    inferred_value 1
    # value_source inferred
    # Default value: 0
    # Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
    # Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     DefaultValue: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     DefaultValue:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGBLD_BUILD_COMMON_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGPKG_HAL_GDB_FILEIO
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGBLD_BUILD_REDBOOT_WITH_GDB
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
};

# Support for external break support in GDB stubs
# The HAL implements external break (or asynchronous interrupt)
# in the GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS_BREAK {
    # Implemented by CYGPKG_HAL_CORTEXM_STM32, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
};

# Include GDB external break support for stubs
# This option causes the GDB stub to add a serial interrupt handler
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT in that it is used when
# GDB stubs are present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
    #     CYGINT_HAL_DEBUG_GDB_STUBS_BREAK == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    # option CYGBLD_BUILD_REDBOOT_WITH_GDB
    #     Requires: CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
};

# Platform does not support CTRLC
#
cdl_interface CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
};

# Include GDB external break support when no stubs
# This option adds an interrupt handler for the GDB serial line
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT in that it is used when the GDB
# stubs are NOT present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT {
    # ActiveIf constraint:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # ActiveIf constraint:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
    #     CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 0
    # Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 0

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: ! CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
};

# Include GDB multi-threading debug support
# This option enables some extra HAL code which is needed
# to support multi-threaded source level debugging.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT {
    # ActiveIf constraint:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #     CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT (unknown) == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_WITH_THREADS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
};

# Number of times to retry sending a $O packet
# This option controls the number of attempts that eCos programs
# will make to send a $O packet to a host GDB process.  If it is
# set non-zero, then the target process will attempt to resend the
# $O packet data up to this number of retries.  Caution: use of
# this option is not recommended as it can thoroughly confuse the
# host GDB process.
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Timeout period for GDB packets
# This option controls the time (in milliseconds) that eCos programs
# will wait for a response when sending packets to a host GDB process.
# If this time elapses, then the packet will be resent, up to some
# maximum number of times (CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES).
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 500
    # value_source default
    # Default value: 500
};

# Location of CRC32 table
# The stubs use a 1 kilobyte CRC table that can either be pregenerated
# and placed in ROM, or generated at runtime in RAM. Depending on
# your memory constraints, one of these options may be better.
#
cdl_option CYGDBG_HAL_CRCTABLE_LOCATION {
    # Flavor: data
    user_value ROM
    # value_source user
    # Default value: RAM
    # Legal values: "ROM" "RAM"

    # The following properties are affected by this value
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYGDBG_HAL_CRCTABLE_LOCATION == "ROM" 
};

# <
# ROM monitor support
# Support for ROM monitors can be built in to your application. 
# It may also be relevant to build your application as a ROM monitor
# itself. Such options are contained here if relevant for your chosen
# platform. The options and ROM monitors available to choose are
# platform-dependent.
#
cdl_component CYGPKG_HAL_ROM_MONITOR {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Target has virtual vector support
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT {
    # Implemented by CYGPKG_HAL_CORTEXM_STM32, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
};

# Target supports baud rate control via vectors
# Whether this target supports the __COMMCTL_GETBAUD
# and __COMMCTL_SETBAUD virtual vector comm control operations.
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT {
    # Implemented by CYGPKG_HAL_CORTEXM_STM32, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_VARIABLE_BAUD_RATE
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
};

# Enable use of virtual vector calling interface
# Virtual vector support allows the HAL to let the ROM
# monitor handle certain operations. The virtual vector table
# defines a calling interface between applications running in
# RAM and the ROM monitor.
#
cdl_component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # option CYGFUN_IO_FLASH_BLOCK_FROM_FIS
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    # option CYGFUN_IO_FLASH_BLOCK_FROM_FIS
    #     DefaultValue: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    # component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA
    #     ActiveIf: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
};

# >
# Inherit console settings from ROM monitor
# When this option is set, the application will inherit
# the console as set up by the ROM monitor. This means
# that the application will use whatever channel and
# mangling style was used by the ROM monitor when
# the application was launched.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE {
    # This option is not active
    # ActiveIf constraint: CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 0

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# Debug channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the debug channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE {
    # Calculated value:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
};

# Console channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the console channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE {
    # Calculated value:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #     CYGDBG_HAL_DIAG_TO_DEBUG_CHAN == 1
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
};

# Initialize whole of virtual vector table
# This option will cause the whole of the virtual
# vector table to be initialized with dummy values on
# startup. When this option is enabled, all the
# options below must also be enabled - or the
# table would be empty when the application
# launches.
# On targets where older ROM monitors without
# virtual vector support may still be in use, it is
# necessary for RAM applictions to initialize the
# table (since all HAL diagnostics and debug IO
# happens via the table).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
    #     CYG_HAL_STARTUP == ROM
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
};

# Claim virtual vector table entries by default
# By default most virtual vectors will be claimed by
# RAM startup configurations, meaning that the RAM
# application will provide the services. The
# exception is COMMS support (HAL
# diagnostics/debugging IO) which is left in the
# control of the ROM monitor.
# The reasoning behind this is to get as much of the
# code exercised during regular development so it
# is known to be working the few times a new ROM
# monitor or a ROM production configuration is used
# - COMMS are excluded only by necessity in order to
# avoid breaking an existing debugger connections
# (there may be ways around this).
# For production RAM configurations this option can
# be switched off, causing the appliction to rely on
# the ROM monitor for these services, thus
# saving some space.
# Individual vectors may also be left unclaimed,
# controlled by the below options (meaning that the
# associated service provided by the ROM monitor
# will be used).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT {
    # This option is not active
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
};

# Claim reset virtual vectors
# This option will cause the reset and kill_by_reset
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
};

# Claim version virtual vectors
# This option will cause the version
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #   --> 1
};

# Claim delay_us virtual vector
# This option will cause the delay_us
# virtual vector to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
};

# Claim data virtual vectors
# This option will cause the data virtual vectors
# to be claimed. At present there is only one, used
# by the RedBoot ethernet driver to share diag output.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
};

# Claim comms virtual vectors
# This option will cause the communication tables
# that are part of the virtual vectors mechanism to
# be claimed. Note that doing this may cause an
# existing ROM monitor communication connection to
# be closed. For this reason, the option is disabled
# per default for normal application
# configurations.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 1
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     DefaultValue:  !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     Calculated:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
};

# Do diagnostic IO via virtual vector table
# All HAL IO happens via the virtual vector table / comm
# tables when those tables are supported by the HAL.
# If so desired, the low-level IO functions can
# still be provided by the RAM application by
# enabling the CLAIM_COMMS option.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_DIAG {
    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
};

# <
# Behave as a ROM monitor
# Enable this option if this program is to be used as a ROM monitor,
# i.e. applications will be loaded into RAM on the board, and this
# ROM monitor may process exceptions or interrupts generated from the
# application. This enables features such as utilizing a separate
# interrupt stack when exceptions are generated.
#
cdl_option CYGSEM_HAL_ROM_MONITOR {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "JTAG" 
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #   --> 1
    # Requires:  CYGDBG_HAL_CRCTABLE_LOCATION == "ROM" 
    #     CYGDBG_HAL_CRCTABLE_LOCATION == ROM
    #   --> 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     Requires: CYGSEM_HAL_ROM_MONITOR
};

# Work with a ROM monitor
# Support can be enabled for different varieties of ROM monitor.
# This support changes various eCos semantics such as the encoding
# of diagnostic output, or the overriding of hardware interrupt
# vectors.
# Firstly there is "Generic" support which prevents the HAL
# from overriding the hardware vectors that it does not use, to
# instead allow an installed ROM monitor to handle them. This is
# the most basic support which is likely to be common to most
# implementations of ROM monitor.
# "GDB_stubs" provides support when GDB stubs are included in
# the ROM monitor or boot ROM.
#
cdl_option CYGSEM_HAL_USE_ROM_MONITOR {
    # Flavor: booldata
    user_value 0 0
    # value_source user
    # Default value:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0 0
    # Legal values:  "Generic" "GDB_stubs" 
    # Requires:  CYG_HAL_STARTUP == "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     ActiveIf: CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
};

# <
# Platform defined I/O channels
# Platforms which provide additional I/O channels can implement
# this interface, indicating that the function plf_if_init()
# needs to be called.
#
cdl_interface CYGINT_HAL_PLF_IF_INIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Platform IDE I/O support
# Platforms which provide IDE controllers can implement
# this interface, indicating that IDE I/O macros are
# available.
#
cdl_interface CYGINT_HAL_PLF_IF_IDE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGSEM_REDBOOT_DISK_IDE
    #     ActiveIf:  CYGINT_HAL_PLF_IF_IDE != 0 
};

# Saved interrupt state required
# Components requiring access to saved interrupt state via the
# hal_saved_interrupt_state symbol should implement this
# interface.
#
cdl_interface CYGINT_HAL_COMMON_SAVED_INTERRUPT_STATE_REQUIRED {
    # Implemented by CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT, active, enabled
    # Implemented by CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT, active, disabled
    # Implemented by CYGFUN_HAL_CORTEXM_STM32_PROFILE_TIMER, inactive, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
};

# File I/O operations via GDB
# This option enables support for various file I/O
# operations using the GDB remote protocol to communicate
# with GDB. The operations are then performed on the
# debugging host by proxy. These operations are only
# currently available by using a system call interface
# to RedBoot. This may change in the future.
#
cdl_option CYGPKG_HAL_GDB_FILEIO {
    # This option is not active
    # ActiveIf constraint: CYGSEM_REDBOOT_BSP_SYSCALLS
    #     CYGSEM_REDBOOT_BSP_SYSCALLS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
};

# Build Compiler sanity checking tests
# Enabling this option causes compiler tests to be built.
#
cdl_option CYGPKG_HAL_BUILD_COMPILER_TESTS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
};

# Common HAL tests
# This option specifies the set of tests for the common HAL.
#
cdl_component CYGPKG_HAL_TESTS {
    # Calculated value:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
    #     CYGINT_HAL_TESTS_NO_CACHES == 0
    #     CYGPKG_HAL_BUILD_COMPILER_TESTS == 0
    #     CYGVAR_KERNEL_COUNTERS_CLOCK (unknown) == 0
    # Flavor: data
    # Current_value: tests/context tests/basic tests/cache tests/intr
};

# >
# Interface for cache presence
# Some architectures and/or platforms do not have caches. By
# implementing this interface, these can disable the various
# cache-related tests.
#
cdl_interface CYGINT_HAL_TESTS_NO_CACHES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
};

# <
# Cortex-M Architecture
# This package provides generic support for the ARM Cortex-M architecture.
# It is also necessary to select a variant and platform HAL package.
#
cdl_package CYGPKG_HAL_CORTEXM {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    #     CYGHWR_HAL_CORTEXM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #   --> 1
    # Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    #     CYGHWR_HAL_CORTEXM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #   --> 1

    # The following properties are affected by this value
};

# >
# The platform and architecture supports Big Endian operation
#
cdl_interface CYGINT_HAL_CORTEXM_BIGENDIAN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_BIGENDIAN
    #     ActiveIf:  CYGINT_HAL_CORTEXM_BIGENDIAN != 0 
};

# Use big-endian mode
# Use the CPU in big-endian mode.
#
cdl_option CYGHWR_HAL_CORTEXM_BIGENDIAN {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_CORTEXM_BIGENDIAN != 0 
    #     CYGINT_HAL_CORTEXM_BIGENDIAN == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
};

# Cortex-M CPU family
# The Cortex-M architecture has two variants at present. The
# M3 and M4 are based on the ARMV7 architecture specification
# and execute the Thumb2 instruction set. The M4 in addition
# to M3 instruction set has SIMD and optional single precision
# floating point instructions.
#
cdl_option CYGHWR_HAL_CORTEXM {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value M3
    # value_source default
    # Default value: M3
    # Legal values:  "M3" "M4" 

    # The following properties are affected by this value
    # component CYGPKG_HAL_CORTEXM_FPU
    #     ActiveIf:  CYGHWR_HAL_CORTEXM == "M4" 
    # component CYGBLD_ARCH_CPUFLAGS
    #     Calculated:  CYGHWR_HAL_CORTEXM == "M3" ? " -mcpu=cortex-m3" :
    #                          CYGHWR_HAL_CORTEXM_FPU     ? " -mcpu=cortex-m4" : " " 
    # option CYGBLD_ARCH_CPUFLAGX_M4
    #     Calculated:  (CYGHWR_HAL_CORTEXM != "M4") ? "-mcpu=cortex-m4" : "no_exclude" 
    # package CYGPKG_HAL_CORTEXM_STM32
    #     Requires:  (CYGHWR_HAL_CORTEXM == "M3") || (CYGHWR_HAL_CORTEXM == "M4") 
    # package CYGPKG_HAL_CORTEXM_STM32
    #     Requires:  (CYGHWR_HAL_CORTEXM == "M3") || (CYGHWR_HAL_CORTEXM == "M4") 
};

# System tick timer clock
# Select the Cortex-M system tick timer clock source.
#
cdl_option CYGHWR_HAL_CORTEXM_SYSTICK_CLK_SOURCE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value EXTERNAL
    # value_source default
    # Default value: EXTERNAL
    # Legal values:  "EXTERNAL" "INTERNAL" 
};

# Floating Point Support
# Floating point arithmetics can be executed in software or,
# on devices with floating point unit - FPU, in hardware.
# FPU is optional on Cortex-M4 architecture, and is present
# on Cortex-M4F cores.
#
cdl_component CYGPKG_HAL_CORTEXM_FPU {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM == "M4" 
    #     CYGHWR_HAL_CORTEXM == M3
    #   --> 0

    # Calculated value:  !CYGHWR_HAL_CORTEXM_FPU ? "SOFT" :
    #                               "HARD: " . CYGHWR_HAL_CORTEXM_FPU_SWITCH 
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    #     CYGHWR_HAL_CORTEXM_FPU_SWITCH == 0
    # Flavor: data
    # Current_value: SOFT
};

# >
# FPU is FPv4-SP-D16
#
cdl_interface CYGINT_HAL_FPV4_SP_D16 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_FPU is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_FPV4_SP_D16
    #     ActiveIf:  CYGINT_HAL_FPV4_SP_D16 
    # option CYGHWR_HAL_FPV4_SP_D16
    #     Calculated:  CYGINT_HAL_FPV4_SP_D16 && CYGHWR_HAL_CORTEXM_FPU 
};

# FPU present.
#
cdl_interface CYGINT_HAL_CORTEXM_FPU {
    # Implemented by CYGINT_HAL_FPV4_SP_D16, inactive, disabled
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_FPU is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_FPU
    #     ActiveIf:  CYGINT_HAL_CORTEXM_FPU 
};

# Use hardware FPU
# Cortex-M4F cores have a single precision floating point unit.
# This option enables FPU usage and provides related FPU control
# options.
# Hardware FPU enable, implies Cortex-M4 code generation, and
# build flags shall be set accordingly, including -mcpu=cortex-m4.
# As a side effect, the Cortex_M4 build flag will remain (sticky)
# even if hardware FPU is subsequently disabled.
# 
#
cdl_component CYGHWR_HAL_CORTEXM_FPU {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_FPU is not active
    # ActiveIf constraint:  CYGINT_HAL_CORTEXM_FPU 
    #     CYGINT_HAL_CORTEXM_FPU == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_CORTEXM_FPU
    #     Calculated:  !CYGHWR_HAL_CORTEXM_FPU ? "SOFT" :
    #                               "HARD: " . CYGHWR_HAL_CORTEXM_FPU_SWITCH 
    # option CYGHWR_HAL_FPV4_SP_D16
    #     Calculated:  CYGINT_HAL_FPV4_SP_D16 && CYGHWR_HAL_CORTEXM_FPU 
    # component CYGBLD_ARCH_CPUFLAGS
    #     Calculated:  CYGHWR_HAL_CORTEXM == "M3" ? " -mcpu=cortex-m3" :
    #                          CYGHWR_HAL_CORTEXM_FPU     ? " -mcpu=cortex-m4" : " " 
    # option CYGBLD_ARCH_CPUFLAGX_M3
    #     Calculated:  CYGHWR_HAL_CORTEXM_FPU ? "-mcpu=cortex-m3" : "no_exclude" 
    # component CYGBLD_ARCH_CPUFLAG_FLOAT_ABI
    #     Calculated:  CYGHWR_HAL_CORTEXM_FPU ? " -mfloat-abi=hard" : "" 
    # option CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI
    #     Calculated:  CYGHWR_HAL_CORTEXM_FPU ? "-mfloat-abi=soft" : "-mfloat-abi=hard" 
    # option CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT
    #     Calculated:  CYGHWR_HAL_CORTEXM_FPU ? "-msoft-float" : "-mhard-float" 
};

# >
# FPU context switch
# This option selects the FPU context switching scheme.
# Straight-forward behaviour is to save and
# restore FPU state on every CPU context save/restore.
# While simple, robust and deterministic, this
# approach can be expensive if the FPU is used by
# few threads. The alternative schemes, available by this
# option, are to use hardware features that allow either:
# - LAZY: Save FPU context only if the thread makes use of
# the FPU. Where only few threads use FPU this should give
# shorter average context switching delay compared to ALL
# scheme. If more than one threads use FPU, the worst context
# switching time is typically worse than the one for ALL
# scheme.
# - ALL: Save FPU context for all threads. This is a simple
# scheme, which if all, or majority of threads use FPU may
# give better average context switching time than LAZY.
# This scheme also includes Lazy Stacking of FPU state
# for exceptions/interrupts.
# - NONE: No FPU state saving, this scheme adds no additional
# delay for saving of FPU state to context switching, but is
# only suitable if maximum one thread uses floating point.
#
cdl_option CYGHWR_HAL_CORTEXM_FPU_SWITCH {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_FPU is not active
    # The parent CYGHWR_HAL_CORTEXM_FPU is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value LAZY
    # value_source default
    # Default value: LAZY
    # Legal values:  "ALL" "LAZY" "NONE" 
    # Requires:  is_active (CYGPKG_KERNEL) implies 
    #                         CYGTST_KERNEL_SKIP_MULTI_THREAD_FP_TEST ==
    #                         (CYGHWR_HAL_CORTEXM_FPU_SWITCH == "NONE") 
    #     CYGPKG_KERNEL (unknown) == 0
    #     CYGTST_KERNEL_SKIP_MULTI_THREAD_FP_TEST (unknown) == 0
    #     CYGHWR_HAL_CORTEXM_FPU_SWITCH == 0
    #   --> 1

    # The following properties are affected by this value
    # component CYGPKG_HAL_CORTEXM_FPU
    #     Calculated:  !CYGHWR_HAL_CORTEXM_FPU ? "SOFT" :
    #                               "HARD: " . CYGHWR_HAL_CORTEXM_FPU_SWITCH 
    # option CYGHWR_HAL_CORTEXM_FPU_SWITCH
    #     Requires:  is_active (CYGPKG_KERNEL) implies 
    #                         CYGTST_KERNEL_SKIP_MULTI_THREAD_FP_TEST ==
    #                         (CYGHWR_HAL_CORTEXM_FPU_SWITCH == "NONE") 
};

# FPv4-SP-D16
# FPv4-SP-D16 is ARMv7 architecture single precision floating
# point unit with 16 double precision / 32 single precision
# registers. It is found on Cortex-M4F and Cortex-R5 cores.
#
cdl_option CYGHWR_HAL_FPV4_SP_D16 {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_FPU is not active
    # The parent CYGHWR_HAL_CORTEXM_FPU is disabled
    # ActiveIf constraint:  CYGINT_HAL_FPV4_SP_D16 
    #     CYGINT_HAL_FPV4_SP_D16 == 0
    #   --> 0

    # Calculated value:  CYGINT_HAL_FPV4_SP_D16 && CYGHWR_HAL_CORTEXM_FPU 
    #     CYGINT_HAL_FPV4_SP_D16 == 0
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAG_FPV4SPD16
    #     Calculated:  CYGHWR_HAL_FPV4_SP_D16 ? " -mfpu=fpv4-sp-d16" : "" 
    # option CYGBLD_ARCH_CPUFLAGX_FPV4SPD16
    #     Calculated:  CYGHWR_HAL_FPV4_SP_D16 ? "do_not_exclude" : "-mfpu=fpv4-sp-d16" 
};

# <
# <
# Architecture optimized endian functions
# Cortex-M architecture implements instructions for endian
# manipulation (byte swapping).  If enabled, this feature
# can produce shorter and faster code for that.
#
cdl_option CYGIMP_HAL_ARCH_ENDIAN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Maximum usable priority
# Calculate the maximum exception priority that can be set by interrupts.
# Higher priorities are reserved for the DEBUG and SVC traps.
#
cdl_option CYGNUM_HAL_CORTEXM_PRIORITY_MAX {
    # Calculated value: 1<<(8-CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS)
    #     CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS == 4
    # Flavor: data
    # Current_value: 16
};

# Linker script
#
cdl_option CYGBLD_LINKER_SCRIPT {
    # Calculated value:  "src/cortexm.ld" 
    # Flavor: data
    # Current_value: src/cortexm.ld
};

# Number of breakpoints supported by the HAL.
# This option determines the number of breakpoints supported by the HAL.
#
cdl_option CYGNUM_HAL_BREAKPOINT_LIST_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
};

# Architecture related build flags
# This component defines flags that code generation dependent on specific
# CPU type or CPU features.
#
cdl_component CYGBLD_ARCH_CPUFLAGS {
    # Calculated value:  CYGHWR_HAL_CORTEXM == "M3" ? " -mcpu=cortex-m3" :
    #                          CYGHWR_HAL_CORTEXM_FPU     ? " -mcpu=cortex-m4" : " " 
    #     CYGHWR_HAL_CORTEXM == M3
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    # Flavor: data
    # Current_value:  -mcpu=cortex-m3
    # Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAGX_M3 == no_exclude
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAGX_M4 == -mcpu=cortex-m4
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI == -mfloat-abi=hard
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT == -mhard-float
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAGX_FPV4SPD16 == -mfpu=fpv4-sp-d16
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAGS == " -mcpu=cortex-m3"
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAG_FLOAT_ABI == ""
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_ARCH_CPUFLAG_FPV4SPD16 == ""
    #   --> 1
    # Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAGX_M3 == no_exclude
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAGX_M4 == -mcpu=cortex-m4
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI == -mfloat-abi=hard
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT == -mhard-float
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAGX_FPV4SPD16 == -mfpu=fpv4-sp-d16
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAGS == " -mcpu=cortex-m3"
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAG_FLOAT_ABI == ""
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #     CYGBLD_ARCH_CPUFLAG_FPV4SPD16 == ""
    #   --> 1

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# >
# Exclude Cortex-M3 build flag
#
cdl_option CYGBLD_ARCH_CPUFLAGX_M3 {
    # Calculated value:  CYGHWR_HAL_CORTEXM_FPU ? "-mcpu=cortex-m3" : "no_exclude" 
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    # Flavor: data
    # Current_value: no_exclude

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# Exclude Cortex-M4 build flag
#
cdl_option CYGBLD_ARCH_CPUFLAGX_M4 {
    # Calculated value:  (CYGHWR_HAL_CORTEXM != "M4") ? "-mcpu=cortex-m4" : "no_exclude" 
    #     CYGHWR_HAL_CORTEXM == M3
    # Flavor: data
    # Current_value: -mcpu=cortex-m4

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# Float ABI build flags
#
cdl_component CYGBLD_ARCH_CPUFLAG_FLOAT_ABI {
    # Calculated value:  CYGHWR_HAL_CORTEXM_FPU ? " -mfloat-abi=hard" : "" 
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    # Flavor: data
    # Current_value: 

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# >
# Float ABI flag to exclude
#
cdl_option CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI {
    # Calculated value:  CYGHWR_HAL_CORTEXM_FPU ? "-mfloat-abi=soft" : "-mfloat-abi=hard" 
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    # Flavor: data
    # Current_value: -mfloat-abi=hard

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# Alt. float flag to exclude
#
cdl_option CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT {
    # Calculated value:  CYGHWR_HAL_CORTEXM_FPU ? "-msoft-float" : "-mhard-float" 
    #     CYGHWR_HAL_CORTEXM_FPU == 0
    # Flavor: data
    # Current_value: -mhard-float

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# FPv4-SP-D16 flags
#
cdl_component CYGBLD_ARCH_CPUFLAG_FPV4SPD16 {
    # Calculated value:  CYGHWR_HAL_FPV4_SP_D16 ? " -mfpu=fpv4-sp-d16" : "" 
    #     CYGHWR_HAL_FPV4_SP_D16 == 0
    # Flavor: data
    # Current_value: 

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# >
# Exclude FPv4-SP-D16 flag
#
cdl_option CYGBLD_ARCH_CPUFLAGX_FPV4SPD16 {
    # Calculated value:  CYGHWR_HAL_FPV4_SP_D16 ? "do_not_exclude" : "-mfpu=fpv4-sp-d16" 
    #     CYGHWR_HAL_FPV4_SP_D16 == 0
    # Flavor: data
    # Current_value: -mfpu=fpv4-sp-d16

    # The following properties are affected by this value
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_CFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
    # component CYGBLD_ARCH_CPUFLAGS
    #     Requires: 
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M3)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_M4)             &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FLOAT_ABI)      &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_HARDSOFT_FLOAT) &&
    #                 !is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGX_FPV4SPD16)      &&
    #     
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAGS)                 &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FLOAT_ABI)        &&
    #                 is_substr(CYGBLD_GLOBAL_LDFLAGS, CYGBLD_ARCH_CPUFLAG_FPV4SPD16)
    #             
};

# <
# <
# <
# Cortex-M3/-M4 STM32 Variant
# This package provides generic support for the ST Cortex-M based STM32
# microcontroller family.
# It is also necessary to select a variant and platform HAL package.
#
cdl_package CYGPKG_HAL_CORTEXM_STM32 {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  (CYGHWR_HAL_CORTEXM == "M3") || (CYGHWR_HAL_CORTEXM == "M4") 
    #     CYGHWR_HAL_CORTEXM == M3
    #     CYGHWR_HAL_CORTEXM == M3
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_IO_SERIAL_CORTEXM_STM32
    #     ActiveIf: CYGPKG_HAL_CORTEXM_STM32
    # package CYGPKG_DEVS_WALLCLOCK_STM32
    #     ActiveIf: CYGPKG_HAL_CORTEXM_STM32
    # package CYGPKG_DEVS_SPI_CORTEXM_STM32
    #     Requires: CYGPKG_HAL_CORTEXM_STM32
    # package CYGPKG_DEVS_ADC_CORTEXM_STM32
    #     ActiveIf: CYGPKG_HAL_CORTEXM_STM32
    # package CYGPKG_DEVS_USB_CORTEXM_STM32
    #     Requires: CYGPKG_HAL_CORTEXM_STM32
    # package CYGPKG_DEVS_FRAMEBUF_STM32
    #     ActiveIf: CYGPKG_HAL_CORTEXM_STM32
    # package CYGPKG_DEVS_TOUCH_CORTEXM_STM32F10XXX
    #     Requires: CYGPKG_HAL_CORTEXM_STM32
};

# >
# STM32 processor selection
# The options within this component allow you to select which STM32
# processor is in use.
#
cdl_component CYGHWR_HAL_CORTEXM_STM32_SELECTION {
    # There is no associated value.
};

# >
# STM32 processor variant in use
# The STM32 has several variants, the main differences
# being in the size of on-chip FLASH and SRAM
# and numbers of some peripherals. This option
# allows the platform HAL to select the specific
# microcontroller fitted.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32 {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value F103ZE
    # value_source default
    # Default value:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? CYGHWR_HAL_CORTEXM_STM32_F1 :  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") ? CYGHWR_HAL_CORTEXM_STM32_F2 :  CYGHWR_HAL_CORTEXM_STM32_F4 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_F1 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_F2 == 0
    #     CYGHWR_HAL_CORTEXM_STM32_F4 == 0
    #   --> F103ZE

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32_F1
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F1 
    # option CYGHWR_HAL_CORTEXM_STM32_F2
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F2 
    # option CYGHWR_HAL_CORTEXM_STM32_F4
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F4 
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
};

# Processor family in use
# Which family of STM32 processors is in use. This will
# usually be the leading part of the processor model name.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_FAMILY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value F1
    # value_source default
    # Default value: F1
    # Legal values:  "F1" "F2" "F4" 

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? CYGHWR_HAL_CORTEXM_STM32_F1 :  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") ? CYGHWR_HAL_CORTEXM_STM32_F2 :  CYGHWR_HAL_CORTEXM_STM32_F4 
    # option CYGHWR_HAL_CORTEXM_STM32
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? CYGHWR_HAL_CORTEXM_STM32_F1 :  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") ? CYGHWR_HAL_CORTEXM_STM32_F2 :  CYGHWR_HAL_CORTEXM_STM32_F4 
    # option CYGHWR_HAL_CORTEXM_STM32_FAMILY_HIPERFORMANCE
    #     ActiveIf:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4") 
    # option CYGHWR_HAL_CORTEXM_STM32_FAMILY_HIPERFORMANCE
    #     ActiveIf:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4") 
    # option CYGHWR_HAL_CORTEXM_STM32_FAMILY_HIPERFORMANCE
    #     Calculated:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4") 
    # option CYGHWR_HAL_CORTEXM_STM32_FAMILY_HIPERFORMANCE
    #     Calculated:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4") 
    # option CYGHWR_HAL_CORTEXM_STM32_F1
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1" 
    # option CYGHWR_HAL_CORTEXM_STM32_F2
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2" 
    # option CYGHWR_HAL_CORTEXM_STM32_F4
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4" 
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV <= 16) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") && (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_SOURCE == "HSI")) implies  (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 2) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV >= 2) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV >= 2) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL
    #     Requires:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 16) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 432) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 432) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_SYSCLK_DIV
    #     ActiveIf:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_SYSCLK_DIV
    #     ActiveIf:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLLQ_DIV
    #     ActiveIf:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLLQ_DIV
    #     ActiveIf:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) 
    # package CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1" 
    # option CYGNUM_DEVS_FLASH_STM32_PARALLELISM
    #     ActiveIf:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")) 
    # option CYGNUM_DEVS_FLASH_STM32_PARALLELISM
    #     ActiveIf:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")) 
    # package CYGPKG_DEVS_WALLCLOCK_STM32
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1" 
    # option CYGNUM_DEVS_SPI_CORTEXM_STM32_PIN_TOGGLE_RATE
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? 10 : 25 
};

# Part belongs to ST Hi-Performance family
# Indicates that this part conforms to the I/O
# definitions for the Hi-Performance family of
# devices. Currently this includes the STM32 F2 and F4
# devices.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_FAMILY_HIPERFORMANCE {
    # This option is not active
    # ActiveIf constraint:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4") 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # Calculated value:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4") 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    # Flavor: bool
    # Current value: 0
};

# F1 processor family selection
# This option specifies which member of the STM32F1 family is
# in use.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_F1 {
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1" 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value F103ZE
    # value_source default
    # Default value: F103ZE
    # Legal values: "F103RC" "F103VC" "F103ZC"
    #                                   "F103RD" "F103VD" "F103ZD"
    #                                   "F103RE" "F103VE" "F103ZE"
    #                                   "F105R8" "F105V8"
    #                                   "F105RB" "F105VB"
    #                                   "F105RC" "F105VC"
    #                                   "F107RB" "F107VB"
    #                                   "F107RC" "F107VC"
    #                                  
    # Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F1 
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32_F1 == F103ZE
    #   --> 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? CYGHWR_HAL_CORTEXM_STM32_F1 :  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") ? CYGHWR_HAL_CORTEXM_STM32_F2 :  CYGHWR_HAL_CORTEXM_STM32_F4 
    # option CYGHWR_HAL_CORTEXM_STM32_F1
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F1 
    # package CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32_F1 == "F103ZE" 
};

# F2 processor family selection
# This option specifies which member of the STM32F2 family is
# in use.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_F2 {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2" 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value F207IG
    # value_source default
    # Default value: F207IG
    # Legal values: "F205RB" "F205RC" "F205RE" "F205RF" "F205RG"
    #                                   "F205VB" "F205VC" "F205VE" "F205VF" "F205VG"
    #                                   "F205ZB" "F205ZC" "F205ZE" "F205ZF" "F205ZG"
    #                                   "F207VB" "F207VC" "F207VE" "F207VF" "F207VG"
    #                                   "F207ZB" "F207ZC" "F207ZE" "F207ZF" "F207ZG"
    #                                   "F207IB" "F207IC" "F207IE" "F207IF" "F207IG"
    #                                  
    # Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F2 
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32_F2 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? CYGHWR_HAL_CORTEXM_STM32_F1 :  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") ? CYGHWR_HAL_CORTEXM_STM32_F2 :  CYGHWR_HAL_CORTEXM_STM32_F4 
    # option CYGHWR_HAL_CORTEXM_STM32_F2
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F2 
};

# F4 processor family selection
# This option specifies which member of the STM32F4 family is
# in use.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_F4 {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4" 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value F407IG
    # value_source default
    # Default value: F407IG
    # Legal values: "F405RG" "F405VG" "F405ZG"
    #                                   "F415RG" "F415VG" "F415ZG"
    #                                   "F407IG" "F407VG" "F407ZG"
    #                                   "F407IE" "F407VE" "F407ZE"
    #                                   "F417IG" "F417VG" "F417ZG"
    #                                   "F417IE" "F417VE" "F417ZE"
    #                                  
    # Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F4 
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32_F4 == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32
    #     DefaultValue:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1") ? CYGHWR_HAL_CORTEXM_STM32_F1 :  (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") ? CYGHWR_HAL_CORTEXM_STM32_F2 :  CYGHWR_HAL_CORTEXM_STM32_F4 
    # option CYGHWR_HAL_CORTEXM_STM32_F4
    #     Requires:  CYGHWR_HAL_CORTEXM_STM32 == CYGHWR_HAL_CORTEXM_STM32_F4 
};

# <
# Part belongs to connectivity family
# Indicates that this part belongs to the connectivity
# family of devices. These have slightly different interrupt
# and GPIO layouts to the original STM32 F103 devices.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  (CYGHWR_HAL_CORTEXM_STM32 == "F105R8") || (CYGHWR_HAL_CORTEXM_STM32 == "F105V8") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F105RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F105VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RB") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VB") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32 == "F107RC") || (CYGHWR_HAL_CORTEXM_STM32 == "F107VC") ||
    #                               (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F4")
    #                             
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32 == F103ZE
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  !CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV <= 2) 
    # option CYGHWR_HAL_STM32_SPI1_REMAP
    #     ActiveIf: CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    # option CYGHWR_HAL_STM32_SPI3_REMAP
    #     ActiveIf: CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
};

# CPU priority levels
# This option defines the number of bits used to
# encode the exception priority levels that this
# variant of the Cortex-M CPU implements.
#
cdl_option CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS {
    # Calculated value: 4
    # Flavor: data
    # Current_value: 4

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_PRIORITY_MAX
    #     Calculated: 1<<(8-CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS)
};

# Clock setup calculations
#
cdl_component CYGHWR_HAL_CORTEXM_STM32_CLOCK {
    # There is no associated value.
};

# >
# PLL input source
# This sets whether the PLL will be driven by the external
# high-speed clock (HSE), or internal high-speed clock (HSI).
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_SOURCE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value HSE
    # value_source default
    # Default value: HSE
    # Legal values:  "HSI" "HSE" 

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") && (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_SOURCE == "HSI")) implies  (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 2) 
};

# PLL pre-divider
# This option corresponds to the divider used before input to the PLL.
# On non-connectivity parts, you can only divide by 2 or 1. On other
# F1 parts, if using HSI as the clock source, then that is automatically
# divided by 2. If using HSE as the clock source, then this value corresponds
# to the PREDIV1 field of register RCC_CFGR2. On F2 and F4 parts, this value
# corresponds to the PLLM field of RCC_PLLCFGR.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values: 1 to 63
    # Requires:  !CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV <= 2) 
    #     CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY == 0
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 1
    #   --> 1
    # Requires:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV <= 16) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 1
    #   --> 1
    # Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") && (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_SOURCE == "HSI")) implies  (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 2) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_SOURCE == HSE
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 1
    #   --> 1
    # Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV >= 2) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  !CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV <= 2) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV <= 16) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") && (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_SOURCE == "HSI")) implies  (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV == 2) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_PREDIV >= 2) 
};

# PLL multiplier
# This value is used to multiply up the PLL input. On the F1 it corresponds
# to the PLLMUL field of RCC_CFGR. On the F2 and F4 it corresponds to the PLLN
# field of RCC_PLLCFGR.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 9
    # value_source default
    # Default value: 9
    # Legal values: 2 to 432
    # Requires:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 16) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL == 9
    #   --> 1
    # Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 432) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL == 9
    #   --> 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL
    #     Requires:  (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F1") implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 16) 
    # option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL
    #     Requires:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) implies (CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLL_MUL <= 432) 
};

# SYSCLK divider
# This value is used to divide down the PLL output for use as
# the SYSCLK clock. This corresponds to the PLLP field of
# RCC_PLLCFGR
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_SYSCLK_DIV {
    # This option is not active
    # ActiveIf constraint:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values:  2 4 6 8 
};

# HCLK divider
# Divider for AHB
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_HCLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 8 16 64 128 256 512 
};

# PCLK1 divider
# Divider for APB1
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PCLK1_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: 2
    # Legal values:  1 2 4 8 16 
};

# PCLK2 divider
# Divider for APB2
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PCLK2_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values:  1 2 4 8 16 
};

# PLLQ divider
# This PLL divider is used in the F2 and F4 families to divide down the
# PLL output clock (VCO clock) for use by the USB OTG FS, SDIO
# and RNG peripherals. USB OTG FS requires a 48MHz clock and
# other peripherals require a clock no greater than 48MHz.
#
cdl_option CYGHWR_HAL_CORTEXM_STM32_CLOCK_PLLQ_DIV {
    # This option is not active
    # ActiveIf constraint:  ((CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F2") || (CYGHWR_HAL_CORTEXM_STM32_FAMILY=="F4")) 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
    # Legal values: 4 to 15
};

# <
# Clock interrupt ISR priority
# Set clock ISR priority to lowest priority.
#
cdl_option CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY {
    # Calculated value: 0xE0
    # Flavor: data
    # Current_value: 0x000000E0
};

# Real-time clock constants
#
cdl_component CYGNUM_HAL_RTC_CONSTANTS {
    # There is no associated value.
};

# >
# Real-time clock numerator
#
cdl_option CYGNUM_HAL_RTC_NUMERATOR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1000000000
    # value_source default
    # Default value: 1000000000
};

# Real-time clock denominator
#
cdl_option CYGNUM_HAL_RTC_DENOMINATOR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100

    # The following properties are affected by this value
    # option CYGNUM_HAL_RTC_PERIOD
    #     DefaultValue: 1000000 / CYGNUM_HAL_RTC_DENOMINATOR
};

# Real-time clock period
# The period defined here is something of a fake, it is expressed
# in terms of a notional 1MHz clock. The value actually installed
# in the hardware is calculated from the current settings of the
# clock generation hardware.
#
cdl_option CYGNUM_HAL_RTC_PERIOD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10000
    # value_source default
    # Default value: 1000000 / CYGNUM_HAL_RTC_DENOMINATOR
    #     CYGNUM_HAL_RTC_DENOMINATOR == 100
    #   --> 10000
};

# <
# Platform has UART0 serial port
# The platform has a socket on UART0.
#
cdl_interface CYGINT_HAL_STM32_UART0 {
    # Implemented by CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL0
    #     DefaultValue: CYGINT_HAL_STM32_UART0>0
};

# Platform has UART1 serial port
# The platform has a socket on UART1.
#
cdl_interface CYGINT_HAL_STM32_UART1 {
    # Implemented by CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL1
    #     DefaultValue: CYGINT_HAL_STM32_UART1>0
};

# Platform has UART2 serial port
# The platform has a socket on UART2.
#
cdl_interface CYGINT_HAL_STM32_UART2 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL2
    #     DefaultValue: CYGINT_HAL_STM32_UART2>0
};

# Platform has UART3 serial port
# The platform has a socket on UART3.
#
cdl_interface CYGINT_HAL_STM32_UART3 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL3
    #     DefaultValue: CYGINT_HAL_STM32_UART3>0
};

# Platform has UART4 serial port
# The platform has a socket on UART4.
#
cdl_interface CYGINT_HAL_STM32_UART4 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL4
    #     DefaultValue: CYGINT_HAL_STM32_UART4>0
};

# Platform has UART5 serial port
# The platform has a socket on UART5.
#
cdl_interface CYGINT_HAL_STM32_UART5 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_CORTEXM_STM32_SERIAL5
    #     DefaultValue: CYGINT_HAL_STM32_UART5>0
};

# Remap UART0 (USART1) pins
# Remap UART0 (USART1) to alternate set of pins.
# This will usually be set by the platform
# HAL to reflect the configuration of the hardware.
#
cdl_option CYGHWR_HAL_STM32_UART0_REMAP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Remap UART1 (USART2) pins
# Remap UART1 (USART2) to alternate set of pins.
# This will usually be set by the platform
# HAL to reflect the configuration of the hardware.
#
cdl_option CYGHWR_HAL_STM32_UART1_REMAP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Remap UART2 (USART3) pins
# Remap UART2 (USART3) to alternate set of pins.
# This will usually be set by the platform
# HAL to reflect the configuration of the hardware.
#
cdl_option CYGHWR_HAL_STM32_UART2_REMAP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value NONE
    # value_source default
    # Default value: NONE
    # Legal values:  "NONE" "PARTIAL" "FULL" 
};

# Remap I2C bus 1 pins
# Remap I2C bus 1 to alternate set of pins.
# This will usually be set by the platform
# HAL to reflect the configuration of the hardware.
#
cdl_option CYGHWR_HAL_STM32_I2C1_REMAP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Remap SPI bus 1 pins
# Remap SPI bus 1 to alternate set of pins.
# This will usually be set by the platform
# HAL to reflect the configuration of the hardware.
#
cdl_option CYGHWR_HAL_STM32_SPI1_REMAP {
    # This option is not active
    # ActiveIf constraint: CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Remap SPI bus 3 pins
# Remap SPI bus 3 to alternate set of pins.
# This will usually be set by the platform
# HAL to reflect the configuration of the hardware.
# This option is only available on connectivity line
# devices.
#
cdl_option CYGHWR_HAL_STM32_SPI3_REMAP {
    # This option is not active
    # ActiveIf constraint: CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY
    #     CYGHWR_HAL_CORTEXM_STM32_CONNECTIVITY == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Use TIM2 for gprof profiling
# The STM32 variant HAL can provide support for gprof-based
# profiling. This uses timer TIM2 to generate regular interrupts,
# and the interrupt handler records the PC at the time of the
# interrupt. Disable this option if you wish to provide
# an alternative profiling timer implementation.
#
cdl_option CYGFUN_HAL_CORTEXM_STM32_PROFILE_TIMER {
    # This option is not active
    # ActiveIf constraint: CYGPKG_PROFILE_GPROF
    #     CYGPKG_PROFILE_GPROF (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Build options
# Package specific build options including control over
# compiler flags used only in building this package.
#
cdl_component CYGPKG_HAL_CORTEXM_STM32_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the STM32 variant HAL package. These flags are used
# in addition to the set of global flags.
#
cdl_option CYGPKG_HAL_CORTEXM_STM32_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the STM32 variant HAL package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_HAL_CORTEXM_STM32_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# STM32 tests
# This option specifies the set of tests for the STM32 HAL.
#
cdl_option CYGPKG_HAL_CORTEXM_STM32_TESTS {
    # This option is not active
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL (unknown) == 0
    #   --> 0

    # Calculated value:  "tests/timers" 
    # Flavor: data
    # Current_value: tests/timers
};

# ST STM32F10XXX Development Board HAL
# The STM32F10XXX HAL package provides the support needed to run
# eCos on the ST stm32f10xxx platform board.
#
cdl_package CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGHWR_HAL_CORTEXM_STM32_FAMILY == "F1" 
    #     CYGHWR_HAL_CORTEXM_STM32_FAMILY == F1
    #   --> 1
    # Requires:  CYGHWR_HAL_CORTEXM_STM32_F1 == "F103ZE" 
    #     CYGHWR_HAL_CORTEXM_STM32_F1 == F103ZE
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_CORTEXM_STM32_STM32F10XXX
    #     ActiveIf: CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX
};

# >
# Startup type
# When targetting the ST STM32F10XXX platform board it is possible to
# build the system for either RAM bootstrap or ROM bootstrap.
# Select 'RAM' when building programs to load into RAM using onboard
# debug software such as RedBoot or eCos GDB stubs.  Select 'ROM'
# when building a stand-alone application which will be put
# into ROM. The 'JTAG' type allows programs to be downloaded using a
# JTAG debugger such as a BDI3000 or PEEDI. The 'SRAM' type allows
# programs to be downloaded via a JTAG debugger into on-chip SRAM.
#
cdl_component CYG_HAL_STARTUP {
    # Flavor: data
    user_value ROM
    # value_source user
    # Default value: RAM
    # Legal values: "RAM" "SRAM" "ROM" "JTAG"

    # The following properties are affected by this value
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  (CYG_HAL_STARTUP == "RAM" ) ? 
    #                             (CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM ?
    #                             "cortexm_stm32f10xxx_extrabaseram" : "cortexm_stm32f10xxx_ram")      :
    #                             (CYG_HAL_STARTUP == "SRAM") ? "cortexm_stm32f10xxx_sram"     :
    #                             (CYG_HAL_STARTUP == "ROM" ) ? "cortexm_stm32f10xxx_rom"      :
    #                             (CYG_HAL_STARTUP == "JTAG") ? "cortexm_stm32f10xxx_jtag"     :
    #                                                           "undefined" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  (CYG_HAL_STARTUP == "RAM" ) ? 
    #                             (CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM ?
    #                             "cortexm_stm32f10xxx_extrabaseram" : "cortexm_stm32f10xxx_ram")      :
    #                             (CYG_HAL_STARTUP == "SRAM") ? "cortexm_stm32f10xxx_sram"     :
    #                             (CYG_HAL_STARTUP == "ROM" ) ? "cortexm_stm32f10xxx_rom"      :
    #                             (CYG_HAL_STARTUP == "JTAG") ? "cortexm_stm32f10xxx_jtag"     :
    #                                                           "undefined" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  (CYG_HAL_STARTUP == "RAM" ) ? 
    #                             (CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM ?
    #                             "cortexm_stm32f10xxx_extrabaseram" : "cortexm_stm32f10xxx_ram")      :
    #                             (CYG_HAL_STARTUP == "SRAM") ? "cortexm_stm32f10xxx_sram"     :
    #                             (CYG_HAL_STARTUP == "ROM" ) ? "cortexm_stm32f10xxx_rom"      :
    #                             (CYG_HAL_STARTUP == "JTAG") ? "cortexm_stm32f10xxx_jtag"     :
    #                                                           "undefined" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  (CYG_HAL_STARTUP == "RAM" ) ? 
    #                             (CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM ?
    #                             "cortexm_stm32f10xxx_extrabaseram" : "cortexm_stm32f10xxx_ram")      :
    #                             (CYG_HAL_STARTUP == "SRAM") ? "cortexm_stm32f10xxx_sram"     :
    #                             (CYG_HAL_STARTUP == "ROM" ) ? "cortexm_stm32f10xxx_rom"      :
    #                             (CYG_HAL_STARTUP == "JTAG") ? "cortexm_stm32f10xxx_jtag"     :
    #                                                           "undefined" 
    # option CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM
    #     ActiveIf: CYG_HAL_STARTUP == "RAM"
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "JTAG" 
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "JTAG" 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     DefaultValue:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "RAM" 
    # component CYGBLD_HAL_CORTEXM_STM32F10XXX_GDB_STUBS
    #     Requires:  CYG_HAL_STARTUP == "ROM" 
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" 
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
    # option CYGBLD_BUILD_REDBOOT_WITH_THREADS
    #     ActiveIf:  CYG_HAL_STARTUP != "RAM" 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" ||  CYG_HAL_STARTUP == "ROMRAM" 
    # option CYGPRI_REDBOOT_ROM_MONITOR
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" ||  CYG_HAL_STARTUP == "ROMRAM" 
};

# Memory layout
#
cdl_component CYGHWR_MEMORY_LAYOUT {
    # Calculated value:  (CYG_HAL_STARTUP == "RAM" ) ? 
    #                             (CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM ?
    #                             "cortexm_stm32f10xxx_extrabaseram" : "cortexm_stm32f10xxx_ram")      :
    #                             (CYG_HAL_STARTUP == "SRAM") ? "cortexm_stm32f10xxx_sram"     :
    #                             (CYG_HAL_STARTUP == "ROM" ) ? "cortexm_stm32f10xxx_rom"      :
    #                             (CYG_HAL_STARTUP == "JTAG") ? "cortexm_stm32f10xxx_jtag"     :
    #                                                           "undefined" 
    #     CYG_HAL_STARTUP == ROM
    #     CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM == 0
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    # Flavor: data
    # Current_value: cortexm_stm32f10xxx_rom

    # The following properties are affected by this value
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".ldi>" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".h>" 
};

# >
# Additional reserved space at base of RAM
# If you are using a RedBoot with additional components enabled,
# such as networking, RedBoot may be occupying additional RAM.
# In such cases, an eCos application loaded by RedBoot must
# reserve additional space at the base of RAM to accommodate
# RedBoot's extra RAM requirements. This option, specified in
# bytes, allows the amount of extra reserved space to be
# increased beyond the default.
#
cdl_option CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM {
    # This option is not active
    # ActiveIf constraint: CYG_HAL_STARTUP == "RAM"
    #     CYG_HAL_STARTUP == ROM
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
    # Legal values: 0 to 0x80000

    # The following properties are affected by this value
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated:  (CYG_HAL_STARTUP == "RAM" ) ? 
    #                             (CYGMEM_HAL_CORTEXM_STM32_STM32F10XXX_EXTRA_BASE_RAM ?
    #                             "cortexm_stm32f10xxx_extrabaseram" : "cortexm_stm32f10xxx_ram")      :
    #                             (CYG_HAL_STARTUP == "SRAM") ? "cortexm_stm32f10xxx_sram"     :
    #                             (CYG_HAL_STARTUP == "ROM" ) ? "cortexm_stm32f10xxx_rom"      :
    #                             (CYG_HAL_STARTUP == "JTAG") ? "cortexm_stm32f10xxx_jtag"     :
    #                                                           "undefined" 
};

# Memory layout linker script fragment
#
cdl_option CYGHWR_MEMORY_LAYOUT_LDI {
    # Calculated value:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".ldi>" 
    #     CYGHWR_MEMORY_LAYOUT == cortexm_stm32f10xxx_rom
    # Flavor: data
    # Current_value: <pkgconf/mlt_cortexm_stm32f10xxx_rom.ldi>
};

# Memory layout header file
#
cdl_option CYGHWR_MEMORY_LAYOUT_H {
    # Calculated value:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".h>" 
    #     CYGHWR_MEMORY_LAYOUT == cortexm_stm32f10xxx_rom
    # Flavor: data
    # Current_value: <pkgconf/mlt_cortexm_stm32f10xxx_rom.h>
};

# <
# Input Clock frequency
# Main clock input.
#
cdl_option CYGARC_HAL_CORTEXM_STM32_INPUT_CLOCK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8000000
    # value_source default
    # Default value: 8000000
    # Legal values: 0 to 1000000000
};

# Number of communication channels on the board
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS {
    # Calculated value: 2
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
};

# Debug serial port
# The ST STM32F10XXX platform board has two serial ports. This option
# chooses which port will be used to connect to a host
# running GDB.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL {
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE == 1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# Diagnostic serial port
# The ST STM32F10XXX has two serial ports. This option
# chooses which port will be used for diagnostic output.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL {
    # This option is not active
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 2
};

# Console serial port baud rate
# This option controls the default baud rate used for the
# console connection.
# RedBoot usess polling to transfer data over this port and
# might not be able to keep up with baud rates above the
# default, particularly when doing XYZmodem downloads. The
# interrupt-driven device driver is able to handle these
# baud rates, so any high speed application transfers should
# use that instead.
# Note: this should match the value chosen for the GDB port if the
# diagnostic and GDB port are the same.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: 115200
    # Legal values: 9600 19200 38400 57600 115200

    # The following properties are affected by this value
    # option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL0_BAUD
    #     DefaultValue:  CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD 
    # option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL1_BAUD
    #     DefaultValue: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    # option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL2_BAUD
    #     DefaultValue: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    # option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL3_BAUD
    #     DefaultValue: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    # option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL4_BAUD
    #     DefaultValue: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
    # option CYGNUM_IO_SERIAL_CORTEXM_STM32_SERIAL5_BAUD
    #     DefaultValue: CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD
};

# GDB serial port baud rate
# This option controls the default baud rate used for the
# GDB connection.
# RedBoot usess polling to transfer data over this port and
# might not be able to keep up with baud rates above the
# default, particularly when doing XYZmodem downloads. The
# interrupt-driven device driver is able to handle these
# baud rates, so any high speed application transfers should
# use that instead.
# Note: this should match the value chosen for the console port if the
# console and GDB port are the same.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 115200
    # value_source default
    # Default value: 115200
    # Legal values: 9600 19200 38400 57600 115200
};

# stm32f10xxx HAL build options
# Package specific build options including control over
# compiler flags used only in building this HAL.
#
cdl_component CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags
# for building this HAL. These flags are used
# in addition to the set of global flags.
#
cdl_option CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Werror
    # value_source default
    # Default value: -Werror
};

# Suppressed compiler flags
# This option modifies the set of compiler flags
# for building this HAL. These flags are
# removed from the set of global flags if
# present.
#
cdl_option CYGPKG_HAL_CORTEXM_STM32_STM32F10XXX_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# Create StubROM SREC and binary files
# This component causes the ELF image generated by the
# build process to be converted to S-Record and binary
# files.
#
cdl_component CYGBLD_HAL_CORTEXM_STM32F10XXX_GDB_STUBS {
    # This option is not active
    # ActiveIf constraint: CYGBLD_BUILD_COMMON_GDB_STUBS
    #     CYGBLD_BUILD_COMMON_GDB_STUBS == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
    # Requires:  CYG_HAL_STARTUP == "ROM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1
};

# <
# <
# <
# <
# Infrastructure
# Common types and useful macros.
# Tracing and assertion facilities.
# Package startup options.
#
cdl_package CYGPKG_INFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_IO_SPI
    #     Requires: CYGPKG_INFRA CYGPKG_HAL
    # package CYGPKG_HAL
    #     Requires: CYGPKG_INFRA
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGPKG_INFRA
};

# >
# Asserts & Tracing
# The eCos source code contains a significant amount of
# internal debugging support, in the form of assertions and
# tracing.
# Assertions check at runtime that various conditions are as
# expected; if not, execution is halted.
# Tracing takes the form of text messages that are output
# whenever certain events occur, or whenever functions are
# called or return.
# The most important property of these checks and messages is
# that they are not required for the program to run.
# It is prudent to develop software with assertions enabled,
# but disable them when making a product release, thus
# removing the overhead of that checking.
# It is possible to enable assertions and tracing
# independently.
# There are also options controlling the exact behaviour of
# the assertion and tracing facilities, thus giving users
# finer control over the code and data size requirements.
#
cdl_component CYGPKG_INFRA_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD
    #     ActiveIf: CYGPKG_INFRA_DEBUG
};

# >
# Use asserts
# If this option is defined, asserts in the code are tested.
# Assert functions (CYG_ASSERT()) are defined in
# 'include/cyg/infra/cyg_ass.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no checking of the asserted conditions.
#
cdl_component CYGDBG_USE_ASSERTS {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0
};

# >
# Preconditions
# This option allows individual control of preconditions.
# A precondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_PRECONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_PRECONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Postconditions
# This option allows individual control of postconditions.
# A postcondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_POSTCONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_POSTCONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Loop invariants
# This option allows individual control of loop invariants.
# A loop invariant is one type of assert, which it is
# useful to control separately from more general asserts,
# particularly since a loop invariant is typically evaluated
# a great many times when used correctly.
# The function is CYG_LOOP_INVARIANT(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_LOOP_INVARIANTS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use assert text
# All assertions within eCos contain a text message
# which should give some information about the condition
# being tested.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information if an assertion actually gets
# triggered.
#
cdl_option CYGDBG_INFRA_DEBUG_ASSERT_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use tracing
# If this option is defined, tracing operations
# result in output or logging, depending on other options.
# This may have adverse effects on performance, if the time
# taken to output message overwhelms the available CPU
# power or output bandwidth.
# Trace functions (CYG_TRACE()) are defined in
# 'include/cyg/infra/cyg_trac.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no trace information.
#
cdl_component CYGDBG_USE_TRACING {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT
    #     ActiveIf: CYGDBG_USE_TRACING
};

# >
# Trace function reports
# This option allows individual control of
# function entry/exit tracing, independent of
# more general tracing output.
# This may be useful to remove clutter from a
# trace log.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_REPORTS {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use trace text
# All trace calls within eCos contain a text message
# which should give some information about the circumstances.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Trace output implementations
#
cdl_interface CYGINT_INFRA_DEBUG_TRACE_IMPL {
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER, inactive, enabled
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGDBG_USE_ASSERTS
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    # component CYGDBG_USE_TRACING
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
};

# Null output
# A null output module which is useful when
# debugging interactively; the output routines
# can be breakpointed rather than have them actually
# 'print' something.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Simple output
# An output module which produces simple output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Fancy output
# An output module which produces fancy output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Buffered tracing
# An output module which buffers output
# from tracing and assertion events. The stored
# messages are output when an assert fires, or
# CYG_TRACE_PRINT() (defined in <cyg/infra/cyg_trac.h>)
# is called.
# Of course, there will only be stored messages
# if tracing per se (CYGDBG_USE_TRACING)
# is enabled above.
#
cdl_component CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Trace buffer size
# The size of the trace buffer. This counts the number
# of trace records stored. When the buffer fills it
# either wraps, stops recording, or generates output.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 5 to 65535
};

# Wrap trace buffer when full
# When the trace buffer has filled with records it
# starts again at the beginning. Hence only the last
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Halt trace buffer when full
# When the trace buffer has filled with records it
# stops recording. Hence only the first
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer when full
# When the trace buffer has filled with records it
# prints the contents of the buffer. The buffer is then
# emptied and the system continues.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer on assert fail
# When an assertion fails the trace buffer will be 
# printed to the default diagnostic device.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use function names
# All trace and assert calls within eCos contain a
# reference to the builtin macro '__PRETTY_FUNCTION__',
# which evaluates to a string containing
# the name of the current function.
# This is useful when reading a trace log.
# It is possible to suppress the use of the function name
# by disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_PSEUDOMACRO {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Startup options
# Some packages require a startup routine to be called.
# This can be carried out by application code, by supplying
# a routine called cyg_package_start() which calls the
# appropriate package startup routine(s).
# Alternatively, this routine can be constructed automatically
# and configured to call the startup routines of your choice.
#
cdl_component CYGPKG_INFRA_STARTUP {
    # There is no associated value.
};

# >
# Start uITRON subsystem
# Generate a call to initialize the
# uITRON compatibility subsystem
# within the system version of cyg_package_start().
# This enables compatibility with uITRON.
# You must configure uITRON with the correct tasks before
# starting the uItron subsystem.
# If this is disabled, and you want to use uITRON,
# you must call cyg_uitron_start() from your own
# cyg_package_start() or cyg_userstart().
#
cdl_option CYGSEM_START_UITRON_COMPATIBILITY {
    # This option is not active
    # ActiveIf constraint: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0
};

# <
# Smaller slower memcpy()
# Enabling this option causes the implementation of
# the standard memcpy() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memcpy() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMCPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Smaller slower memset()
# Enabling this option causes the implementation of
# the standard memset() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memset() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMSET {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide empty C++ delete functions
# To deal with virtual destructors, where the correct delete()
# function must be called for the derived class in question, the
# underlying delete is called when needed, from destructors.  This
# is regardless of whether the destructor is called by delete itself.
# So there is a reference to delete() from all destructors.  The
# default builtin delete() attempts to call free() if there is
# one defined.  So, if you have destructors, and you have free(),
# as in malloc() and free(), any destructor counts as a reference
# to free().  So the dynamic memory allocation code is linked
# in regardless of whether it gets explicitly called. This
# increases code and data size needlessly.
# To defeat this undesirable behaviour, we define empty versions
# of delete and delete[].  But doing this prevents proper use
# of dynamic memory in C++ programs via C++'s new and delete
# operators.
# Therefore, this option is provided
# for explicitly disabling the provision of these empty functions,
# so that new and delete can be used, if that is what is required.
#
cdl_option CYGFUN_INFRA_EMPTY_DELETE_FUNCTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Threshold for valid number of delete calls
# Some users don't know about the empty delete function and then
# wonder why their C++ classes are leaking memory. If
# INFRA_DEBUG is enabled we keep a counter for the number of
# times delete is called. If it goes above this threshold we throw
# an assertion failure. This should point heavy users of
# delete in the right direction without upsetting those who want
# an empty delete function. 
#
cdl_option CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD {
    # This option is not active
    # ActiveIf constraint: CYGPKG_INFRA_DEBUG
    #     CYGPKG_INFRA_DEBUG == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
};

# Provide dummy abort() function
# This option controls the inclusion of a dummy abort() function.
# Parts of the C and C++ compiler runtime systems contain references
# to abort(), particulary in the C++ exception handling code. It is
# not possible to eliminate these references, so this dummy function
# in included to satisfy them. It is not expected that this function
# will ever be called, so its current behaviour is to simply loop.
#
cdl_option CYGFUN_INFRA_DUMMY_ABORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGINT_ISO_EXIT == 0 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1
    # Requires: !CYGINT_ISO_EXIT
    #     CYGINT_ISO_EXIT == 0
    #   --> 1
};

# Reset platform at end of test case execution
# If this option is set then test case programs will reset the platform
# when they terminate, as opposed to the default which is to just hang
# in a loop.
#
cdl_option CYGSEM_INFRA_RESET_ON_TEST_EXIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide dummy strlen() function
# This option controls the inclusion of a dummy strlen() function.
# Parts of the C and C++ compiler runtime systems contain references
# to strlen(), particulary in the C++ exception handling code. It is
# not possible to eliminate these references, so this dummy function
# in included to satisfy them. While it is not expected that this function
# will ever be called, it is functional but uses the simplest, smallest
# algorithm. There is a faster version of strlen() in the C library.
#
cdl_option CYGFUN_INFRA_DUMMY_STRLEN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_ISO_STRING_STRFUNCS == 0 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 0
    # Requires: !CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 0
};

# Make all compiler warnings show as errors
# Enabling this option will cause all compiler warnings to show
# as errors and bring the library build to a halt. This is used
# to ensure that the code base is warning free, and thus ensure
# that newly introduced warnings stand out and get fixed before
# they show up as weird run-time behavior.
#
cdl_option CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -Werror") 
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #   --> 0
};

# Make compiler and assembler communicate by pipe
# Enabling this option will cause the compiler to feed the
# assembly output the the assembler via a pipe instead of
# via a temporary file. This normally reduces the build
# time.
#
cdl_option CYGBLD_INFRA_CFLAGS_PIPE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -pipe") 
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #   --> 0
};

# Infra build options
# Package specific build options including control over
# compiler flags used only in building this package.
#
cdl_component CYGPKG_INFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are used
# in addition to the set of global flags.
#
cdl_option CYGPKG_INFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed linker flags
# This option modifies the set of linker flags for
# building the eCos infra package tests. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_LDFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wl,--gc-sections
    # value_source default
    # Default value: -Wl,--gc-sections
};

# Additional linker flags
# This option modifies the set of linker flags for
# building the eCos infra package tests. These flags are added to
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_LDFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wl,--fatal-warnings
    # value_source default
    # Default value: -Wl,--fatal-warnings
};

# Infra package tests
#
cdl_component CYGPKG_INFRA_TESTS {
    # Calculated value:  "tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2" 
    # Flavor: data
    # Current_value: tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2
};

# >
# Number of times a test runs
# This option controls the number of times tests will execute their
# basic function.  Not all tests will honor this setting, but those
# that do will execute the test N times before terminating.  A value
# less than 0 indicates to run forever.
#
cdl_option CYGNUM_TESTS_RUN_COUNT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# <
# Redboot ROM monitor
# doc: redboot-guide/redboot-guide.html
# This package supports the Redboot [stand-alone debug monitor]
# using eCos as the underlying board support mechanism.
#
cdl_package CYGPKG_REDBOOT {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK == 0 
    #     CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK == 0
    #   --> 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_HAL_OPTIONS
    #     ActiveIf: CYGPKG_REDBOOT
    # option CYGSEM_IO_ETH_DRIVERS_WARN
    #     ActiveIf: CYGPKG_REDBOOT
    # component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS
    #     ActiveIf: CYGPKG_REDBOOT
};

# >
# Include support for ELF file format
#
cdl_component CYGSEM_REDBOOT_ELF {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Use the virtual address in the ELF headers
# The ELF headers contain both a virtual and a physical address
# for where code/data should be loaded. By default the physical
# address is used but sometimes it is necassary to use the
# virtual address because of bugy toolchains
#
cdl_option CYGOPT_REDBOOT_ELF_VIRTUAL_ADDRESS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Methods of loading images using redboot
#
cdl_interface CYGINT_REDBOOT_LOAD_METHOD {
    # Implemented by CYGBLD_BUILD_REDBOOT_WITH_XYZMODEM, active, enabled
    # Implemented by CYGPKG_REDBOOT_NETWORKING, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 2

    # The following properties are affected by this value
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_REDBOOT_LOAD_METHOD
};

# Build Redboot ROM ELF image
# This option enables the building of the Redboot ELF image.
# The image may require further relocation or symbol
# stripping before being converted to a binary image.
# This is handled by a rule in the target CDL.
#
cdl_component CYGBLD_BUILD_REDBOOT {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == current
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: ! CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_MEMFUNCS
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1
    # Requires: CYGINT_REDBOOT_LOAD_METHOD
    #     CYGINT_REDBOOT_LOAD_METHOD == 2
    #   --> 1

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_BIN
    #     ActiveIf: CYGBLD_BUILD_REDBOOT
};

# >
# Include GDB support in RedBoot
# RedBoot normally includes support for the GDB debugging
# protocols. This option allows this to be disabled which
# may yield a substantial savings in terms of code and memory 
# usage by RedBoot.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_GDB {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 1
    #   --> 1
    # Requires: CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 1
    #   --> 1
};

# Threads debugging support
# Enabling this option will include special code in the
# GDB stubs to support debugging of threaded programs.  In
# the case of eCos programs, this support allows GDB to
# have complete access to the eCos threads in the
# program.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_THREADS {
    # ActiveIf constraint:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT == 1
    #   --> 1
};

# Customized version string
# Use this option to define a customized version "string" for
# RedBoot.  Note: this value is only cosmetic, displayed by the
# "version" command, but is useful for providing site specific
# information about the RedBoot configuration.
#
cdl_option CYGDAT_REDBOOT_CUSTOM_VERSION {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Enable command line editing
# If this option is non-zero, RedBoot will remember the
# last N command lines.  These lines may be reused.
# Enabling this history will also enable rudimentary
# editting of the lines themselves.
#
cdl_option CYGNUM_REDBOOT_CMD_LINE_EDITING {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_CMD_LINE_ANSI_SEQUENCES
    #     ActiveIf: CYGNUM_REDBOOT_CMD_LINE_EDITING != 0
    # option CYGBLD_REDBOOT_CMD_LINE_HISTORY
    #     Requires:  CYGNUM_REDBOOT_CMD_LINE_EDITING > 0 
};

# Enable command line editing using ANSI arrows, etc
# If this option is enabled, RedBoot will accept standard ANSI key
# sequences for cursor movement (along with the emacs style keys).
#
cdl_option CYGSEM_REDBOOT_CMD_LINE_ANSI_SEQUENCES {
    # ActiveIf constraint: CYGNUM_REDBOOT_CMD_LINE_EDITING != 0
    #     CYGNUM_REDBOOT_CMD_LINE_EDITING == 16
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Enable history command and expansion
# Enabling this option will allow RedBoot to provide a
# history command to list previous commands. Also enables
# history expansion via '!'  character similar to bash
# shell.
#
cdl_option CYGBLD_REDBOOT_CMD_LINE_HISTORY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  CYGNUM_REDBOOT_CMD_LINE_EDITING > 0 
    #     CYGNUM_REDBOOT_CMD_LINE_EDITING == 16
    #   --> 1
};

# Number of unique RAM segments on platform
# Change this option to be the number of memory segments which are
# supported by the platform.  If the value is greater than 1, then
# a platform specific function must provide information about the
# additional segments.
#
cdl_option CYGBLD_REDBOOT_MAX_MEM_SEGMENTS {
    # Flavor: data
    user_value 2
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_HAL_OPTIONS
    #     Requires:  CYGBLD_REDBOOT_MAX_MEM_SEGMENTS == 2 
};

# Include support gzip/zlib decompression
#
cdl_component CYGBLD_BUILD_REDBOOT_WITH_ZLIB {
    # This option is not active
    # ActiveIf constraint: CYGPKG_COMPRESS_ZLIB
    #     CYGPKG_COMPRESS_ZLIB (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER
    #     ActiveIf:  CYGBLD_BUILD_REDBOOT_WITH_ZLIB &&  CYGOPT_REDBOOT_FIS 
};

# >
# Size of zlib decompression buffer
# This is the size of the buffer filled with incoming data
# during load before calls are made to the decompressor
# function. For ethernet downloads this can be made bigger
# (at the cost of memory), but for serial downloads on slow
# processors it may be necessary to reduce the size to
# avoid serial overruns. zlib appears to bail out if less 
# than five bytes are available initially so this is the 
# minimum.
#
cdl_option CYGNUM_REDBOOT_LOAD_ZLIB_BUFFER {
    # This option is not active
    # The parent CYGBLD_BUILD_REDBOOT_WITH_ZLIB is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 64
    # value_source default
    # Default value: 64
    # Legal values: 5 to 256
};

# Support compression of Flash images
# This CDL indicates whether flash images can
# be decompressed from gzip/zlib format into RAM.
#
cdl_option CYGPRI_REDBOOT_ZLIB_FLASH {
    # This option is not active
    # The parent CYGBLD_BUILD_REDBOOT_WITH_ZLIB is not active
    # ActiveIf constraint: CYGPKG_REDBOOT_FLASH
    #     CYGPKG_REDBOOT_FLASH == 1
    #   --> 1
    # ActiveIf constraint: !CYGSEM_IO_FLASH_READ_INDIRECT
    #     CYGSEM_IO_FLASH_READ_INDIRECT == 0
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Include GZIP uncompress command
# Enable this option to include a 'gunzip' command 
# to uncompress GZIP compressed data.
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_GUNZIP {
    # This option is not active
    # The parent CYGBLD_BUILD_REDBOOT_WITH_ZLIB is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Include support for xyzModem downloads
# doc: ref/download-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_XYZMODEM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Allow the load-command write into Flash.
# Write images direct to Flash via the load command.
# We assume anything which is invalid RAM is flash, hence
# the requires statement
#
cdl_option CYGBLD_REDBOOT_LOAD_INTO_FLASH {
    # ActiveIf constraint: CYGPKG_REDBOOT_FLASH
    #     CYGPKG_REDBOOT_FLASH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS
    #     CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS == 1
    #   --> 1
};

# Include POSIX checksum command
# doc: ref/cksum-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_CKSUM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_CRC
    #     CYGPKG_CRC == current
    #   --> 1
};

# Include memory fill command
# doc: ref/mfill-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_MFILL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory compare command
# doc: ref/mcmp-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_MCMP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory copy command
# doc: ref/mcopy-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_MCOPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include memory dump command
# doc: ref/dump-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_DUMP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Include cache command
# doc: ref/cache-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_CACHES {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Include exec command
# doc: ref/exec-command.html
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_EXEC {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Include I/O Memory commands 'iopeek' and 'iopoke'
#
cdl_option CYGBLD_BUILD_REDBOOT_WITH_IOMEM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Granularity of timer/ticks
# This option controls the granularity of the timers.
# Faster CPUs can afford higher granularity (lower values)
# which should give higher network performance since the stack
# is purely polled.
#
cdl_option CYGDBG_REDBOOT_TICK_GRANULARITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 250
    # value_source default
    # Default value: 250
    # Legal values:  50 100 250 500 1000 
};

# Redboot Networking
# This option includes networking support in RedBoot.
#
cdl_component CYGPKG_REDBOOT_NETWORKING {
    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_IO_ETH_DRIVERS_PASS_PACKETS
    #     DefaultValue:  0 != CYGPKG_REDBOOT_NETWORKING 
    # component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS
    #     ActiveIf: CYGPKG_REDBOOT_NETWORKING
};

# >
# Print net debug information
# This option is overriden by the configuration stored 
# in flash.
#
cdl_option CYGDBG_REDBOOT_NET_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Support TFTP for download
# This option enables the use of the TFTP protocol for 
# download
#
cdl_option CYGSEM_REDBOOT_NET_TFTP_DOWNLOAD {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support HTTP for download
# This option enables the use of the HTTP protocol for 
# download
#
cdl_option CYGSEM_REDBOOT_NET_HTTP_DOWNLOAD {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Default IP address
# This IP address is the default used by RedBoot if
# a BOOTP/DHCP server does not respond. The numbers
# should be separated by *commas*, and not dots. If
# an IP address is configured into the Flash
# configuration, that will be used in preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_IP_ADDR {
    # Flavor: booldata
    user_value 1 "192, 168, 0, 24"
    # value_source user
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 0 0
};

# >
# Default bootp server
# This IP address is the default server
# address used by RedBoot if a BOOTP/DHCP
# server does not respond. The numbers should
# be separated by *commas*, and not dots. If
# an IP address is configured into the Flash
# configuration, that will be used in
# preference.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_BOOTP_SERVER_IP_ADDR {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 0 0
};

# <
# Enable BOOTP/DHCP support
# Use BOOTP/DHCP protocol to obtain pertinent IP
# addresses, such as the client, server, gateway,
# etc.
#
cdl_component CYGPKG_REDBOOT_NETWORKING_BOOTP {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# >
# Enable DHCP in addition to BOOTP support
# Enables DHCP protocol in addition to BOOTP.  If not enabled,
# only BOOTP will be suported.
#
cdl_component CYGSEM_REDBOOT_NETWORKING_DHCP {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_BOOTP is disabled

    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 1
};

# Enable verbose output from BOOTP/DHCP code
# Enable more verbose output from BOOTP/DHCP that logs rx/tx
# packet types and state-machine transitions.
#
cdl_component CYGSEM_REDBOOT_NETWORKING_BOOTP_VERBOSE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_BOOTP is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Do not try to use BOOTP/DHCP
# By default Redboot tries to use BOOTP/DHCP to
# get an IP address when BOOTP/DHCP support is
# present in Redboot. If there's no BOOTP/DHCP
# server on your network use this option to
# avoid waiting for the BOOTP/DHCP timeouts and
# retries. This option is overriden by the
# configuration stored in flash.
#
cdl_option CYGSEM_REDBOOT_DEFAULT_NO_BOOTP {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_BOOTP is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Use a gateway for non-local IP traffic
# Enabling this option will allow the RedBoot networking
# stack to use a [single] gateway to reach a non-local
# IP address.  If disabled, RedBoot will only be able to
# reach nodes on the same subnet.
#
cdl_component CYGSEM_REDBOOT_NETWORKING_USE_GATEWAY {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 1
};

# >
# Default gateway IP address
# This IP address is the default used by RedBoot
# if a BOOTP/DHCP server does not respond. The
# numbers should be separated by *commas*, and
# not dots. If an IP address is configured into
# the Flash configuration, that will be used in
# preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_GATEWAY_IP_ADDR {
    # Flavor: booldata
    user_value 1 "192, 168, 0, 1"
    # value_source user
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 0 0
};

# Default IP address mask
# This IP address mask is the default used by
# RedBoot if a BOOTP/DHCP server does not
# respond. The numbers should be separated by
# *commas*, and not dots. If an IP address is
# configured into the Flash configuration, that
# will be used in preference.
#
cdl_component CYGDAT_REDBOOT_DEFAULT_IP_ADDR_MASK {
    # Flavor: booldata
    user_value 1 "255, 255, 255, 0"
    # value_source user
    # Default value: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "255, 255, 255, 0" 
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 0 0
};

# <
# TCP port to listen for incoming connections
# RedBoot will 'listen' on this port for incoming TCP 
# connections. This allows outside connections to be made 
# to the platform, either for GDB or RedBoot commands.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_TCP_PORT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 9000
    # value_source default
    # Default value: 9000
};

# Number of [network] packet buffers
# RedBoot may need to buffer network data to support
# various connections.  This option allows control
# over the number of such buffered packets, and in
# turn, controls the amount of memory used by RedBoot
# (which is not available to user applications).
# Each packet buffer takes up about 1514 bytes.
# Note: there is little need to make this larger than
# the default.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_MAX_PKTBUF {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
    # Legal values: 3 to 8
};

# DNS support
# When this option is enabled, RedBoot will be built with
# support for DNS, allowing use of hostnames on the command
# line.
#
cdl_component CYGPKG_REDBOOT_NETWORKING_DNS {
    # This option is not active
    # ActiveIf constraint: CYGPKG_NS_DNS
    #     CYGPKG_NS_DNS (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: !CYGPKG_NS_DNS_BUILD
    #     CYGPKG_NS_DNS_BUILD (unknown) == 0
    #   --> 1
};

# >
# Default DNS IP
# This option sets the IP of the default DNS. The IP can be
# changed at runtime as well.
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_IP {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS is not active
    # ActiveIf constraint: !CYGSEM_REDBOOT_FLASH_CONFIG
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0.0.0.0
    # value_source default
    # Default value: 0.0.0.0
};

# Timeout in DNS lookup
# This option sets the timeout used when looking up an
# address via the DNS. Default is 10 seconds.
#
cdl_option CYGNUM_REDBOOT_NETWORKING_DNS_TIMEOUT {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# Support the use of a domain name
# This option controls if Redboot supports domain
# names when performing DNS lookups
#
cdl_component CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Default DNS domain
# This option sets the default DNS domain name.
# This value will be overwritten by the value in
# flash or a domain returned by DHCP
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_DEFAULT_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Get DNS domain from Flash
# This option enables getting the domain name 
# from the flash configuration. This can later be 
# overwritten by a value learnt from DHCP
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_FCONFIG_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled
    # ActiveIf constraint: CYGSEM_REDBOOT_FLASH_CONFIG
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Use DNS domain from DHCP
# This option enables the use of the domain name
# returned by DHCP.
#
cdl_option CYGPKG_REDBOOT_NETWORKING_DNS_DHCP_DOMAIN {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# BOOTP/DHCP DNS domain buffer size
# This options sets the size of the static
# buffer used by BOOTP/DHCP to store the DNS
# domain name. The domain name will not be
# set if the buffer is too small to hold it.
#
cdl_option CYGNUM_REDBOOT_NETWORK_DNS_DOMAIN_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is not active
    # The parent CYGPKG_REDBOOT_NETWORKING_DNS_WITH_DOMAIN is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
};

# <
# <
# Default network device driver
# This is the name of the default network device to use.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_NETWORK_DEVICE {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_NET_DRIVERS > 1 
    #     CYGHWR_NET_DRIVERS == 1
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"\""
    # value_source default
    # Default value: "\"\""
};

# Initialize only one net device
# This option tells RedBoot to stop initializing network
# devices when it finds the first device which is
# successfully initialized. The default behavior causes
# all network devices to be initialized.
#
cdl_option CYGSEM_REDBOOT_NETWORK_INIT_ONE_DEVICE {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_NET_DRIVERS > 1 
    #     CYGHWR_NET_DRIVERS == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Let RedBoot use any I/O channel for its console.
# If this option is enabled then RedBoot will attempt to use all
# defined serial I/O channels for its console device.  Once input
# arrives at one of these channels then the console will use only
# that port.
#
cdl_option CYGPKG_REDBOOT_ANY_CONSOLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Let RedBoot adjust the baud off the serial console.
# If this option is enabled then RedBoot will support commands 
# to set and query the baud rate on the selected console.
#
cdl_option CYGSEM_REDBOOT_VARIABLE_BAUD_RATE {
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Run a platform specific startup function.
# If this option is enabled then RedBoot will execute a platform
# specific startup function before entering into its command line
# processing.  This allows the platform to perform any special
# setups before RedBoot actually starts running.  Note: the entire
# RedBoot environment will already be initialized at this point.
#
cdl_option CYGSEM_REDBOOT_PLF_STARTUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Run a platform specific ESA validation function.
# If this option is enabled then RedBoot will execute a platform
# specific function to validate an ethernet ESA.  This would be
# useful if the address must conform to standards set by the
# hardware manufacturer, etc.
#
cdl_option CYGSEM_REDBOOT_PLF_ESA_VALIDATE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Maximum command line length
# This option allows control over how long the CLI command line
# should be.  This space will be allocated statically
# rather than from RedBoot's stack.
#
cdl_option CYGPKG_REDBOOT_MAX_CMD_LINE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value: 256
};

# Command processing idle timeout (ms)
# This option controls the timeout period before the
# command processing is considered 'idle'.  Making this
# number smaller will cause idle processing to take place
# more often, etc.  The default value of 10ms is a reasonable
# tradeoff between responsiveness and overhead.
#
cdl_option CYGNUM_REDBOOT_CLI_IDLE_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# Validate RAM addresses during load
# This option controls whether or not RedBoot will make
# sure that memory being used by the "load" command is
# in fact in user RAM.  Leaving the option enabled makes
# for a safer environment, but this check may not be valid
# on all platforms, thus the ability to disable it.  
# ** Disable this only with great care **
#
cdl_option CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGBLD_REDBOOT_LOAD_INTO_FLASH
    #     Requires: CYGSEM_REDBOOT_VALIDATE_USER_RAM_LOADS
};

# Base address of flash device redboot should use
# This option controls how redboot finds the flash
# device. Setting this option to an address will
# cause redboot to use that address as the base of the 
# flash device.
#
cdl_option CYGNUM_REDBOOT_FLASH_BASE {
    # Flavor: booldata
    user_value 1 0x64000000
    # value_source user
    # Default value: 0 0

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_HAL_OPTIONS
    #     Requires:  CYGNUM_REDBOOT_FLASH_BASE == 0x64000000 
};

# Allow RedBoot to support FLASH programming
# If this option is enabled then RedBoot will provide commands
# to manage images in FLASH memory.  These images can be loaded
# into memory for execution or executed in place.
#
cdl_component CYGPKG_REDBOOT_FLASH {
    # ActiveIf constraint: CYGHWR_IO_FLASH_DEVICE
    #     CYGHWR_IO_FLASH_DEVICE == 3
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGPRI_REDBOOT_ZLIB_FLASH
    #     ActiveIf: CYGPKG_REDBOOT_FLASH
    # option CYGBLD_REDBOOT_LOAD_INTO_FLASH
    #     ActiveIf: CYGPKG_REDBOOT_FLASH
    # component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS
    #     ActiveIf: CYGPKG_REDBOOT_FLASH
};

# >
# Byte order used to store info in flash.
# This option controls the byte ordering used to store
# the FIS directory info and flash config info.
#
cdl_option CYGOPT_REDBOOT_FLASH_BYTEORDER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value NATURAL
    # value_source default
    # Default value: NATURAL
    # Legal values: "NATURAL" "MSBFIRST" "LSBFIRST" 
};

# RedBoot Flash Image System support
# doc: ref/flash-image-system.html
# This option enables the Flash Image System commands
# and support within RedBoot.  If disabled, simple Flash
# access commands such as "fis write" will still exist.
# This option would be disabled for targets that need simple
# FLASH manipulation, but do not have the need or space for
# complete image management.
#
cdl_option CYGOPT_REDBOOT_FIS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_REDBOOT_FIS_CONTENTS
    #     ActiveIf: CYGOPT_REDBOOT_FIS
    # option CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG
    #     ActiveIf:  CYGOPT_REDBOOT_FIS &&  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    # component CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER
    #     ActiveIf:  CYGBLD_BUILD_REDBOOT_WITH_ZLIB &&  CYGOPT_REDBOOT_FIS 
};

# Max number of chunks of free space to manage
# If this option is defined then "fis free" will
# rely on the FIS directory to determine what space is
# free within the FLASH.  This option controls the
# maximum number of free segment which can be handled
# (typically this number is small).  If this option is
# not enabled, the the archaic behaviour of actually
# scanning the FLASH for erased sectors (unreliable)
# will be used to determine what's free and what's
# not.
#
cdl_option CYGDAT_REDBOOT_FIS_MAX_FREE_CHUNKS {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 32
    # value_source default
    # Default value: 1 32
};

# Flash Image System default directory contents
#
cdl_component CYGPKG_REDBOOT_FIS_CONTENTS {
    # ActiveIf constraint: CYGOPT_REDBOOT_FIS
    #     CYGOPT_REDBOOT_FIS == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# >
# Flash block containing the Directory
# Which block of flash should hold the directory
# information. Positive numbers are absolute block
# numbers.  Negative block numbers count backwards
# from the last block.  eg 2 means block 2, -2
# means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -1
    # value_source default
    # Default value: -1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK
    #     Requires:  CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK !=
    #                                        CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK 
};

# Redundant Flash Image System Directory Support
# This option enables the use of a redundant FIS
# directory within RedBoot.  If enabled a flash block
# will be reserved for a second copy of the fis
# directory. Doing this allow for power failure safe
# updates of the directory by the application.
#
cdl_component CYGOPT_REDBOOT_REDUNDANT_FIS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  0 == CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG 
    #     CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG == 1
    #   --> 0
};

# >
# Flash block containing the backup Directory
# Which block of flash should hold the redundant
# directory information. Positive numbers are
# absolute block numbers. Negative block numbers
# count backwards from the last block. eg 2 means
# block 2, -2 means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK {
    # This option is not active
    # The parent CYGOPT_REDBOOT_REDUNDANT_FIS is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -3
    # value_source default
    # Default value: -3
    # Requires:  CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK !=
    #                                        CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK 
    #     CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK == 0
    #     CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK == -1
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK
    #     Requires:  CYGNUM_REDBOOT_FIS_REDUNDANT_DIRECTORY_BLOCK !=
    #                                        CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK 
};

# <
# Pseudo-file to describe reserved area
# If an area of FLASH is reserved, it is informative to
# have a fis entry describing it.  This option controls
# creation of such an entry by default in the fis init
# command.
#
cdl_option CYGOPT_REDBOOT_FIS_RESERVED_BASE {
    # This option is not active
    # ActiveIf constraint:  0 != CYGNUM_REDBOOT_FLASH_RESERVED_BASE 
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# File to describe RedBoot boot image
# Normally a ROM-startup RedBoot image is first in the
# FLASH, and the system boots using that image.  This
# option controls creation of an entry describing it in
# the fis init command.  It might be disabled if a
# platform has an immutable boot image of its own, where
# we use a POST-startup RedBoot instead, which performs
# less board initialization.
#
cdl_option CYGOPT_REDBOOT_FIS_REDBOOT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_FIS_REDBOOT_POST
    #     DefaultValue: !CYGOPT_REDBOOT_FIS_REDBOOT
    # option CYGBLD_REDBOOT_MIN_IMAGE_SIZE
    #     DefaultValue:  CYGOPT_REDBOOT_FIS_REDBOOT ? 0x20000 : 0 
};

# File to describe RedBoot POST-compatible image
# This option controls creation of an entry describing a
# POST-startup RedBoot image in the fis init command.
# Not all platforms support POST-startup.  A platform
# might have both for testing purposes, where the
# eventual user would substitute their own POST code for
# the initial ROM-startup RedBoot, and then jump to the
# POST-compatible RedBoot immediately following.
#
cdl_component CYGOPT_REDBOOT_FIS_REDBOOT_POST {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: !CYGOPT_REDBOOT_FIS_REDBOOT
    #     CYGOPT_REDBOOT_FIS_REDBOOT == 0
    #   --> 1
};

# >
# Offset of POST image from FLASH start
# This option specifies the offset for a POST image from
# the start of FLASH.  If unset, then the fis entry
# describing the POST image will be placed where
# convenient.
#
cdl_option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET {
    # This option is not active
    # The parent CYGOPT_REDBOOT_FIS_REDBOOT_POST is disabled

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
    # Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    #     CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET == 0
    #     CYGBLD_REDBOOT_FLASH_BOOT_OFFSET == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# <
# File to describe RedBoot backup image
# This option controls creation of an entry describing a
# backup RedBoot image in the fis init command.
# Conventionally a RAM-startup RedBoot image is kept
# under this name for use in updating the ROM-based
# RedBoot that boots the board.
#
cdl_option CYGOPT_REDBOOT_FIS_REDBOOT_BACKUP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Include ARM SIB ID in FIS
# If set, this option will cause the last 5 words of
# the FIS to include the special ID needed for the
# flash to be recognized as a reserved area for RedBoot
# by an ARM BootRom monitor.
#
cdl_option CYGOPT_REDBOOT_FIS_DIRECTORY_ARM_SIB_ID {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Size of FIS directory entry
# The FIS directory is limited to one single flash
# sector. If your flash has tiny sectors, you may wish
# to reduce this value in order to get more slots in
# the FIS directory.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value: 256
};

# Number of FIS directory entries
# The FIS directory normally occupies a single flash
# sector. Adjusting this value can allow for more than
# one flash sector to be used, which is useful if your
# sectors are very small.
#
cdl_option CYGNUM_REDBOOT_FIS_DIRECTORY_ENTRY_COUNT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
};

# Maximum RedBoot image size
# This option controls the maximum length reserved
# for the RedBoot boot image in the FIS table.
# This should be a multiple of the flash's erase
# block size.
#
cdl_option CYGBLD_REDBOOT_MIN_IMAGE_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGOPT_REDBOOT_FIS_REDBOOT ? 0x20000 : 0 
    #     CYGOPT_REDBOOT_FIS_REDBOOT == 0
    #   --> 0
};

# Offset from start of FLASH to RedBoot boot image
# This option controls where the RedBoot boot image is 
# located relative to the start of FLASH.
#
cdl_option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGNUM_REDBOOT_FLASH_RESERVED_BASE
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #   --> 0
    # Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    #     CYGNUM_REDBOOT_FLASH_RESERVED_BASE == 0
    #     CYGBLD_REDBOOT_FLASH_BOOT_OFFSET == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FIS_REDBOOT_POST_OFFSET >=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# Size of reserved area at start of FLASH
# This option reserves an area at the start of
# FLASH where RedBoot will never interfere; it is
# expected that this area contains
# (non-RedBoot-based) POST code or some other boot
# monitor that executes before RedBoot.
#
cdl_option CYGNUM_REDBOOT_FLASH_RESERVED_BASE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGOPT_REDBOOT_FIS_RESERVED_BASE
    #     ActiveIf:  0 != CYGNUM_REDBOOT_FLASH_RESERVED_BASE 
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     DefaultValue: CYGNUM_REDBOOT_FLASH_RESERVED_BASE
    # option CYGBLD_REDBOOT_FLASH_BOOT_OFFSET
    #     Requires:  CYGNUM_REDBOOT_FLASH_RESERVED_BASE <=  CYGBLD_REDBOOT_FLASH_BOOT_OFFSET 
};

# List of Flash devices that are reserved
# This option lists the base addresses of any Flash
# devices that should not be managed by the flash
# image system. In particular, this means that these
# devices will not be considered when looking for free
# space in which to create new files. It should consist
# of a comma-separated list of (virtual) addresses.
#
cdl_option CYGNUM_REDBOOT_FLASH_RESERVED_DEVICES {
    # Flavor: booldata
    user_value 0 0
    # value_source user
    # Default value: 0 0
};

# <
# Keep all RedBoot FLASH data blocks locked.
# When this option is enabled, RedBoot will keep configuration
# data and the FIS directory blocks implicitly locked.  While
# this is somewhat safer, it does add overhead during updates.
#
cdl_option CYGSEM_REDBOOT_FLASH_LOCK_SPECIAL {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_IO_FLASH_BLOCK_LOCKING != 0 
    #     CYGHWR_IO_FLASH_BLOCK_LOCKING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use CRC checksums on FIS images.
# When this option is enabled, RedBoot will use CRC checksums
# when reading and writing flash images.
#
cdl_option CYGSEM_REDBOOT_FIS_CRC_CHECK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_CRC
    #     CYGPKG_CRC == current
    #   --> 1
};

# ARM FLASH drivers support SIB flash block structure
# This interface is implemented by a flash driver
# to indicate that it supports the ARM SIB flash
# block structure
#
cdl_interface CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED {
    # No options implement this inferface
    # This option is not active
    # ActiveIf constraint: CYGPKG_HAL_ARM
    #     CYGPKG_HAL_ARM (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_REDBOOT_ARM_FLASH_SIB
    #     ActiveIf: CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
};

# Use ARM SIB flash block structure
# This option is used to interpret ARM Flash System 
# information blocks.
#
cdl_option CYGHWR_REDBOOT_ARM_FLASH_SIB {
    # This option is not active
    # ActiveIf constraint: CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED
    #     CYGINT_REDBOOT_ARM_FLASH_SIB_SUPPORTED == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Keep RedBoot configuration data in FLASH
# When this option is enabled, RedBoot will keep configuration
# data in a separate block of FLASH memory.  This data will
# include such items as the node IP address or startup scripts.
#
cdl_component CYGSEM_REDBOOT_FLASH_CONFIG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGPKG_IO_FLASH != 0 
    #     CYGPKG_IO_FLASH == current
    #   --> 1

    # The following properties are affected by this value
    # component CYGDAT_REDBOOT_DEFAULT_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # option CYGDAT_REDBOOT_DEFAULT_BOOTP_SERVER_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # component CYGDAT_REDBOOT_DEFAULT_GATEWAY_IP_ADDR
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "0, 0, 0, 0" 
    # component CYGDAT_REDBOOT_DEFAULT_IP_ADDR_MASK
    #     DefaultValue: CYGSEM_REDBOOT_FLASH_CONFIG ? 0 :  "255, 255, 255, 0" 
    # option CYGPKG_REDBOOT_NETWORKING_DNS_IP
    #     ActiveIf: !CYGSEM_REDBOOT_FLASH_CONFIG
    # option CYGPKG_REDBOOT_NETWORKING_DNS_FCONFIG_DOMAIN
    #     ActiveIf: CYGSEM_REDBOOT_FLASH_CONFIG
    # option CYGFUN_REDBOOT_BOOT_SCRIPT
    #     ActiveIf:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
    # component CYGPKG_DEVS_ETH_DM9000_ETH_REDBOOT_HOLDS_ESA_VARS
    #     ActiveIf: CYGSEM_REDBOOT_FLASH_CONFIG
};

# >
# Length of configuration data in FLASH
# This option is used to control the amount of memory and FLASH
# to be used for configuration options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_CONFIG_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4096
    # value_source default
    # Default value: 4096
};

# Style of media used for persistent data storage
# Persistent data storage can either be held in 'norma' FLASH
# or some other device (represented by the 'EEPROM' choice).
# The different styles utilize different access methods.
#
cdl_option CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA {
    # Flavor: data
    user_value FLASH
    # value_source user
    # Default value: FLASH
    # Legal values:  "FLASH" "EEPROM" 

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG
    #     ActiveIf:  CYGOPT_REDBOOT_FIS &&  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    # option CYGSEM_REDBOOT_FLASH_CONFIG_READONLY_FALLBACK
    #     DefaultValue:  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
};

# Merged config data and FIS directory
# If this option is set, then the FIS directory and FLASH 
# configuration database will be stored in the same physical
# FLASH block.
#
cdl_option CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG {
    # ActiveIf constraint:  CYGOPT_REDBOOT_FIS &&  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    #     CYGOPT_REDBOOT_FIS == 1
    #     CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == FLASH
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_REDBOOT_REDUNDANT_FIS
    #     Requires:  0 == CYGSEM_REDBOOT_FLASH_COMBINED_FIS_AND_CONFIG 
};

# Which block of flash to use
# Which block of flash should hold the configuration 
# information. Positive numbers are absolute block numbers. 
# Negative block numbers count backwards from the last block.
# eg 2 means block 2, -2 means the last but one block.
#
cdl_option CYGNUM_REDBOOT_FLASH_CONFIG_BLOCK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -2
    # value_source default
    # Default value: -2
};

# Support simple macros/aliases in FLASH
# This option is used to allow support for simple text-based
# macros (aliases).  These aliases are kept in the FLASH
# configuration data (persistent storage).
#
cdl_option CYGSEM_REDBOOT_FLASH_ALIASES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Length of strings in FLASH configuration data
# This option is used to control the amount of memory
# and FLASH to be used for string configuration
# options (persistent storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_STRING_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
};

# Length of configuration script(s) in FLASH
# This option is used to control the amount of memory and 
# FLASH to be used for configuration options (persistent 
# storage).
#
cdl_option CYGNUM_REDBOOT_FLASH_SCRIPT_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
};

# Fallback to read-only FLASH configuration
# This option will cause the configuration information to
# revert to the readonly information stored in the FLASH.
# The option only takes effect after 
# 1) the config_ok flag has been set to be true,
# indicating that at one time the copy in RAM was valid;
# and
# 2) the information in RAM has been verified to be invalid
#
cdl_option CYGSEM_REDBOOT_FLASH_CONFIG_READONLY_FALLBACK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  (CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == "FLASH") 
    #     CYGHWR_REDBOOT_FLASH_CONFIG_MEDIA == FLASH
    #   --> 1
};

# <
# Allow RedBoot to support fileio
# If this option is enabled then RedBoot will provide commands
# to load files from fileio file systems such as JFFS2.
#
cdl_component CYGPKG_REDBOOT_FILEIO {
    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_FILEIO
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_REDBOOT_GETC_BUFFER
    #     DefaultValue:  CYGPKG_REDBOOT_FILEIO ? 4096 : 256 
};

# >
# Include an ls command
# If this option is enabled a simple ls command will be
# included in redboot so the contents of a directory
# can be listed
#
cdl_option CYGBLD_REDBOOT_FILEIO_WITH_LS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_FILEIO is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Allow RedBoot to support disks
# If this option is enabled then RedBoot will provide commands
# to load disk files.
#
cdl_component CYGPKG_REDBOOT_DISK {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# >
# Include Redboot commands for disk access
#
cdl_option CYGSEM_REDBOOT_DISK {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_REDBOOT_DISK_DRIVERS != 0 
    #     CYGINT_REDBOOT_DISK_DRIVERS == 0
    #   --> 0
};

# Hardware drivers for disk-type devices
#
cdl_interface CYGINT_REDBOOT_DISK_DRIVERS {
    # Implemented by CYGSEM_REDBOOT_DISK_IDE, inactive, enabled
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_DISK
    #     DefaultValue:  CYGINT_REDBOOT_DISK_DRIVERS != 0 
};

# Maximum number of supported disks
# This option controls the number of disks supported by 
# RedBoot.
#
cdl_option CYGNUM_REDBOOT_MAX_DISKS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4
};

# Maximum number of partitions per disk
# This option controls the maximum number of supported 
# partitions per disk.
#
cdl_option CYGNUM_REDBOOT_MAX_PARTITIONS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
};

# Support IDE disks.
# When this option is enabled, RedBoot will support IDE disks.
#
cdl_component CYGSEM_REDBOOT_DISK_IDE {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled
    # ActiveIf constraint:  CYGINT_HAL_PLF_IF_IDE != 0 
    #     CYGINT_HAL_PLF_IF_IDE == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Work with VMware virtual disks
# This option controls the disk driver behavior at 
# ide-init
#
cdl_option CYGSEM_REDBOOT_DISK_IDE_VMWARE {
    # This option is not active
    # The parent CYGSEM_REDBOOT_DISK_IDE is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Support Linux second extended filesystems.
# When this option is enabled, RedBoot will support EXT2 
# filesystems.
#
cdl_component CYGSEM_REDBOOT_DISK_EXT2FS {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support ISO9660 filesystems.
# When this option is enabled, RedBoot will support ISO9660 
# filesystems.
#
cdl_component CYGSEM_REDBOOT_DISK_ISO9660 {
    # This option is not active
    # The parent CYGPKG_REDBOOT_DISK is disabled

    # Calculated value: 0
    # Flavor: bool
    # Current value: 0
};

# <
# Boot scripting
# doc: ref/persistent-state-flash.html
# This contains options related to RedBoot's boot script
# functionality.
#
cdl_component CYGPKG_REDBOOT_BOOT_SCRIPT {
    # There is no associated value.
};

# >
# Boot scripting enabled
# This option controls whether RedBoot boot script
# functionality is enabled.
#
cdl_option CYGFUN_REDBOOT_BOOT_SCRIPT {
    # ActiveIf constraint:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
    #     CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT == 0
    #     CYGSEM_REDBOOT_FLASH_CONFIG == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Use default RedBoot boot script
# If enabled, this option will tell RedBoot to use the 
# value of this option as a default boot script.
#
cdl_option CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT {
    # Flavor: booldata
    user_value 0 0
    # value_source user
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_REDBOOT_BOOT_SCRIPT
    #     ActiveIf:  CYGDAT_REDBOOT_DEFAULT_BOOT_SCRIPT ||  CYGSEM_REDBOOT_FLASH_CONFIG 
};

# Resolution (in ms) for script timeout value.
# This option controls the resolution of the script
# timeout.  The value is specified in milliseconds
# (ms), thus to have the script timeout be defined in
# terms of tenths of seconds, use 100.
#
cdl_option CYGNUM_REDBOOT_BOOT_SCRIPT_TIMEOUT_RESOLUTION {
    # Flavor: data
    user_value 1000
    # value_source user
    # Default value: 1000
};

# Script default timeout value
# This option is used to set the default timeout for startup
# scripts, when they are enabled.
#
cdl_option CYGNUM_REDBOOT_BOOT_SCRIPT_DEFAULT_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
};

# <
# Support RTC for time & date functions
# When this option is enabled, RedBoot will support commands to
# query and set the real time clock (time and date)
#
cdl_option CYGSEM_REDBOOT_RTC {
    # This option is not active
    # ActiveIf constraint:  CYGPKG_IO_WALLCLOCK 
    #     CYGPKG_IO_WALLCLOCK (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Behave like a ROM monitor
# Enabling this option will allow RedBoot to provide ROM 
# monitor-style services to programs which it executes.
#
cdl_option CYGPRI_REDBOOT_ROM_MONITOR {
    # ActiveIf constraint:  CYG_HAL_STARTUP == "ROM" ||  CYG_HAL_STARTUP == "ROMRAM" 
    #     CYG_HAL_STARTUP == ROM
    #     CYG_HAL_STARTUP == ROM
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
    # Requires: CYGSEM_HAL_ROM_MONITOR
    #     CYGSEM_HAL_ROM_MONITOR == 1
    #   --> 1
};

# Allow RedBoot to handle GNUPro application 'syscalls'.
# If this option is enabled then RedBoot will install a
# syscall handler to support debugging of applications
# based on GNUPro newlib/bsp.
#
cdl_component CYGSEM_REDBOOT_BSP_SYSCALLS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGPKG_HAL_GDB_FILEIO
    #     ActiveIf: CYGSEM_REDBOOT_BSP_SYSCALLS
};

# >
# Support additional syscalls for 'gprof' profiling
# Support additional syscalls to support a periodic callback
# function for histogram-style profiling, and an enquire/set
# of the tick rate.
# The application must use the GNUPro newlib facilities
# to set this up.
#
cdl_option CYGSEM_REDBOOT_BSP_SYSCALLS_GPROF {
    # This option is not active
    # The parent CYGSEM_REDBOOT_BSP_SYSCALLS is disabled
    # ActiveIf constraint:  0 < CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT 
    #     CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Does the HAL support 'gprof' profiling?
#
cdl_interface CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT {
    # No options implement this inferface
    # This option is not active
    # The parent CYGSEM_REDBOOT_BSP_SYSCALLS is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_REDBOOT_BSP_SYSCALLS_GPROF
    #     ActiveIf:  0 < CYGINT_REDBOOT_BSP_SYSCALLS_GPROF_SUPPORT 
};

# Do not raise SIGTRAP when program exits
# For some (single shot) newlib based programs,
# exiting and returning a termination status may be
# the normal expected behavior.
#
cdl_option CYGOPT_REDBOOT_BSP_SYSCALLS_EXIT_WITHOUT_TRAP {
    # This option is not active
    # The parent CYGSEM_REDBOOT_BSP_SYSCALLS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Use a common buffer for Zlib and FIS
# Use a common memory buffer for both the zlib workspace
# and FIS directory operations. This can save a substantial
# amount of RAM, especially when flash sectors are large.
#
cdl_component CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER {
    # This option is not active
    # ActiveIf constraint:  CYGBLD_BUILD_REDBOOT_WITH_ZLIB &&  CYGOPT_REDBOOT_FIS 
    #     CYGBLD_BUILD_REDBOOT_WITH_ZLIB == 0
    #     CYGOPT_REDBOOT_FIS == 1
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Size of Zlib/FIS common buffer
# Size of common buffer to allocate. Must be at least the
# size of one flash sector.
#
cdl_option CYGNUM_REDBOOT_FIS_ZLIB_COMMON_BUFFER_SIZE {
    # This option is not active
    # The parent CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER is not active
    # The parent CYGOPT_REDBOOT_FIS_ZLIB_COMMON_BUFFER is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x0000C000
    # value_source default
    # Default value: 0x0000C000
    # Legal values: 0x4000 to 0x80000000
};

# <
# Allocate heap in RedBoot workspace
# If the MEMALLOC package is present, it usually allocates
# the whole of memory not used by the program to the heap.
# In RedBoot this is not a good idea, since we need space to
# load application programs. Setting this option causes RedBoot
# to allocate the heap at the top of RAM by reserving part of
# RedBoot's workspace memory, leaving the rest of memory free.
#
cdl_component CYGMEM_REDBOOT_WORKSPACE_HEAP {
    # This option is not active
    # ActiveIf constraint: CYGPKG_MEMALLOC
    #     CYGPKG_MEMALLOC (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGPKG_MEMALLOC_MALLOC_ALLOCATORS
    #     CYGPKG_MEMALLOC_MALLOC_ALLOCATORS (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Size of RedBoot heap
# Size of RedBoot heap. This defines how much memory is to be
# allocated for the heap.
#
cdl_option CYGMEM_REDBOOT_WORKSPACE_HEAP_SIZE {
    # This option is not active
    # The parent CYGMEM_REDBOOT_WORKSPACE_HEAP is not active
    # The parent CYGMEM_REDBOOT_WORKSPACE_HEAP is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00010000
    # value_source default
    # Default value: 0x00010000
    # Legal values: 0x4000 to 0x80000000
};

# <
# Buffer size in getc when loading images
# When loading images a buffer is used between redboot and the
# underlying storage medium, eg a filesystem, or a socket etc.
# The size of this buffer can have a big impart on load speed.
#
cdl_option CYGNUM_REDBOOT_GETC_BUFFER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value:  CYGPKG_REDBOOT_FILEIO ? 4096 : 256 
    #     CYGPKG_REDBOOT_FILEIO == 0
    #   --> 256
};

# <
# Redboot HAL options
# This option lists the target's requirements for a valid Redboot
# configuration.
#
cdl_component CYGPKG_REDBOOT_HAL_OPTIONS {
    # ActiveIf constraint: CYGPKG_REDBOOT
    #     CYGPKG_REDBOOT == current
    #   --> 1

    # There is no associated value.
    # Requires:  CYGNUM_REDBOOT_FLASH_BASE == 0x64000000 
    #     CYGNUM_REDBOOT_FLASH_BASE == 0x64000000
    #   --> 1
    # Requires:  CYGBLD_REDBOOT_MAX_MEM_SEGMENTS == 2 
    #     CYGBLD_REDBOOT_MAX_MEM_SEGMENTS == 2
    #   --> 1
};

# >
# Build Redboot ROM binary images
# This option enables the conversion of the Redboot ELF
# image to binary image formats suitable for ROM programming.
#
cdl_option CYGBLD_BUILD_REDBOOT_BIN {
    # ActiveIf constraint: CYGBLD_BUILD_REDBOOT
    #     CYGBLD_BUILD_REDBOOT == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# ISO C and POSIX infrastructure
# eCos supports implementations of ISO C libraries and POSIX
# implementations. This package provides infrastructure used by
# all such implementations.
#
cdl_package CYGPKG_ISOINFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_IO_FLASH
    #     Requires: CYGPKG_ISOINFRA
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGPKG_ISOINFRA
    # package CYGPKG_LIBC_STRING
    #     Requires: CYGPKG_ISOINFRA
};

# >
# Startup and termination
#
cdl_component CYGPKG_ISO_STARTUP {
    # There is no associated value.
};

# >
# main() startup implementations
# Implementations of this interface arrange for a user-supplied
# main() to be called in an ISO compatible environment.
#
cdl_interface CYGINT_ISO_MAIN_STARTUP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
    #     CYGINT_ISO_MAIN_STARTUP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MAIN_STARTUP
    #     Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
};

# environ implementations
# Implementations of this interface provide the environ
# variable required by POSIX.
#
cdl_interface CYGINT_ISO_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ENVIRON 
    #     CYGINT_ISO_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_ENVIRON 
};

# <
# ctype.h functions
#
cdl_component CYGPKG_ISO_CTYPE_H {
    # There is no associated value.
};

# >
# Number of implementations of ctype functions
#
cdl_interface CYGINT_ISO_CTYPE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_CTYPE 
    #     CYGINT_ISO_CTYPE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_CTYPE
    #     Requires:  1 >= CYGINT_ISO_CTYPE 
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires: CYGINT_ISO_CTYPE
};

# Ctype implementation header
#
cdl_option CYGBLD_ISO_CTYPE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Error handling
#
cdl_component CYGPKG_ISO_ERRNO {
    # There is no associated value.
};

# >
# Number of implementations of error codes
#
cdl_interface CYGINT_ISO_ERRNO_CODES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
    #     CYGINT_ISO_ERRNO_CODES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO_CODES
    #     Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
};

# Error codes implementation header
#
cdl_option CYGBLD_ISO_ERRNO_CODES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of errno variable
#
cdl_interface CYGINT_ISO_ERRNO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ERRNO 
    #     CYGINT_ISO_ERRNO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO
    #     Requires:  1 >= CYGINT_ISO_ERRNO 
};

# errno variable implementation header
#
cdl_option CYGBLD_ISO_ERRNO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Locale-related functions
#
cdl_component CYGPKG_ISO_LOCALE {
    # There is no associated value.
};

# >
# Number of implementations of locale functions
#
cdl_interface CYGINT_ISO_LOCALE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_LOCALE 
    #     CYGINT_ISO_LOCALE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_LOCALE
    #     Requires:  1 >= CYGINT_ISO_LOCALE 
};

# Locale implementation header
#
cdl_option CYGBLD_ISO_LOCALE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard I/O-related functionality
#
cdl_component CYGPKG_ISO_STDIO {
    # There is no associated value.
};

# >
# Number of implementations of stdio file types
#
cdl_interface CYGINT_ISO_STDIO_FILETYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
    #     CYGINT_ISO_STDIO_FILETYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILETYPES
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
};

# Stdio file types implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILETYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Stdio standard streams implementations
#
cdl_interface CYGINT_ISO_STDIO_STREAMS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
    #     CYGINT_ISO_STDIO_STREAMS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_STREAMS
    #     Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
};

# Stdio standard streams implementation header
# This header file must define stdin, stdout
# and stderr.
#
cdl_option CYGBLD_ISO_STDIO_STREAMS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file operations
#
cdl_interface CYGINT_ISO_STDIO_FILEOPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
    #     CYGINT_ISO_STDIO_FILEOPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEOPS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
};

# Stdio file operations implementation header
# This header controls the file system operations on a file
# such as remove(), rename(), tmpfile(), tmpnam() and associated
# constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEOPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file access  functionals
#
cdl_interface CYGINT_ISO_STDIO_FILEACCESS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
    #     CYGINT_ISO_STDIO_FILEACCESS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEACCESS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
};

# Stdio file access implementation header
# This header controls the file access operations
# such as fclose(), fflush(), fopen(), freopen(), setbuf(),
# setvbuf(), and associated constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEACCESS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio formatted I/O
#
cdl_interface CYGINT_ISO_STDIO_FORMATTED_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
    #     CYGINT_ISO_STDIO_FORMATTED_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FORMATTED_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
};

# Stdio formatted I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_FORMATTED_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio character I/O
#
cdl_interface CYGINT_ISO_STDIO_CHAR_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
    #     CYGINT_ISO_STDIO_CHAR_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_CHAR_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
};

# Stdio character I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_CHAR_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio direct I/O
#
cdl_interface CYGINT_ISO_STDIO_DIRECT_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
    #     CYGINT_ISO_STDIO_DIRECT_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_DIRECT_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
};

# Stdio direct I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_DIRECT_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file positioning
#
cdl_interface CYGINT_ISO_STDIO_FILEPOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
    #     CYGINT_ISO_STDIO_FILEPOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEPOS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
};

# Stdio file positioning implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILEPOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio error handling
#
cdl_interface CYGINT_ISO_STDIO_ERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
    #     CYGINT_ISO_STDIO_ERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_ERROR
    #     Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
};

# Stdio error handling implementation header
#
cdl_option CYGBLD_ISO_STDIO_ERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fd-related function implementations
#
cdl_interface CYGINT_ISO_STDIO_POSIX_FDFUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
    #     CYGINT_ISO_STDIO_POSIX_FDFUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_POSIX_FDFUNCS
    #     Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
};

# POSIX fd-related function implementation header
#
cdl_option CYGBLD_ISO_STDIO_POSIX_FDFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard general utility functions
#
cdl_component CYGPKG_ISO_STDLIB {
    # There is no associated value.
};

# >
# String conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
    #     CYGINT_ISO_STDLIB_STRCONV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
};

# String conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# String to FP conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV_FLOAT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
    #     CYGINT_ISO_STDLIB_STRCONV_FLOAT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV_FLOAT
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
};

# String to FP conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_FLOAT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Random number generator implementations
#
cdl_interface CYGINT_ISO_RAND {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_RAND 
    #     CYGINT_ISO_RAND == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_RAND
    #     Requires:  1 >= CYGINT_ISO_RAND 
};

# Random number generator implementation header
#
cdl_option CYGBLD_ISO_RAND_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Malloc implementations
#
cdl_interface CYGINT_ISO_MALLOC {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MALLOC 
    #     CYGINT_ISO_MALLOC == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLOC
    #     Requires:  1 >= CYGINT_ISO_MALLOC 
    # option CYGFUN_LIBC_STRING_STRDUP
    #     ActiveIf: CYGINT_ISO_MALLOC
};

# Malloc implementation header
#
cdl_option CYGBLD_ISO_MALLOC_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Mallinfo() implementations
#
cdl_interface CYGINT_ISO_MALLINFO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MALLINFO 
    #     CYGINT_ISO_MALLINFO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLINFO
    #     Requires:  1 >= CYGINT_ISO_MALLINFO 
};

# Mallinfo() implementation header
#
cdl_option CYGBLD_ISO_MALLINFO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program exit functionality implementations
#
cdl_interface CYGINT_ISO_EXIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_EXIT 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_EXIT
    #     Requires:  1 >= CYGINT_ISO_EXIT 
    # option CYGFUN_INFRA_DUMMY_ABORT
    #     Requires: !CYGINT_ISO_EXIT
    # option CYGFUN_INFRA_DUMMY_ABORT
    #     DefaultValue:  CYGINT_ISO_EXIT == 0 
};

# Program exit functionality implementation header
#
cdl_option CYGBLD_ISO_EXIT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program environment implementations
#
cdl_interface CYGINT_ISO_STDLIB_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
    #     CYGINT_ISO_STDLIB_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
};

# Program environment implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ENVIRON_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# system() implementations
#
cdl_interface CYGINT_ISO_STDLIB_SYSTEM {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
    #     CYGINT_ISO_STDLIB_SYSTEM == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_SYSTEM
    #     Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
};

# system() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_SYSTEM_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# bsearch() implementations
#
cdl_interface CYGINT_ISO_BSEARCH {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSEARCH 
    #     CYGINT_ISO_BSEARCH == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSEARCH
    #     Requires:  1 >= CYGINT_ISO_BSEARCH 
};

# bsearch() implementation header
#
cdl_option CYGBLD_ISO_BSEARCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# qsort() implementations
#
cdl_interface CYGINT_ISO_QSORT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_QSORT 
    #     CYGINT_ISO_STDLIB_QSORT (unknown) == 0
    #   --> 1
};

# qsort() implementation header
#
cdl_option CYGBLD_ISO_QSORT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# abs()/labs() implementations
#
cdl_interface CYGINT_ISO_ABS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_ABS 
    #     CYGINT_ISO_STDLIB_ABS (unknown) == 0
    #   --> 1
};

# abs()/labs() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ABS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# div()/ldiv() implementations
#
cdl_interface CYGINT_ISO_DIV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_DIV 
    #     CYGINT_ISO_STDLIB_DIV (unknown) == 0
    #   --> 1
};

# div()/ldiv() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_DIV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Header defining the implementation's MB_CUR_MAX
#
cdl_option CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Multibyte character implementations
#
cdl_interface CYGINT_ISO_STDLIB_MULTIBYTE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
    #     CYGINT_ISO_STDLIB_MULTIBYTE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_MULTIBYTE
    #     Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
};

# Multibyte character implementation header
#
cdl_option CYGBLD_ISO_STDLIB_MULTIBYTE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# String functions
#
cdl_component CYGPKG_ISO_STRING {
    # There is no associated value.
};

# >
# Number of implementations of strerror() function
#
cdl_interface CYGINT_ISO_STRERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRERROR 
    #     CYGINT_ISO_STRERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRERROR
    #     Requires:  1 >= CYGINT_ISO_STRERROR 
};

# strerror() implementation header
#
cdl_option CYGBLD_ISO_STRERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# memcpy() implementation header
#
cdl_option CYGBLD_ISO_MEMCPY_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# memset() implementation header
#
cdl_option CYGBLD_ISO_MEMSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of strtok_r() function
#
cdl_interface CYGINT_ISO_STRTOK_R {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRTOK_R 
    #     CYGINT_ISO_STRTOK_R == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRTOK_R
    #     Requires:  1 >= CYGINT_ISO_STRTOK_R 
};

# strtok_r() implementation header
#
cdl_option CYGBLD_ISO_STRTOK_R_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of locale-specific string  functions
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_interface CYGINT_ISO_STRING_LOCALE_FUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
    #     CYGINT_ISO_STRING_LOCALE_FUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_LOCALE_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
};

# Locale-specific string functions' implementation  header
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_option CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of BSD string functions
#
cdl_interface CYGINT_ISO_STRING_BSD_FUNCS {
    # Implemented by CYGFUN_LIBC_STRING_BSD_FUNCS, active, disabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
    #     CYGINT_ISO_STRING_BSD_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_BSD_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
};

# BSD string functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_BSD_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/bsdstring.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
};

# Number of implementations of other mem*() functions
#
cdl_interface CYGINT_ISO_STRING_MEMFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_MEMFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    # component CYGPKG_IO_ETH_DRIVERS_STAND_ALONE
    #     Requires: CYGINT_ISO_STRING_MEMFUNCS
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_ISO_STRING_MEMFUNCS
};

# Other mem*() functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_MEMFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of other ISO C str*()  functions
# This covers the other str*() functions defined by ISO C.
#
cdl_interface CYGINT_ISO_STRING_STRFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_STRFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    # package CYGPKG_IO_FLASH
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
    # component CYGPKG_IO_ETH_DRIVERS_NET
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
    # option CYGFUN_INFRA_DUMMY_STRLEN
    #     Requires: !CYGINT_ISO_STRING_STRFUNCS
    # option CYGFUN_INFRA_DUMMY_STRLEN
    #     DefaultValue:  CYGINT_ISO_STRING_STRFUNCS == 0 
    # component CYGBLD_BUILD_REDBOOT
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
};

# Other ISO C str*() functions' implementation  header
# This covers the other str*() functions defined by ISO C.
#
cdl_option CYGBLD_ISO_STRING_STRFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# <
# Clock and time functionality
#
cdl_component CYGPKG_ISO_TIME {
    # There is no associated value.
};

# >
# time_t implementation header
#
cdl_option CYGBLD_ISO_TIME_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# clock_t implementation header
#
cdl_option CYGBLD_ISO_CLOCK_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# struct timeval implementation header
#
cdl_option CYGBLD_ISO_STRUCTTIMEVAL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# fnmatch implementation header
#
cdl_option CYGBLD_ISO_FNMATCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timer types
#
cdl_interface CYGINT_ISO_POSIX_TIMER_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
    #     CYGINT_ISO_POSIX_TIMER_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
};

# POSIX timer types implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clock types
#
cdl_interface CYGINT_ISO_POSIX_CLOCK_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
    #     CYGINT_ISO_POSIX_CLOCK_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCK_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
};

# POSIX clock types implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCK_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C types
#
cdl_interface CYGINT_ISO_C_TIME_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
    #     CYGINT_ISO_C_TIME_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_TIME_TYPES
    #     Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
};

# ISO C time types implementation header
#
cdl_option CYGBLD_ISO_C_TIME_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timers
#
cdl_interface CYGINT_ISO_POSIX_TIMERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
    #     CYGINT_ISO_POSIX_TIMERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMERS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
};

# POSIX timer implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clocks
#
cdl_interface CYGINT_ISO_POSIX_CLOCKS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
    #     CYGINT_ISO_POSIX_CLOCKS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCKS
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
};

# POSIX clocks implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCKS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C clock functions
#
cdl_interface CYGINT_ISO_C_CLOCK_FUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
    #     CYGINT_ISO_C_CLOCK_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_CLOCK_FUNCS
    #     Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
};

# ISO C clock functions' implementation header
#
cdl_option CYGBLD_ISO_C_CLOCK_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of tzset() function
#
cdl_interface CYGINT_ISO_TZSET {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_TZSET 
    #     CYGINT_ISO_TZSET == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TZSET
    #     Requires:  1 >= CYGINT_ISO_TZSET 
};

# tzset() implementation header
#
cdl_option CYGBLD_ISO_TZSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Signal functionality
#
cdl_component CYGPKG_ISO_SIGNAL {
    # There is no associated value.
};

# >
# Number of implementations of signal numbers
#
cdl_interface CYGINT_ISO_SIGNAL_NUMBERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
    #     CYGINT_ISO_SIGNAL_NUMBERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_NUMBERS
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
};

# Signal numbering implementation header
# This header provides the mapping of signal
# names (e.g. SIGBUS) to numbers.
#
cdl_option CYGBLD_ISO_SIGNAL_NUMBERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of signal implementations
#
cdl_interface CYGINT_ISO_SIGNAL_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
    #     CYGINT_ISO_SIGNAL_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_IMPL
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
};

# Signals implementation header
#
cdl_option CYGBLD_ISO_SIGNAL_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX real time signals feature test macro
# This defines the POSIX feature test macro
# that indicates that the POSIX real time signals
# are present.
#
cdl_interface CYGINT_POSIX_REALTIME_SIGNALS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
    #     CYGINT_POSIX_REALTIME_SIGNALS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_POSIX_REALTIME_SIGNALS
    #     Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
};

# <
# Non-local jumps functionality
#
cdl_component CYGPKG_ISO_SETJMP {
    # There is no associated value.
};

# >
# setjmp() / longjmp() implementations
#
cdl_interface CYGINT_ISO_SETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SETJMP 
    #     CYGINT_ISO_SETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SETJMP
    #     Requires:  1 >= CYGINT_ISO_SETJMP 
};

# setjmp() / longjmp() implementation header
#
cdl_option CYGBLD_ISO_SETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# sigsetjmp() / siglongjmp() implementations
#
cdl_interface CYGINT_ISO_SIGSETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGSETJMP 
    #     CYGINT_ISO_SIGSETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGSETJMP
    #     Requires:  1 >= CYGINT_ISO_SIGSETJMP 
};

# sigsetjmp() / siglongjmp() implementation header
#
cdl_option CYGBLD_ISO_SIGSETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Assertions implementation header
#
cdl_option CYGBLD_ISO_ASSERT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file control
# This covers the POSIX file control definitions,
# normally found in <fcntl.h>
#
cdl_component CYGPKG_ISO_POSIX_FCNTL {
    # There is no associated value.
};

# >
# POSIX open flags implementation header
#
cdl_option CYGBLD_ISO_OFLAG_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fcntl() implementations
#
cdl_interface CYGINT_ISO_FCNTL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_FCNTL 
    #     CYGINT_ISO_FCNTL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_FCNTL
    #     Requires:  1 >= CYGINT_ISO_FCNTL 
};

# POSIX fcntl() implementation header
#
cdl_option CYGBLD_ISO_FCNTL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file open implementations
#
cdl_interface CYGINT_ISO_OPEN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_OPEN 
    #     CYGINT_ISO_OPEN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_OPEN
    #     Requires:  1 >= CYGINT_ISO_OPEN 
};

# POSIX file open implementation header
#
cdl_option CYGBLD_ISO_OPEN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# <sys/stat.h> definitions implementation header
#
cdl_option CYGBLD_ISO_STAT_DEFS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX directory reading implementation
#
cdl_interface CYGINT_ISO_DIRENT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DIRENT 
    #     CYGINT_ISO_DIRENT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DIRENT
    #     Requires:  1 >= CYGINT_ISO_DIRENT 
};

# <dirent.h> definitions implementation header
#
cdl_option CYGBLD_ISO_DIRENT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX <sys/types.h> contents
# This covers the types required by POSIX to be in
# <sys/types.h>
#
cdl_component CYGPKG_ISO_POSIX_TYPES {
    # There is no associated value.
};

# >
# POSIX thread types implementations
#
cdl_interface CYGINT_ISO_PTHREADTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREADTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    # interface CYGINT_ISO_PMUTEXTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
};

# POSIX thread types implementation header
#
cdl_option CYGBLD_ISO_PTHREADTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex types implementations
#
cdl_interface CYGINT_ISO_PMUTEXTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1
};

# POSIX mutex types implementation header
#
cdl_option CYGBLD_ISO_PMUTEXTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# ssize_t implementation header
#
cdl_option CYGBLD_ISO_SSIZE_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Filesystem types implementation header
#
cdl_option CYGBLD_ISO_FSTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# gid_t, pid_t, uid_t implementation header
#
cdl_option CYGBLD_ISO_SCHEDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Non-POSIX <sys/types.h> contents
# This covers the extra types required by non-POSIX
# packages to be in <sys/types.h>. These would normally
# only be visible if _POSIX_SOURCE is not defined.
#
cdl_component CYGPKG_ISO_EXTRA_TYPES {
    # There is no associated value.
};

# >
# BSD compatible types
#
cdl_interface CYGINT_ISO_BSDTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSDTYPES 
    #     CYGINT_ISO_BSDTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSDTYPES
    #     Requires:  1 >= CYGINT_ISO_BSDTYPES 
};

# BSD types header
#
cdl_option CYGBLD_ISO_BSDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Utsname structure
#
cdl_component CYGPKG_ISO_UTSNAME {
    # There is no associated value.
};

# >
# Utsname header
#
cdl_option CYGBLD_ISO_UTSNAME_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX scheduler
#
cdl_component CYGPKG_ISO_SCHED {
    # There is no associated value.
};

# >
# POSIX scheduler implementations
#
cdl_interface CYGINT_ISO_SCHED_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
    #     CYGINT_ISO_SCHED_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SCHED_IMPL
    #     Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
};

# POSIX scheduler implementation header
#
cdl_option CYGBLD_ISO_SCHED_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX semaphores
#
cdl_component CYGPKG_ISO_SEMAPHORES {
    # There is no associated value.
};

# >
# POSIX semaphore implementations
#
cdl_interface CYGINT_ISO_SEMAPHORES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SEMAPHORES 
    #     CYGINT_ISO_SEMAPHORES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SEMAPHORES
    #     Requires:  1 >= CYGINT_ISO_SEMAPHORES 
};

# POSIX semaphore implementation header
#
cdl_option CYGBLD_ISO_SEMAPHORES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX message queues
#
cdl_component CYGPKG_ISO_MQUEUE {
    # There is no associated value.
};

# >
# Implementations
#
cdl_interface CYGINT_ISO_MQUEUE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MQUEUE 
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MQUEUE
    #     Requires:  1 >= CYGINT_ISO_MQUEUE 
    # option CYGNUM_ISO_MQUEUE_OPEN_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
    # option CYGNUM_ISO_MQUEUE_PRIO_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
};

# Implementation header
#
cdl_option CYGBLD_ISO_MQUEUE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Maximum number of open message queues
#
cdl_option CYGNUM_ISO_MQUEUE_OPEN_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value:  CYGNUM_POSIX_MQUEUE_OPEN_MAX > 0 ? CYGNUM_POSIX_MQUEUE_OPEN_MAX : 0 
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #   --> 0 0
};

# Maximum number of message priorities
#
cdl_option CYGNUM_ISO_MQUEUE_PRIO_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 65535
    # value_source default
    # Default value: 1 65535
};

# <
# POSIX threads
#
cdl_component CYGPKG_ISO_PTHREAD {
    # There is no associated value.
};

# >
# POSIX pthread implementations
#
cdl_interface CYGINT_ISO_PTHREAD_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
    #     CYGINT_ISO_PTHREAD_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_IMPL
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
};

# POSIX pthread implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex/cond var implementations
#
cdl_interface CYGINT_ISO_PTHREAD_MUTEX {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
    #     CYGINT_ISO_PTHREAD_MUTEX == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_MUTEX
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
};

# POSIX mutex/cond var implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_MUTEX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Limits
#
cdl_component CYGPKG_ISO_LIMITS {
    # There is no associated value.
};

# >
# POSIX pthread limits implementations
#
cdl_interface CYGINT_ISO_POSIX_LIMITS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
    #     CYGINT_ISO_POSIX_LIMITS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_LIMITS
    #     Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
};

# POSIX pthread limits implementation header
#
cdl_option CYGBLD_ISO_POSIX_LIMITS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# OPEN_MAX implementation header
#
cdl_option CYGBLD_ISO_OPEN_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# LINK_MAX implementation header
#
cdl_option CYGBLD_ISO_LINK_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# NAME_MAX implementation header
#
cdl_option CYGBLD_ISO_NAME_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# PATH_MAX implementation header
#
cdl_option CYGBLD_ISO_PATH_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX termios
#
cdl_component CYGPKG_ISO_TERMIOS {
    # There is no associated value.
};

# >
# POSIX termios implementations
#
cdl_interface CYGINT_ISO_TERMIOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_TERMIOS 
    #     CYGINT_ISO_TERMIOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TERMIOS
    #     Requires:  1 >= CYGINT_ISO_TERMIOS 
};

# POSIX termios implementation header
#
cdl_option CYGBLD_ISO_TERMIOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Dynamic load API
#
cdl_component CYGPKG_ISO_DLFCN {
    # There is no associated value.
};

# >
# Dynamic load implementations
#
cdl_interface CYGINT_ISO_DLFCN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DLFCN 
    #     CYGINT_ISO_DLFCN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DLFCN
    #     Requires:  1 >= CYGINT_ISO_DLFCN 
};

# Dynamic load implementation header
#
cdl_option CYGBLD_ISO_DLFCN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# UNIX standard functions
#
cdl_component CYGPKG_ISO_UNISTD {
    # There is no associated value.
};

# >
# POSIX timer operations implementations
#
cdl_interface CYGINT_ISO_POSIX_TIMER_OPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
    #     CYGINT_ISO_POSIX_TIMER_OPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_OPS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
};

# POSIX timer operations implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_OPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX sleep() implementations
#
cdl_interface CYGINT_ISO_POSIX_SLEEP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
    #     CYGINT_ISO_POSIX_SLEEP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_SLEEP
    #     Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
};

# POSIX sleep() implementation header
#
cdl_option CYGBLD_ISO_POSIX_SLEEP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# select()/poll() functions
#
cdl_component CYGPKG_ISO_SELECT {
    # There is no associated value.
};

# >
# select() implementations
#
cdl_interface CYGINT_ISO_SELECT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_SELECT 
    #     CYGINT_ISO_SELECT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SELECT
    #     Requires:  1 >= CYGINT_ISO_SELECT 
};

# select() implementation header
#
cdl_option CYGBLD_ISO_SELECT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# poll() implementations
#
cdl_interface CYGINT_ISO_POLL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POLL 
    #     CYGINT_ISO_POLL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POLL
    #     Requires:  1 >= CYGINT_ISO_POLL 
};

# poll() implementation header
#
cdl_option CYGBLD_ISO_POLL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# NetDB utility functions
#
cdl_component CYGPKG_ISO_NETDB {
    # There is no associated value.
};

# >
# DNS implementations
#
cdl_interface CYGINT_ISO_DNS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_DNS 
    #     CYGINT_ISO_DNS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DNS
    #     Requires:  1 >= CYGINT_ISO_DNS 
};

# DNS implementation header
#
cdl_option CYGBLD_ISO_DNS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Protocol network database implementations
#
cdl_interface CYGINT_ISO_NETDB_PROTO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
    #     CYGINT_ISO_NETDB_PROTO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_PROTO
    #     Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
};

# Protocol network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_PROTO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Services network database implementations
#
cdl_interface CYGINT_ISO_NETDB_SERV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_SERV 
    #     CYGINT_ISO_NETDB_SERV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_SERV
    #     Requires:  1 >= CYGINT_ISO_NETDB_SERV 
};

# Services network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_SERV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_ISOINFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are used in addition to the set of global flags.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are removed from the set of global flags
# if present.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Compute CRCs
# doc: ref/services-crc.html
# This package provides support for CRC calculation. Currently 
# this is the POSIX 1003 defined CRC algorithm, a 32 CRC by 
# Gary S. Brown, and a 16 bit CRC.
#
cdl_package CYGPKG_CRC {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # option CYGBLD_BUILD_REDBOOT_WITH_CKSUM
    #     Requires: CYGPKG_CRC
    # option CYGSEM_REDBOOT_FIS_CRC_CHECK
    #     Requires: CYGPKG_CRC
};

# >
# POSIX CRC tests
#
cdl_option CYGPKG_CRC_TESTS {
    # Calculated value:  "tests/crc_test" 
    # Flavor: data
    # Current_value: tests/crc_test
};

# <
# <

